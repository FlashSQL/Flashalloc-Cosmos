------------------------------------------------------------
revno: 6313
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Wed 2013-09-11 13:47:54 +0200
message:
  Bug #17420109, CS 6473 from trunk
------------------------------------------------------------
revno: 6312
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Fri 2013-08-30 09:01:06 +0200
message:
  Bug #17339221, CS 6404 from trunk
------------------------------------------------------------
revno: 6311
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Thu 2013-08-29 14:33:56 +0200
message:
  Post-push fix to 17341731 from trunk
------------------------------------------------------------
revno: 6310
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Wed 2013-08-28 12:21:47 +0200
message:
  Bug #17341731, CS 6388 from trunk
------------------------------------------------------------
revno: 6309
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Fri 2013-08-23 09:50:57 +0200
message:
  Merged Bug #Bug17211588, CS 6325 from trunk
------------------------------------------------------------
revno: 6308
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Thu 2013-08-22 10:23:52 +0200
message:
  Merge of Bug #17061480, CS 6347 from trunk
------------------------------------------------------------
revno: 6307
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Tue 2013-08-20 09:26:26 +0200
message:
  Merge of Bug #17248310, CS 6321 from trunk
------------------------------------------------------------
revno: 6306
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Tue 2013-08-20 09:25:50 +0200
message:
  Merge of Bug #17325229, CS 6320 from trunk
------------------------------------------------------------
revno: 6305
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Tue 2013-08-20 09:25:11 +0200
message:
  Merge of Bug #17320056, CS 6318 from trunk
------------------------------------------------------------
revno: 6304
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Tue 2013-08-20 09:20:21 +0200
message:
  Merge of CS 6314 from trunk
------------------------------------------------------------
revno: 6303
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: rel-572
timestamp: Tue 2013-08-20 09:19:07 +0200
message:
  Disabled some tests, merge of CS 6313 from trunk
------------------------------------------------------------
revno: 6302
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-5.7.2-m12-release
timestamp: Mon 2013-08-19 15:52:20 +0530
message:
  - Bug #17315967: INNODB: ASSERTION FAILURE IN FILE FIL0FIL.CC LINE 5685
  
    While searching into index tree, traversal might visit multiple levels
    in tree and at each level respective block is accessed or pinned.
    Page pointer that is used to short-form block->frame should be updated 
    if new block is accessed while change in index tree level.
  
    Approved by: Marko (over IM)
  
    Approved by: Erlend for 5.7.2 checkin.
------------------------------------------------------------
revno: 6301 [merge]
tags: clone-5.7.2-m12-build
committer: Satya Bodapati <satya.bodapati@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-08-18 16:39:07 +0530
message:
  Merge Additional test fix for Bug#16418661 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.76
    committer: Satya Bodapati <satya.bodapati@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sun 2013-08-18 16:37:25 +0530
    message:
      Bug#16418661 - CHANGING NAME IN FOR INNODB_DATA_FILE_PATH SHOULD NOT
      	       SUCCEED WITH LOG FILES
      
      Additional Fix for testcase failure
------------------------------------------------------------
revno: 6300
committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
branch nick: 57-wl6661
timestamp: Sat 2013-08-17 00:39:53 +0100
message:
  Tests for new variables got lost in collapse.
  log_timestamps, log_error_verbosity
  WL6661
------------------------------------------------------------
revno: 6299
committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
branch nick: 57-wl6661
timestamp: Fri 2013-08-16 20:17:40 +0100
message:
  WL#6661: Error logging: Allow control of verbosity
  
  In mysqld, all local messages ("things found on
  console / in error log") now go through a central
  function rather than through a lot of fprint()s.
  This means we can properly timestamp those lines
  with ISO 8601 compliant timestamps (likewise for
  slow and general log files); it also means that
  we can gag those messages with the new system
  variable / startup option --log_error_verbosity,
  which depraces --log_warnings / -W.
  As timestamps go, the DBA can choose between system
  time or zulu time with the new option --log_timestamps.
  
  Client programs now print their warnings prefixed by
  their name (no path, no ".exe") and the severity level
  in brackets, so "Warning: foo" from bin/mysql.exe
  becomes "mysql: [Warning] foo"
  This is useful especially in mysql_upgrade (which in
  turn calls other binaries) so we can see whether a
  warning was thrown by mysql_upgrade or one of its
  children (and in the latter case, which).
  
  On the tech side, we now have a generic hook for
  local messages. This prints to stderr by default
  (and in the case of client apps likely always will),
  but can be overridden to log elsewhere, mangle the
  string, etc. (as is done by the server once the
  facilities are initiliazed; then this goes to
  error_log_print, for better timestamps, filtering by
  verbosity level, and for printing to NT syslog on Win).
  
  We deprecate my_printf_warning() which does something
  similar, with a less clear name.
  
  New test cases added, comments clarified, old test cases
  updated.
------------------------------------------------------------
revno: 6298 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 16:03:57 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.75 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-08-16 15:57:39 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.536.27 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-08-16 15:49:13 +0300
        message:
          Merge mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.880.38
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2013-08-16 15:45:41 +0300
            message:
              Bug#17312846 CHECK TABLE ASSERTION FAILURE
              DICT_TABLE_GET_FORMAT(CLUST_INDEX->TABLE) >= 1
              
              The function row_sel_sec_rec_is_for_clust_rec() was incorrectly
              preparing to compare a NULL column prefix in a secondary index with a
              non-NULL column in a clustered index.
              
              This can trigger an assertion failure in 5.1 plugin and later. In the
              built-in InnoDB of MySQL 5.1 and earlier, we would apparently only do
              some extra work, by trimming the clustered index field for the
              comparison.
              
              The code might actually have worked properly apart from this debug
              assertion failure. It is merely doing some extra work in fetching a
              BLOB column, and then comparing it to NULL (which would return the
              same result, no matter what the BLOB contents is).
              
              While the test case involves CHECK TABLE, this could theoretically
              occur during any read that uses a secondary index on a column prefix
              of a column that can be NULL.
              
              rb#3101 approved by Mattias Jonsson
------------------------------------------------------------
revno: 6297
committer: Vamsikrishna Bhagi <vamsikrishna.bhagi@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 18:08:52 +0530
message:
  WL#6982 Make plugin column in mysql.user non-null
  
  Result mismatch fixed.
------------------------------------------------------------
revno: 6296
committer: matthias.leich@oracle.com
branch nick: mysql-trunk_merge1
timestamp: Fri 2013-08-16 14:10:07 +0200
message:
  Disable innodb_wl6326_big because of open bugs in that test + in the server.
------------------------------------------------------------
revno: 6295 [merge]
committer: Satya Bodapati <satya.bodapati@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 16:37:41 +0530
message:
  Merge fix for Bug#16418661 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.74
    committer: Satya Bodapati <satya.bodapati@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-08-16 16:34:05 +0530
    message:
      Bug#16418661 - CHANGING NAME IN FOR INNODB_DATA_FILE_PATH SHOULD NOT
      	       SUCCEED WITH LOG FILES
      Bug#16691130 - ASSERT WHEN INNODB_LOG_GROUP_HOME_DIR DOES NOT
      	       EXIST.
      
      When InnoDB creates system tablespace, it should not continue when
      there are inconsistent system tablespaces (ibdata*) or undo tablespaces
      (undo*) or with redo log files(ib_logfile*)
      
      Also fixed Bug#16691130, when the log group directory doesn't exist, it
      now aborts with error message instead of assert.
      
      Approved by Marko, Kevin. rb#2293, rb#2963
------------------------------------------------------------
revno: 6294
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql_6314_followup_mysql-trunk
timestamp: Fri 2013-08-16 15:03:00 +0530
message:
  Fixed test failures due to improper cleanup of
  temporary tables since they are deleted asynchrounously
  on the slave which caused the next test to fail.
------------------------------------------------------------
revno: 6293 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 14:55:32 +0530
message:
  BUG#16416302 CRASH WITH LOSSY RBR REPLICATION OF
  OLD STYLE DECIMALS
  
  Fixing post-push test failure. 
  
  Test cannot run if info_tables are enabled.
  ibdata file used in this test is from 4.1 version.
  New server wont find these info_tables in the old
  ibdata file. Hence disabling this test for those
  configurations.
    ------------------------------------------------------------
    revno: 3902.258.73
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-08-16 14:54:19 +0530
    message:
      BUG#16416302 CRASH WITH LOSSY RBR REPLICATION OF
      OLD STYLE DECIMALS
      
      Fixing post-push test failure. 
      
      Test cannot run if info_tables are enabled.
      ibdata file used in this test is from 4.1 version.
      New server wont find these info_tables in the old
      ibdata file. Hence disabling this test for those
      configurations.
------------------------------------------------------------
revno: 6292
committer: Vamsikrishna Bhagi <vamsikrishna.bhagi@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 14:16:45 +0530
message:
  WL#6982 Make plugin column in mysql.user non-null
  
  Since the introduction of the post-4.1 authentication method,
  the choice of authentication method was performed on the length
  of the password hash alone, thus enabling easy change of the
  authentication methods through a password change.
  
  This has become a problem with the introduction of other
  authentication methods in 5.5. We needed a special value (empty)
  of the authentication plugin column and a set of special cases
  throughout the code to support the backward compatible behavior.
  
  Since in 5.6 the pre-4.1 password hash is to be deprecated this
  worklog aims to remove this backward compatible layer and simplify
  the authentication code by removing the special cases.
  
  Now the native authentication methods will be subject to the same
  rules as the other authentication methods.
------------------------------------------------------------
revno: 6291
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Fri 2013-08-16 18:27:29 +1000
message:
  Bug#17027249 - INNODB_MONITOR TEST ASSERTS AT HA_INNODB.CC LINE ON WINDOWS
  
  We already own the tablespace mutex when we go to do a read from the file.
  There we acquire the monitor mutex if the platform doesn't have 64 bit
  atomic increment/decrement.
  
  Approved by Jimmy Yang on IM.
------------------------------------------------------------
revno: 6290
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-trunk_17279580
timestamp: Fri 2013-08-16 13:45:22 +0530
message:
  Bug#17279580:RPL.RPL_TYPECONV FAILED ON PB2 WITH SQL SYNTAX ERROR               
                                                                                     
  Issue: check_type.inc encloses the error in "" which conflicts with the            
  error text after the change in the error message due to WL#3656.                   
                                                                                     
  Bug#17286464    I_RPL.RPL_OLD_DECIMAL_TO_NEW_DECIMAL FAILING ON                   
  PB2 WITH ERROR IN SQL SYNTAX                                                       
                                                                                     
  Issue: wait_for_slave_sql_error.inc encloses the error in "" which                 
  conflicts with the  error text after the change in the error message               
  due to WL#3656.                                                                    
                                                                                     
  Fix: Removed the double quote in the error message since it will                
  break existing applications trying to work on the error message.
------------------------------------------------------------
revno: 6289
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Fri 2013-08-16 17:09:10 +1000
message:
  Bug#17295780 - REGRESSION: 5.7.2 FLAKY CONTINUE HANDLER INVOCATION FOR SQLEXCEPTION
  
  Implement ha_innobase::is_fatal_error(), note that a deadlock is not a
  fatal error. The default handler method flags it as a fatal error.
  
  Approved by Jimmy Yang over IM.
------------------------------------------------------------
revno: 6288
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Fri 2013-08-16 16:45:14 +1000
message:
  Bug#17086428 - ASSERT !SRV_READONLY_MODE, IN SAVEPOINT, READ ONLY MODE
  
  Savepoints should be allowed when the server is started in read-only mode. They
  will be no-ops because InnoDB will be running in read-only mode.
  
  Approved by Marko Makela over IM.
------------------------------------------------------------
revno: 6287
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 11:23:04 +0530
message:
  bug#16917425 : Made changes so that wrongly skipped test passes and proper message is shown for skipped tests
------------------------------------------------------------
revno: 6286 [merge]
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-16 11:18:46 +0530
message:
  bug#16917425 : Made changes so that wrongly skipped test passes and proper message is shown for skipped tests
    ------------------------------------------------------------
    revno: 3902.258.72
    committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-08-16 11:14:29 +0530
    message:
      bug#16917425 : Made changes so that wrongly skipped test passes and proper message is shown for skipped tests
------------------------------------------------------------
revno: 6285
committer: Shivji Kumar Jha <shivji.jha@oracle.com>
branch nick: mysql-trunk_wl3656
timestamp: Fri 2013-08-16 10:47:40 +0530
message:
  WL#3656:PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
              
  - Post push fix.
  - Fixed sporadic failure in 
      rpl_perfschema_execute_status_by_coordinator.test
------------------------------------------------------------
revno: 6284 [merge]
committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
branch nick: 57-16732621b
timestamp: Thu 2013-08-15 22:37:17 +0100
message:
  Bug#16732621: GQL DOESN'T MASK PASSWORDS IN PREPARED STATEMENTS
  
  Rewriting ("password obfuscation", WL#5706) now also works
  for prepared statements, i.e. we try not to log any passwords
  while handling prepared statements:
  
  In the general log,
  -- the "Query" line (for SQL PS) will no
     no longer contain the statement to prepare;
     if we prepare from a variable, its name is still
     given, but if we prepare from a string literal,
     that literal is not logged as we don't yet know
     whether it contains a password.
  
     - as always, --log_raw forces "old behaviour",
       i.e., the query is logged prior to parsing,
       and any passwords contained therein are printed
       to the log in plaintext
  
     - as before, PS protocol prepared statements
       only result in a Prepare line and an Execute
       line in the log (at prepare and at execute time,
       respectively); a Query line was not logged before,
       and is not logged now when PS protocol is used.
  
  -- the "Prepare" line will contain the statement,
     with passwords obfuscated
  
  -- the "Execute" line will contain the statement,
     with passwords obfuscated, and values filled in
  
  Query:
  prepare s4 from "set password=password('meow')";
  execute s4;
  
  General Log:
  Query     PREPARE s4 FROM ...
  Prepare   SET PASSWORD FOR `root`@`localhost`=<secret>
  Query     execute s4
  Execute   SET PASSWORD FOR `root`@`localhost`=<secret>
  
  
  In binlog, passwords are replaced with their hashes (rather than
  with a string literal) so replication still works. The
  binlog line for the above SET PASSWORD statement is,
  
  Binlog:
  Query     use `test`; SET PASSWORD FOR 'root'@'localhost'='*82DC221D557298F6CE
    ------------------------------------------------------------
    revno: 6279.1.1 [merge]
    committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
    branch nick: 57-16732621
    timestamp: Thu 2013-08-15 21:14:41 +0100
    message:
      Bug#16732621: GQL DOESN'T MASK PASSWORDS IN PREPARED STATEMENTS
      
      Rewriting ("password obfuscation", WL#5706) now also works
      for prepared statements, i.e. we try not to log any passwords
      while handling prepared statements:
      
      In the general log,
      -- the "Query" line (for SQL PS) will no
         no longer contain the statement to prepare;
         if we prepare from a variable, its name is still
         given, but if we prepare from a string literal,
         that literal is not logged as we don't yet know
         whether it contains a password.
      
         - as always, --log_raw forces "old behaviour",
           i.e., the query is logged prior to parsing,
           and any passwords contained therein are printed
           to the log in plaintext
      
         - as before, PS protocol prepared statements
           only result in a Prepare line and an Execute
           line in the log (at prepare and at execute time,
           respectively); a Query line was not logged before,
           and is not logged now when PS protocol is used.
      
      -- the "Prepare" line will contain the statement,
         with passwords obfuscated
      
      -- the "Execute" line will contain the statement,
         with passwords obfuscated, and values filled in
      
      Query:
      prepare s4 from "set password=password('meow')";
      execute s4;
      
      General Log:
      Query     PREPARE s4 FROM ...
      Prepare   SET PASSWORD FOR `root`@`localhost`=<secret>
      Query     execute s4
      Execute   SET PASSWORD FOR `root`@`localhost`=<secret>
      
      
      In binlog, passwords are replaced with their hashes (rather than
      with a string literal) so replication still works. The
      binlog line for the above SET PASSWORD statement is,
      
      Binlog:
      Query     use `test`; SET PASSWORD FOR 'root'@'localhost'='*82DC221D557298F6CE
------------------------------------------------------------
revno: 6283 [merge]
committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
branch nick: 57-16732621b
timestamp: Thu 2013-08-15 21:40:33 +0100
message:
  NULL merge
    ------------------------------------------------------------
    revno: 3902.258.71 [merge]
    committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
    branch nick: 56-16732621b
    timestamp: Thu 2013-08-15 21:38:15 +0100
    message:
      Bug#16732621: GQL DOESN'T MASK PASSWORDS IN PREPARED STATEMENTS
      
      Rewriting ("password obfuscation", WL#5706) now also works
      for prepared statements, i.e. we try not to log any passwords
      while handling prepared statements:
      
      In the general log,
      -- the "Query" line (for SQL PS) will no
         no longer contain the statement to prepare;
         if we prepare from a variable, its name is still
         given, but if we prepare from a string literal,
         that literal is not logged as we don't yet know
         whether it contains a password.
      
         - as always, --log_raw forces "old behaviour",
           i.e., the query is logged prior to parsing,
           and any passwords contained therein are printed
           to the log in plaintext
      
         - as before, PS protocol prepared statements
           only result in a Prepare line and an Execute
           line in the log (at prepare and at execute time,
           respectively); a Query line was not logged before,
           and is not logged now when PS protocol is used.
      
      -- the "Prepare" line will contain the statement,
         with passwords obfuscated
      
      -- the "Execute" line will contain the statement,
         with passwords obfuscated, and values filled in
      
      Query:
      prepare s4 from "set password=password('meow')";
      execute s4;
      
      General Log:
      Query     PREPARE s4 FROM ...
      Prepare   SET PASSWORD FOR `root`@`localhost`=<secret>
      Query     execute s4
      Execute   SET PASSWORD FOR `root`@`localhost`=<secret>
      
      
      In binlog, passwords are replaced with their hashes (rather than
      with a string literal) so replication still works. The
      binlog line for the above SET PASSWORD statement is,
      
      Binlog:
      Query     use `test`; SET PASSWORD FOR 'root'@'localhost'='*82DC221D557298F6CE
        ------------------------------------------------------------
        revno: 3902.268.1
        committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
        branch nick: 56-16732621
        timestamp: Thu 2013-08-15 20:39:43 +0100
        message:
          Bug#16732621: GQL DOESN'T MASK PASSWORDS IN PREPARED STATEMENTS
          
          Rewriting ("password obfuscation", WL#5706) now also works
          for prepared statements, i.e. we try not to log any passwords
          while handling prepared statements:
          
          In the general log,
          -- the "Query" line (for SQL PS) will no
             no longer contain the statement to prepare;
             if we prepare from a variable, its name is still
             given, but if we prepare from a string literal,
             that literal is not logged as we don't yet know
             whether it contains a password.
          
             - as always, --log_raw forces "old behaviour",
               i.e., the query is logged prior to parsing,
               and any passwords contained therein are printed
               to the log in plaintext
          
             - as before, PS protocol prepared statements
               only result in a Prepare line and an Execute
               line in the log (at prepare and at execute time,
               respectively); a Query line was not logged before,
               and is not logged now when PS protocol is used.
          
          -- the "Prepare" line will contain the statement,
             with passwords obfuscated
          
          -- the "Execute" line will contain the statement,
             with passwords obfuscated, and values filled in
          
          Query:
          prepare s4 from "set password=password('meow')";
          execute s4;
          
          General Log:
          Query     PREPARE s4 FROM ...
          Prepare   SET PASSWORD FOR `root`@`localhost`=<secret>
          Query     execute s4
          Execute   SET PASSWORD FOR `root`@`localhost`=<secret>
          
          
          In binlog, passwords are replaced with their hashes (rather than
          with a string literal) so replication still works. The
          binlog line for the above SET PASSWORD statement is,
          
          Binlog:
          Query     use `test`; SET PASSWORD FOR 'root'@'localhost'='*82DC221D557298F6CE
------------------------------------------------------------
revno: 6282
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Thu 2013-08-15 22:09:03 +0200
message:
  Bug #15856803 MY-DEFAULT.CNF URL NEEDS PARAMETERIZATION FOR RELEASE SERIES
    
    Replaced 5.6 with @MYSQL_BASE_VERSION@ as suggested
    Of course no guarantee that URL will remain otherwise identical for
      future releases, but for now we will assume that.
------------------------------------------------------------
revno: 6281
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-15 23:13:30 +0400
message:
  WL#6510: Print cost and amount of data processed in EXPLAIN JSON.
  Fix for an implicit cast.
------------------------------------------------------------
revno: 6280 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-15 18:53:05 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.70
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-08-15 18:50:15 +0300
    message:
      Bug#17316731 ONLINE ALTER TABLE...ADD PRIMARY KEY LOGGING MODIFIES
      THE SOURCE TABLE
      
      When logging the delete-marking of a record during
      online ALTER TABLE...ADD PRIMARY KEY
      InnoDB must write the transaction ID to the log as it was before the
      deletion or delete-marking of the record. When doing this, it
      accidentally also overwrites the DB_TRX_ID field in the original
      table. This could lead to locking bugs.
      
      The buggy function row_log_table_delete() is being called by DELETE,
      UPDATE (of primary key), and ROLLBACK. The bug only affects
      ADD PRIMARY KEY, not other forms of online ALTER TABLE.
      
      This bug has been there from the start of WL#6255 (the
      table-rebuilding variant of online ALTER TABLE).
      
      Approved on IM by Kevin Lewis
------------------------------------------------------------
revno: 6279
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-localtime
timestamp: Thu 2013-08-15 16:18:02 +0200
message:
  Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS
  
  Additional patch #4.
  Remove HAVE_GMTIME_R, HAVE_LOCALTIME_R, HAVE_PTHREAD_KEY_DELETE,
  HAVE_PTHREAD_ATTR_SETSTACKSIZE, HAVE_PTHREAD_ATTR_GETSTACKSIZE.
  All are part of POSIX and available on all non-Windows
  supported platforms. For Windows we have replacement implementations.
  
  Also remove HAVE_THR_SETCONCURRENCY and the already deprecated
  thread_concurrency server system variable.
  
  Finally, remove unused non-Windows replacement implementation
  for localtime_r as well as various thread_safe_add/_sub macros.
------------------------------------------------------------
revno: 6278 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-15 17:44:57 +0400
message:
  Auto-merged: wl6510 => trunk.
    ------------------------------------------------------------
    revno: 6276.1.1 [merge]
    committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
    branch nick: tmp
    timestamp: Thu 2013-08-15 17:28:30 +0400
    message:
      Auto-merged: wl6510 => trunk.
        ------------------------------------------------------------
        revno: 6116.1.1
        committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
        branch nick: 6510-tmp
        timestamp: Thu 2013-08-15 16:35:04 +0400
        message:
          WL#6510: Print cost and amount of data processed in EXPLAIN JSON.
          Provide a user with a better view on the query plans by printing following info
          in EXPLAIN JSON:
          .) total query cost
          .) cost, per table
          .) amount of data processed - (# of rows) * (record width) in K/M/G/etc
------------------------------------------------------------
revno: 6277 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-15 15:52:09 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.69 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-08-15 15:41:52 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.536.26 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-08-15 15:34:12 +0300
        message:
          Merge mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.880.37
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-08-15 15:23:23 +0300
            message:
              Bug#17302896 DOUBLE PURGE ON ROLLBACK OF UPDATING A DELETE-MARKED RECORD
              
              There was a race condition in the rollback of TRX_UNDO_UPD_DEL_REC.
              
              Once row_undo_mod_clust() has rolled back the changes by the rolling-back
              transaction, it attempts to purge the delete-marked record, if possible, in a
              separate mini-transaction.
              
              However, row_undo_mod_remove_clust_low() fails to check if the DB_TRX_ID of
              the record that it found after repositioning the cursor, is still the same.
              If it is not, it means that the record was purged and another record was
              inserted in its place.
              
              So, the rollback would have performed an incorrect purge, breaking the
              locking rules and causing corruption.
              
              The problem was found by creating a table that contains a unique
              secondary index and a primary key, and two threads running REPLACE
              with only one value for the unique column, so that the uniqueness
              constraint would be violated all the time, leading to statement
              rollback.
              
              This bug exists in all InnoDB versions (I checked MySQL 3.23.53).
              It has become easier to repeat in 5.5 and 5.6 thanks to scalability
              improvements and a dedicated purge thread.
              
              rb#3085 approved by Jimmy Yang
------------------------------------------------------------
revno: 6276
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-08-15 14:05:06 +0200
message:
  Bug#17315867: TYPO: BOOSTRAP
  
  Fix two additional Boostrap => Bootstrap typos.
------------------------------------------------------------
revno: 6275
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql_6314_followup_mysql-trunk
timestamp: Thu 2013-08-15 16:29:08 +0530
message:
  WL6314: Prepared transactions parallel slave applier
  
  follow-up patch  
  Disabled rpl_mts_logical_clock_recovery for crash safe slave/master
  since we need relay_log_recovery=ON for complete crash safety, but it
  is not supported by START SLAVE UNTIL SQL_AFTER_MTS_GAPS.
  MTS supports its own recovery algorithm and this test is not required
  to run with crash slave master/slave
------------------------------------------------------------
revno: 6274
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-08-15 12:27:45 +0200
message:
  Bug#17315867: TYPO: BOOSTRAP
  
  Fix typo boostrap => bootstrap
------------------------------------------------------------
revno: 6273
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Thu 2013-08-15 13:59:06 +1000
message:
  WL#6044 - Follow up fix. When UNIV_SYNC_DEBUG is defined rw_lock_t inherits
  from latch_t. This is required for the sync0debug.cc code. We can't memset()
  the rw_lock_t instance because it is then no longer a POD.
------------------------------------------------------------
revno: 6272
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql_6314_followup_mysql-trunk
timestamp: Thu 2013-08-15 04:42:06 +0530
message:
  WL#6314: Prepared transactions slave parallel applier
  Followup patch to fix the issues with daily-trunk when crash safe slaves are used.
  1. Added temp table list of the coordinator should be locked while flusing info to the tables.
  2. Removed an incorrect assert from binlog_prepare.
------------------------------------------------------------
revno: 6271 [merge]
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 09:50:05 -0600
message:
  Merge Bug#16863098 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.68
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-14 09:44:09 -0600
    message:
      Bug#16863098 - DML ASSERTS !INDEX->TABLE->FLAGS WHILE
                     ALTER TABLE ADD COLUMN IS RUNNING
      
      Change the assert so that it only checks the first bit to assure
      that the table is Redundant Row Format.
      
      Approved by Marko in RB#3037
------------------------------------------------------------
revno: 6270
committer: Raghav Kapoor <raghav.kapoor@oracle.com>
branch nick: mysql-trunk-bug-16498740
timestamp: Wed 2013-08-14 19:21:46 +0530
message:
  BUG#16498740 - CREATE/ALTER: INCORRECT ERROR MSG. SEPARATE 
  	       UNSUPPORTED OPS FROM OTHER FAILURES 
  
  BACKGROUND:
  CREATE or ALTER table can fail due to unsupported options
  OR if the user forgot to specify something in the command.
  In this particular case in the bug report, ALTER table failed 
  because the user forgot to specify tablespace for ndb during 
  create table time.
  While performing alter table, the current error message said 
  "doesn't have this option" which can be misleading to the user.
  The given option is supported but the user forgot to specify
  tablespace during create time.
  Instead of misleading error message we can print a useful error
  message to the user.
  
  ANALYSIS:
  On failure of Alter table, HA_WRONG_CREATE_OPTION was invoked
  which mapped to ER_ILLEGAL_HA in handler::print_error.
  This change was done in Bug#13840553.
  ER_ILLEGAL_HA can be misunderstood by user that storage engine
  (in this case ndbcluster) does not support altering column 
  storage from main memory to disk whereas the problem is 
  user forgot to specify tablespace for ndb during create table.
  
  FIX:
  To fix this bug, a new handler error HA_MISSING_CREATE_OPTION
  is added and it is returned when ALTER fails which is then 
  mapped to newly introduced error code ER_MISSING_HA_CREATE_OPTION 
  in handler::print_error() function.
------------------------------------------------------------
revno: 6269
committer: shipjain@oracle.com
branch nick: mysql-trunk-code
timestamp: Wed 2013-08-14 13:57:55 +0200
message:
  added test to experimental
------------------------------------------------------------
revno: 6268 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 14:34:09 +0300
message:
  Require debug binaries in a test.
    ------------------------------------------------------------
    revno: 5581.1.107
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-29 14:24:24 +0300
    message:
      WL#6871 record locking cleanup.
      
      lock_rec_reset_nth_bit(): Make this a test-and-reset operation,
      to avoid accessing the lock bit twice.
      
      lock_move_reorganize_page(), lock_move_rec_list_start(): Reduce the
      checks for ROW_FORMAT=REDUNDANT to one, by grouping code differently.
    ------------------------------------------------------------
    revno: 5581.1.106
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-29 13:16:17 +0300
    message:
      WL#6871 cleanup
      
      page_copy_rec_list_end(), page_copy_rec_list_end_no_locks(): Interpret
      rec=NULL as the predefined infimum record.
      
      page_copy_rec_list_start(): Interpret rec=NULL as the predefined
      supremum record.
      
      PageCur::PageCur(): Assert that the first directory slot points to the
      predefined infimum record.
    ------------------------------------------------------------
    revno: 5581.1.105
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-29 12:03:21 +0300
    message:
      WL#6871: Fix UNIV_BTR_PRINT.
      
      btr_print_index(): Do not call btr_validate_index().
      This should nly be called from a debugger, and btr_validate_index()
      is now defined as __attribute__((warn_unused_result)).
    ------------------------------------------------------------
    revno: 5581.1.104
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-29 12:00:52 +0300
    message:
      WL#6871: Clean up btr_search_move_or_delete_hash_entries().
    ------------------------------------------------------------
    revno: 5581.1.103
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-29 11:58:47 +0300
    message:
      WL#6871: Fix a bogus debug assertion failure for ROW_FORMAT=REDUNDANT.
      
      This was introduced in marko.makela@oracle.com-20130418123517-ud0z9c2o31kfouoc
      when removing the page_cur_t dependency from lock0lock.cc.
      
      lock_move_rec_list_end(): Do not compare the data payload of the supremum
      record.
    ------------------------------------------------------------
    revno: 5581.1.102
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-28 11:47:38 +0300
    message:
      WL#6871 record comparison clean-up.
      
      Remove the normalization of the comparison result to -1 or 1.
      Instead, return negative or positive, and adjust the callers.
      
      btr_search_check_guess(), page_cur_search_with_match(), page_validate(),:
      Allow a wider range of return values from cmp_dtuple_rec_with_match().
      
      row_merge_blocks(): Allow a wider range of return values from
      cmp_rec_rec_simple().
      
      ib_like_t: Remove the unused and unsupported operations SUFFIX,
      SUBSTR, REGEXP.
      
      eval_cmp_like(), eval_cmp(): Simplify the code.
      
      pars_like_rebind(): Remove the unsupported ib_like_t operations.
      
      dtuple_coll_cmp(), cmp_data_data(), cmp_dtuple_rec(),
      cmp_dtuple_rec_with_match_low(), cmp_rec_rec(),
      cmp_rec_rec_with_match(), cmp_rec_rec_simple(), cmp_dfield_dfield(),
      innobase_mysql_cmp(), cmp_whole_field(), cmp_data(),
      cmp_dfield_dfield_like_prefix(), row_merge_tuple_cmp(): Return
      negative or positive instead of -1 or 1.
      
      dtype_get_pad_char(): Merge to ib_col_set_value() and cmp_data().
      
      cmp_decimal(): Refactored from cmp_decimal(). Compare two DATA_DECIMAL
      fields. This should only be needed for table definitions before MySQL 5.1.
      MYSQL_TYPE_NEWDECIMAL is compared as binary strings.
    ------------------------------------------------------------
    revno: 5581.1.101
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-28 10:35:00 +0300
    message:
      WL#6871 cleanup.
      
      cmp_debug_dtuple_rec_with_match(): Remove. This is virtually identical
      to its only caller. There should not be any inconsistency between the
      different comparison functions, because all of them should use cmp_data().
    ------------------------------------------------------------
    revno: 5581.1.100
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-24 10:55:12 +0300
    message:
      WL#6871 bug fix.
      
      cmp_rec_rec_with_match(): Initialize cur_field=0 when comparing against
      a predefined minimum node pointer record (REC_INFO_MIN_REC_FLAG).
    ------------------------------------------------------------
    revno: 5581.1.99
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-24 00:08:22 +0300
    message:
      WL#6871 cleanup:
      
      Remove support for byte-level prefix granularity in searches.
      
      There were 2 users of this information: the adaptive hash index, and
      prefix searches (cmp_dtuple_is_prefix_of_rec(), called for match_mode
      == ROW_SEL_EXACT_PREFIX).
      
      The byte-level granularity was only available for VARBINARY columns,
      and before rb#2350 Bug#16723431 REMOVE SRV_LATIN1_ORDERING, for the
      default collation latin1_swedish_ci. Prefix searches should never
      supply a partial-field prefix, due to an assertion in
      row_sel_convert_mysql_key_to_innobase().
      
      The adaptive hash index is unlikely to benefit much from the
      byte-level granularity either. (No performance penalty was observed
      when testing rb#2350, and the keys did include latin1_swedish_ci.)
      
      btr_cur_t: Remove up_bytes, low_bytes.
      btr_search_t: Remove n_bytes.
      buf_block_t: Remove n_bytes, curr_n_bytes.
      
      dtuple_fold(), rec_fold(): Remove n_bytes.
      
      ut_pair_min(), ut_pair_cmp(): Remove.
      
      page_cur_search_with_match(), page_cur_try_search_shortcut():
      Remove iup_matched_bytes, ilow_matched_bytes.
      
      cmp_dtuple_rec_with_match_low(), cmp_dtuple_rec_with_match():
      Remove matched_bytes.
      
      PageCur::searchShortcut(): Remove up_match_bytes, low_match_bytes.
    ------------------------------------------------------------
    revno: 5581.1.98
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-23 23:26:38 +0300
    message:
      WL#6871 cleanup.
      
      convert_search_mode_to_innobase(): Remove the unused mode HA_READ_PREFIX.
    ------------------------------------------------------------
    revno: 5581.1.97
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 23:32:18 +0300
    message:
      WL#6871: Simplify comparisons.
      
      cmp_data(): Common inline function for comparing two fields.
    ------------------------------------------------------------
    revno: 5581.1.96
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 22:32:43 +0300
    message:
      WL#6871: Simplify comparisons.
      
      cmp_dtuple_rec_with_match_low(): Compare the common prefix with memcmp().
      Assert that the field cannot be stored externally.
    ------------------------------------------------------------
    revno: 5581.1.95
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 16:43:07 +0300
    message:
      WL#6871: Simplify comparisons.
      
      cmp_rec_rec_simple_field(): Use memcmp() for comparing the common prefix.
    ------------------------------------------------------------
    revno: 5581.1.94
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 16:30:17 +0300
    message:
      WL#6871: Simplify comparisons.
      
      cmp_data_data(): Use memcmp() for comparing the common prefix.
    ------------------------------------------------------------
    revno: 5581.1.93
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 16:08:34 +0300
    message:
      WL#6871 cleanup.
      
      page_cmp_dtuple_rec_with_match(): Remove, and call
      cmp_dtuple_rec_with_match() instead, on user records only.
    ------------------------------------------------------------
    revno: 5581.1.92
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 15:27:24 +0300
    message:
      WL#6871: Simplify record comparisons.
      
      cmp_rec_rec_with_match(): Remove the unused parameter matched_bytes.
      Ignore the initial value of *matched_fields (assume that it is 0).
      Use memcmp() for comparing the common prefix.
    ------------------------------------------------------------
    revno: 5581.1.91 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 11:29:07 +0300
    message:
      Merge mysql-trunk to mysql-trunk-wl6871.
    ------------------------------------------------------------
    revno: 5581.1.90
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-22 00:02:51 +0300
    message:
      WL#6871: Reuse old offsets when possible.
      
      PageCur::adjustOffsets(): Replace the parameter wasSentinel with old_rec.
      If the variable-size part of the record header is identical between
      old_rec and m_rec, reuse the offsets.
    ------------------------------------------------------------
    revno: 5581.1.89
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-21 11:48:09 +0300
    message:
      WL#6871 rec_get_offsets() removal in node pointer access
      
      btr_node_ptr_set_child_page_no(): Replace offsets[] with data_size.
      
      btr_node_ptr_get_child(): Remove the parameter offsets[].
      
      btr_page_get_father_node_ptr_func(): btr_page_get_father_node_ptr(),
      btr_page_get_father_block(): Remove the parameter offsets[].
      Return data_size of the node pointer, instead of offsets.
      
      btr_page_get_father_node_ptr_func(): Be less chatty when detecting
      mismatch. It suffices to dump the pages; the records will already be
      contained in the page dumps.
      
      btr_print_recursive(): Remove the parameters heap, offsets[].
      
      btr_cur_search_to_nth_level(): Do not calculate offsets for accessing
      the child page numbers in node pointers. (Offsets will still be
      calculated in page_cur_search_with_match().)
      
      btr_cur_open_at_index_side_func(), btr_cur_open_at_rnd_pos_func(): Do
      not calculate offsets.
      
      btr_node_ptr_get_data_size(): New function, to determine the payload
      size of a node pointer record. The child page number is assumed to
      be stored at node_ptr+data_size-REC_NODE_PTR_SIZE.
      
      btr_node_ptr_get_child_page_no(): Replace offsets[] with dict_index_t.
    ------------------------------------------------------------
    revno: 5581.1.88
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-20 16:42:16 +0300
    message:
      WL#6871 bug fix.
      
      Set mtr_t::modifications even when skipping redo log writing.
      
      This fixes a failure with temporary tables (innodb.innodb_wl6470_2).
    ------------------------------------------------------------
    revno: 5581.1.87
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-20 14:16:22 +0300
    message:
      WL#6871 optimization.
      
      PageCur::appendEmptyNoZip(): Do not set the next-rec offset of the
      last user record in ROW_FORMAT=REDUNDANT because it is already set.
    ------------------------------------------------------------
    revno: 5581.1.86
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-20 11:43:56 +0300
    message:
      WL#6871 change buffering cleanup.
      
      ibuf_merge_or_delete_for_page(): Reset the PAGE_LAST_INSERT field
      only if some insert or purge operation was merged.
    ------------------------------------------------------------
    revno: 5581.1.85
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-17 13:36:39 +0300
    message:
      WL#6871 page creation optimization.
      
      page_dir_get_nth_slot(): Add parenthesis to help the compiler perform
      constant folding, when calling the macro with a constant n.
      
      page_create_low(): Use low-level byte access to initialize the page,
      instead of invoking the high-level methods.
    ------------------------------------------------------------
    revno: 5581.1.84
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-17 12:28:25 +0300
    message:
      WL#6871: Use PageCur::purge().
      
      page_delete_rec_list_start(): Simplify the code by using PageCur::purge().
    ------------------------------------------------------------
    revno: 5581.1.83
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-17 11:44:02 +0300
    message:
      WL#6871: Replace page_copy_rec_list_end_to_created_page() with PageCur.
      
      PageCur::clearOffsets(): A method to free m_offsets[], in case it was
      computed for some reason. In bulk operations (such as copying a range
      of records) we do not want to update the offsets.
      
      PageCur::appendNoZip(): Copy the tail of a page into another page.
      Implements the core of page_copy_rec_list_end().
      
      PageCur::appendEmptyNoZip(): Replaces page_copy_rec_list_end_to_created_page().
      Copies the tail of a page into an empty page.
      
      page_copy_rec_list_end(): Make use of PageCur::appendNoZip().
    ------------------------------------------------------------
    revno: 5581.1.82
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-17 11:29:03 +0300
    message:
      WL#6871: Tighten assertions in PageCur::logInsert().
    ------------------------------------------------------------
    revno: 5581.1.81
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-16 22:08:24 +0300
    message:
      WL#6871 qualifier cleanup.
      
      page_create_empty(): Declare the index parameter as const.
    ------------------------------------------------------------
    revno: 5581.1.80
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-16 22:04:52 +0300
    message:
      WL#6871 comment cleanup.
      
      page_dir_set_n_heap(), page_dir_get_n_heap(): Improve the comments.
    ------------------------------------------------------------
    revno: 5581.1.79 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-16 15:02:40 +0300
    message:
      Merge mysql-trunk to mysql-trunk-wl6871.
    ------------------------------------------------------------
    revno: 5581.1.78
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-16 11:08:12 +0300
    message:
      WL#6871: rec_get_offsets() removal.
      
      page_copy_rec_list_end_to_created_page(): Do not compute offsets.
    ------------------------------------------------------------
    revno: 5581.1.77
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-16 11:03:59 +0300
    message:
      WL#6871: Fix a regression from
      marko.makela@oracle.com-20130515123143-rrj6kmgz29wxx18a.
      
      Initialize n_ext=0 before calling rec_get_size_comp().
    ------------------------------------------------------------
    revno: 5581.1.76
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-15 16:05:06 +0300
    message:
      WL#6871: Introduce PageCur::compress().
      
      PageCur::isZip(), PageCur::compress(): New methods.
      
      page_copy_rec_list_end(): Use PageCur::insertNoZip() instead of
      page_copy_rec_list_end_no_locks() and PageCur::compress() instead of
      page_zip_compress().
    ------------------------------------------------------------
    revno: 5581.1.75
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-15 16:00:47 +0300
    message:
      WL#6871 cleanup.
      
      PageCur::reorganize(): Eliminate a goto label.
    ------------------------------------------------------------
    revno: 5581.1.74
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-15 15:31:43 +0300
    message:
      WL#6871 rec_get_offsets() removal.
      
      page_zip_compress_node_ptrs(), page_zip_apply_log(),
      page_zip_decompress_node_ptrs(): Use rec_get_size_comp()
      instead of rec_get_offsets().
    ------------------------------------------------------------
    revno: 5581.1.73
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Wed 2013-05-15 11:50:22 +0300
    message:
      WL#6871 rec_get_offsets() removal.
      
      page_zip_validate_low(): Use rec_get_size_comp(), not rec_get_offsets().
    ------------------------------------------------------------
    revno: 5581.1.72
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 22:33:57 +0300
    message:
      WL#6871 cleanup: Add a const qualifier.
      
      page_copy_rec_list_end(): Return const rec_t*, not rec_t*.
    ------------------------------------------------------------
    revno: 5581.1.71
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 12:46:18 +0300
    message:
      WL#6871 cleanup: Remove some use of page_zip_reorganize().
      
      PageCur::reorganize(): Add the parameter zip_valid.
      When zip_valid=false, the uncompressed page is allowed to be ahead
      of the compressed page.
      
      PageCur::insertZip(): Use PageCur::reorganize(zip_valid=false)
      instead of page_zip_reorganize().
    ------------------------------------------------------------
    revno: 5581.1.70
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 10:16:53 +0300
    message:
      WL#6871: Replace page_cur_rec_insert() with PageCur::insert().
    ------------------------------------------------------------
    revno: 5581.1.69
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 00:39:11 +0300
    message:
      WL#6871 clean-up and refactoring of PageCur.
      
      PageCur::insertNoZip(): New methods, for inserting into the
      uncompressed page only.
      
      PageCur::insert() const: Remove (superceded by insertNoZip()).
      
      PageCur::insertNoReorganize(): Add the parameter page_zip, so that it
      can be passed as NULL in order to avoid updating the compressed page.
      
      inline PageCur::insert(): Renamed to insertBuf().
      
      PageCur::reorganize(): Invoke PageCur::insertNoZip() in a loop,
      instead of invoking page_copy_rec_list_end_no_locks().
      
      page_copy_rec_list_end_no_locks(), page_copy_rec_list_start(): Replace
      the removed PageCur::insert() call with PageCur::insertNoZip().
    ------------------------------------------------------------
    revno: 5581.1.68
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 00:28:36 +0300
    message:
      WL#6871 bug fix.
      
      ibuf_insert_to_index_page(): Move the cursor on top of the inserted record
      before restoring the record lock after delete+insert.
    ------------------------------------------------------------
    revno: 5581.1.67
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 00:24:54 +0300
    message:
      WL#6871: PageCur::insertNoReorganize() bug fix:
      Fix the page_mem_alloc_free() call for ROW_FORMAT=REDUNDANT.
    ------------------------------------------------------------
    revno: 5581.1.66
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-14 00:16:30 +0300
    message:
      WL#6871 PageCur::insert(const dtuple_t*) bug fix.
      
      Subtract extra_size from the size returned by rec_get_converted_size_comp().
      This bug was introduced in
      revision id marko.makela@oracle.com-20130513125421-0d9fkq8qffeera83.
    ------------------------------------------------------------
    revno: 5581.1.65
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-13 16:00:54 +0300
    message:
      WL#6871 cleanup.
      
      PageCur::update(): Avoid accessing m_offsets directly.
    ------------------------------------------------------------
    revno: 5581.1.64
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-13 15:59:33 +0300
    message:
      WL#6871: Remove PageCur::getOffsets() calls.
      
      PageCur::zipAlloc(): Use PageCur::getRecSize().
    ------------------------------------------------------------
    revno: 5581.1.63
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-13 15:54:21 +0300
    message:
      WL#6871 cleanup: Remove two unneeded PageCur::insert() variants.
      
      We will not need rec_get_offsets() for the to-be-inserted record
      (except when the record is in a compressed page).
      
      Remove the unneeded methods and the unnecessary computation of offsets.
    ------------------------------------------------------------
    revno: 5581.1.62
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-13 15:34:42 +0300
    message:
      WL#6871: Fix some failures with ROW_FORMAT=REDUNDANT.
      
      PageCur::getRecSize(): Remove the isUser() assertion.
      
      PageCur::logInsert(): New method for writing redo log about an insert.
      
      page_rec_find_owner_rec_old(), page_rec_find_owner_rec_comp(): Forked from
      page_rec_find_owner_rec().
      
      PageCur::insertNoReorganize(): Fix bugs with ROW_FORMAT=REDUNDANT.
      
      PageCur::insert(insert_buf, ...): Fix bugs with ROW_FORMAT=REDUNDANT.
      
      PageCur::update(): Fix bugs with ROW_FORMAT=REDUNDANT.
    ------------------------------------------------------------
    revno: 5581.1.61
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-13 15:30:53 +0300
    message:
      WL#6871: rec_get_size_comp(): Tolerate the infimum or supremum record.
    ------------------------------------------------------------
    revno: 5581.1.60
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-07 22:47:06 +0300
    message:
      WL#6871 debug fix.
      
      page_cmp_dtuple_rec_with_match(): Allow offsets=NULL for ROW_FORMAT=REDUNDANT.
    ------------------------------------------------------------
    revno: 5581.1.59
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-07 14:14:31 +0300
    message:
      WL#6871: Use PageCur for merging buffered inserts.
      
      ibuf_insert_to_index_page_low(), ibuf_insert_to_index_page(): Replace
      page_cur_t with PageCur.
      
      PageCur::insert(const rec_t*,ulint,ulint): Insert a record in rec_t
      format after the current cursor position.
      
      PageCur::insert(): Some inline wrappers for the above.
      
      Implement several wrappers for PageCur::insert().
      
      PageCur::insertZip(): Insert a record into a compressed table page.
      
      PageCur::insertNoReorganize(): Insert a record without attempting to
      reorganize the page.
      
      PageCur::zipAlloc(): Determine if there is enough space in the
      compressed page for an insert or update.
      
      PageCur::canUpdate(), PageCur::update(): In-place update.
      
      PageCur::getRecHeaderFixed(): Determine the size of the fixed-length
      record header.
      
      row_upd_changes_field_size_or_external_old(): A variant of
      row_upd_changes_field_size_or_external() that does not require the
      computation of offsets, for ROW_FORMAT=REDUNDANT.
    ------------------------------------------------------------
    revno: 5581.1.58
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-07 14:01:10 +0300
    message:
      WL#6871: Introduce PageCur::isMutable().
      
      Create a variant of the PageCur constructor that takes
      const rec_t and block. Make the member variables m_block, m_rec non-const.
      
      In all methods that would modify the data, assert isMutable().
      
      Make getPage() and getPageZip() private, as these would discard
      any const qualifier.
    ------------------------------------------------------------
    revno: 5581.1.57
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-07 13:52:48 +0300
    message:
      WL#6871: Remove the const qualifier from page_dir_slot_get_rec().
    ------------------------------------------------------------
    revno: 5581.1.56
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-07 13:06:26 +0300
    message:
      WL#6871 code cleanup for update vector creation.
      
      upd_field_set_field_no(): Remove the parameter trx, and remove an
      assertion-like test. A failure here should still lead into a debug
      assertion failure in dict_index_get_nth_col().
      
      row_upd_changes_field_size_or_external(),
      row_upd_build_sec_rec_difference_binary(): Add a const qualifier to index.
      
      row_upd_build_difference_binary(): Add a const qualifier to index.
      Remove the trx parameter. Assume that offsets[] are always initialized
      for ROW_FORMAT!=REDUNDANT.
      
      trx_undo_update_rec_get_update(): Add a const qualifier to index.
      Remove the trx parameter. Remove an assertion-like check.
    ------------------------------------------------------------
    revno: 5581.1.55
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-05-07 12:57:10 +0300
    message:
      WL#6871 bug fix.
      
      PageCur::flagDeleted(): Use isComp() instead of getOffsets().
    ------------------------------------------------------------
    revno: 5581.1.54
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-06 12:24:27 +0300
    message:
      WL#6871 cleanup: Pass block instead of page to page_validate().
    ------------------------------------------------------------
    revno: 5581.1.53
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-05-06 11:28:27 +0300
    message:
      WL#6871 cleanup: Add const qualifiers to some function parameters.
    ------------------------------------------------------------
    revno: 5581.1.52
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 17:18:19 +0300
    message:
      WL#6871 refinement of PageCur::setRec()
      
      setBeforeFirst(), setAfterLast(), setUserRec(): New methods.
    ------------------------------------------------------------
    revno: 5581.1.51
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 16:18:56 +0300
    message:
      WL#6871: PageCur: Compute offsets on demand only.
      
      The offsets are really only needed in PageCur::search() so far.  In
      all other operations implemented so far, it suffices to know the size
      of the record. (For inserting into compressed pages, we will need to
      know offsets, so that some fields can be stored in uncompressed
      format.)
      
      PageCur::m_comp: Flag: is the record not in ROW_FORMAT=REDUNDANT?
      
      PageCur::getRecSize(): New method for computing the size of the record.
      
      PageCur::getOffsetsIfExist(): Get the m_offsets if they exist.
      
      PageCur::getOffsets(): Compute the offsets if they do not exist.
      
      rec_get_size_comp(): Add an optional output parameter n_ext.
      
      PageCur::insert(): PageCur::purge(): Replace getOffsets() with getRecSize().
    ------------------------------------------------------------
    revno: 5581.1.50
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 15:01:41 +0300
    message:
      WL#6871: Remove UNIV_BLOB_DEBUG.
      
      UNIV_BLOB_DEBUG assumes that offsets[] be available, but we must try
      to avoid computing them in vain.
      
      If UNIV_BLOB_DEBUG is to be revived, it should be implemented
      with std::map instead of the homebrew ut0rbt data structure,
      and it should be written so that it tolerates crash recovery.
    ------------------------------------------------------------
    revno: 5581.1.49
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 14:27:14 +0300
    message:
      WL#6871: Use PageCur::purge() in the crash recovery of
      MLOG_REC_DELETE and MLOG_COMP_REC_DELETE.
      
      PageCur::purge(): Remove bogus or redundant assertions, so that
      this can be invoked on ROW_FORMAT=REDUNDANT.
      
      page_cur_parse_delete_rec(): Use PageCur::purge().
    ------------------------------------------------------------
    revno: 5581.1.48
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 14:25:01 +0300
    message:
      WL#6871: PageCur::PageCur(): Assert that compressed pages must be compact.
    ------------------------------------------------------------
    revno: 5581.1.47
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 13:51:41 +0300
    message:
      WL#6871 cleanup: Rely on page_rec_get_nth(page, 0).
      
      The function page_rec_get_nth(page, 0) will return the infimum record.
      Remove the special handling.
    ------------------------------------------------------------
    revno: 5581.1.46 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 12:37:18 +0300
    message:
      Merge mysql-trunk to mysql-trunk-wl6871.
    ------------------------------------------------------------
    revno: 5581.1.45
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 12:15:06 +0300
    message:
      WL#6871: Remove some dependency on rec_get_offsets().
      
      page_cur_insert_rec_low(): Replace the parameter offsets with extra,data
      (the sizes that we previously got from offsets[].
      Do not invoke rec_get_offsets() on free_rec. Instead, compute
      free_extra_size, free_data_size only.
      
      page_cur_insert_rec_zip(): Do not invoke rec_get_offsets() on free_rec.
      Instead, compute free_extra_size, free_data_size only.
      Do not zero out parts of free_rec, because it would depend on offsets[].
      The zeroing became unnecessary after page_zip_validate() was relaxed
      when fixing Bug#12701488.
    ------------------------------------------------------------
    revno: 5581.1.44
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 12:10:01 +0300
    message:
      WL#6871: Fix a UNIV_ZIP_DEBUG compilation failure.
    ------------------------------------------------------------
    revno: 5581.1.43
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 10:00:44 +0300
    message:
      WL#6871 refactoring.
      
      page_zip_compress(): Add a parameter for zip_level.
      Add a const qualifier to dict_index_t*.
    ------------------------------------------------------------
    revno: 5581.1.42
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-05-03 09:57:53 +0300
    message:
      WL#6871: Add some const qualifiers.
    ------------------------------------------------------------
    revno: 5581.1.41
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-02 11:48:25 +0300
    message:
      WL#6871: Speed up page splits.
      
      page_delete_rec_list_end(): Use PageCur::purge() for compressed pages.
      For uncompressed pages, do not invoke rec_get_offsets() but only
      calculate the record sizes.
    ------------------------------------------------------------
    revno: 5581.1.40
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-05-02 11:46:01 +0300
    message:
      WL#6871 refactoring.
      
      PageCur::PageCur(): Take pointers instead of references.
      Allow m_mtr to be NULL in most methods, to suppress redo logging.
    ------------------------------------------------------------
    revno: 5581.1.39
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 22:31:21 +0300
    message:
      WL#6871: Implement page reorganize.
      
      PageCur::reorganize(): New method, based on btr_page_reorganize_low().
      
      btr_page_reorganize_block(): Use PageCur::reorganize().
    ------------------------------------------------------------
    revno: 5581.1.38
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 22:29:33 +0300
    message:
      WL#6871 cleanup.
      
      PageCur::getPageZip(): New accessor method.
      
      PageCur::search(): Use getPage() and getPageZip().
    ------------------------------------------------------------
    revno: 5581.1.37
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 22:27:08 +0300
    message:
      WL#6871 cleanup.
      
      page_copy_rec_list_end_no_locks(): Add missing const qualifiers
      and rewrite the function comment.
    ------------------------------------------------------------
    revno: 5581.1.36
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 21:23:46 +0300
    message:
      WL#6871 PageCur assertion cleanup.
      
      PageCur::flagDeleted(), PageCur::search(): Replace mtr_memo_contains_page()
      with mtr_memo_contains(m_mtr, m_block, ...)
    ------------------------------------------------------------
    revno: 5581.1.35
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 19:07:22 +0300
    message:
      WL#6871 cleanup of page_zip functions.
      
      Add const qualifiers to dict_index_t*.
      Use Javadoc-style @param comments for function parameters.
    ------------------------------------------------------------
    revno: 5581.1.34
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 18:59:46 +0300
    message:
      WL#6871 assertion addition.
      
      PageCur::flagDeleted(bool): Assert that the page is X-latched.
    ------------------------------------------------------------
    revno: 5581.1.33
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 15:53:26 +0300
    message:
      WL#6871: Implement record delete-marking.
      
      PageCur::flagDeleted(bool): New method. Does NOT write any redo log.
      
      btr_cur_del_mark_set_sec_rec_log(): Make public.
      
      ibuf_set_del_mark(): Use the above functions.
      
      ibuf_delete(): Remove a call to rec_print_new(). The record should be
      identical to the search tuple, and cur.getOffsets() could return NULL,
      which rec_print_new() is not prepared to handle.
    ------------------------------------------------------------
    revno: 5581.1.32
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 15:17:11 +0300
    message:
      WL#6871: Implement record deletion.
      
      PageCur::getPage(): New accessor function.
      
      PageCur::purge(): Delete the current record.
      
      ibuf_delete(): Replace page_cur_t with PageCur.
    ------------------------------------------------------------
    revno: 5581.1.31
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 14:14:29 +0300
    message:
      WL#6871 cleanup: Simplify the purging of a record.
      
      page_mem_free(), page_zip_dir_delete(): Replace the parameter offsets[]
      with the parameters data_size, extra_size, and n_ext.
      
      In this way, the caller will not need to keep around offsets
      for the record that is being deleted.
    ------------------------------------------------------------
    revno: 5581.1.30
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 13:48:48 +0300
    message:
      WL#6871 cleanup: Remove page_zip_clear_rec().
      
      This should have been made obsolete by the fixes of
      Bug#14606334 INNODB UNABLE TO MERGE IBUF INTO PAGE
      Bug#12701488 ASSERT PAGE_ZIP_VALIDATE, UNIV_ZIP_DEBUG
      
      We do not want to be keeping the offsets valid this long.
    ------------------------------------------------------------
    revno: 5581.1.29
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 13:37:33 +0300
    message:
      WL#6871 cleanup
      
      page_cur_delete_rec_write_log(): Add missing const qualifier.
    ------------------------------------------------------------
    revno: 5581.1.28
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 12:50:44 +0300
    message:
      WL#6871: Cleanup.
      
      page_dir_slot_set_rec(): Add const qualifier to rec.
    ------------------------------------------------------------
    revno: 5581.1.27
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 12:17:26 +0300
    message:
      WL#6871 cleanup: Remove #ifdef UNIV_ZIP_DEBUG pollution.
      
      page_zip_validate(): Define as a macro.
      page_zip_validate_if_zip(), page_zip_validate_sloppy_if_zip(): New macros
      which generate no code unless UNIV_ZIP_DEBUG is defined.
    ------------------------------------------------------------
    revno: 5581.1.26
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-29 12:12:57 +0300
    message:
      WL#6871 cleanup
      
      ib_logf(): Add UNIV_COLD attribute, since the error log should
      rarely be written to.
    ------------------------------------------------------------
    revno: 5581.1.25
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-04-26 16:25:35 +0300
    message:
      WL#6871 cleanup.
      
      Remove some #if 0 code.
      
      rec_get_size_comp(): A peer function of rec_get_size_old(), for determining
      the size of a record without computing the offsets to each field.
      
      PageCur::insert(): Replace rec_get_offsets() with rec_get_size_old() or
      rec_get_size_comp().
    ------------------------------------------------------------
    revno: 5581.1.24
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-04-26 15:15:40 +0300
    message:
      WL#6871: Add PageCur copy constructor, getBlock(), getIndex().
    ------------------------------------------------------------
    revno: 5581.1.23
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-04-26 15:13:16 +0300
    message:
      WL#6871 cleanup: Add missing const qualifier.
    ------------------------------------------------------------
    revno: 5581.1.22
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 16:01:15 +0300
    message:
      WL#6871: Implement PageCur search.
      
      ibuf_set_del_mark(): Use PageCur::search() and PageCur::isDeleted().
      
      PageCur::search(), PageCur::searchShortcut(): New methods, to replace
      page_cur_try_search_shortcut() and page_cur_search_with_match().
    ------------------------------------------------------------
    revno: 5581.1.21
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 15:58:31 +0300
    message:
      WL#6871 refactoring: Allow some comparison without rec_get_offsets().
      
      cmp_dtuple_rec_with_match_low(), cmp_debug_dtuple_rec_with_match():
      Allow offsets=NULL for ROW_FORMAT=REDUNDANT.
      
      rec_get_nth_field_ext(): Auxiliary function, similar to rec_get_nth_field(),
      but assumes ROW_FORMAT=REDUNDANT when offsets=NULL.
    ------------------------------------------------------------
    revno: 5581.1.20
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 14:44:01 +0300
    message:
      WL#6871 PageCur enhancements.
      
      PageCur: Add the methods isComp(), isDeleted(), setRec().
    ------------------------------------------------------------
    revno: 5581.1.19
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 14:42:10 +0300
    message:
      WL#6871 instrumentation:
      
      btr_rec_set_deleted_flag(): Assert that the record is a user record.
    ------------------------------------------------------------
    revno: 5581.1.18
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 14:34:55 +0300
    message:
      WL#6871 cleanup: Make PageCur::index a pointer to const.
    ------------------------------------------------------------
    revno: 5581.1.17
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 14:30:59 +0300
    message:
      WL#6871 cleanup: Remove last traces of PAGE_CUR_DBG.
    ------------------------------------------------------------
    revno: 5581.1.16
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 10:43:34 +0300
    message:
      WL#6871: Add PageCur::getNumFields().
    ------------------------------------------------------------
    revno: 5581.1.15
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-25 10:29:26 +0300
    message:
      WL#6871 cleanup: Rename btr_page_get_index_id() to page_get_index_id().
    ------------------------------------------------------------
    revno: 5581.1.14
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-04-23 16:27:36 +0300
    message:
      WL#6871 cleanup: Remove UNIV_SEARCH_DEBUG.
    ------------------------------------------------------------
    revno: 5581.1.13
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-04-23 16:18:32 +0300
    message:
      WL#6871 cleanup.
      
      page_cur_search(): Remove the constant parameter mode=PAGE_CUR_LE.
    ------------------------------------------------------------
    revno: 5581.1.12
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-04-23 15:52:13 +0300
    message:
      WL#6871: Make one part of CHECK TABLE use PageCur.
      
      btr_index_rec_validate(): Add a parameter for offsets[].
      Allow offsets=NULL for ROW_FORMAT=REDUNDANT.
      
      btr_index_page_validate(): Make use of PageCur.
      
      PageCur::PageCur(): Add some assertions.
      PageCur::getOffsets(): Relax a debug assertion, allowing m_offsets=NULL.
    ------------------------------------------------------------
    revno: 5581.1.11
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Tue 2013-04-23 15:09:58 +0300
    message:
      WL#6871: Fix a compilation error.
    ------------------------------------------------------------
    revno: 5581.1.10
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-22 16:20:27 +0300
    message:
      WL#6871 cleanup: Optimize page_cur_open_on_rnd_user_rec().
      
      Replace a linear loop of page_cur_move_to_next() with page_rec_get_nth().
    ------------------------------------------------------------
    revno: 5581.1.9
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-22 15:53:51 +0300
    message:
      WL#6871: Remove some dead UNIV_SEARCH_DEBUG code.
    ------------------------------------------------------------
    revno: 5581.1.8
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-22 15:40:28 +0300
    message:
      WL#6871 cursor code cleanup.
      Remove the unused mode PAGE_CUR_LE_OR_EXTENDS.
      It was both introduced and disabled in MySQL 4.0:
      
        revno: 1416.1.150
        revision-id: sp1r-heikki@hundin.mysql.fi-20030207154409-50631
        parent: sp1r-heikki@hundin.mysql.fi-20030207153315-50621
        committer: heikki@hundin.mysql.fi
        timestamp: Fri 2003-02-07 17:44:09 +0200
        message:
          page0cur.c:
            Disable PAGE_CUR_LE_OR_EXTENDS because it does not work for
            non-latin1 char sets now
      
        revno: 1352.2.13
        revision-id: sp1r-heikki@hundin.mysql.fi-20021029211646-41337
        parent: sp1r-Sinisa@sinisa.nasamreza.org-20021029122123-37723
        committer: heikki@hundin.mysql.fi
        timestamp: Tue 2002-10-29 23:16:46 +0200
        message:
          Many files:
            Merge InnoDB-4.0.5: new isolation levels READ COMMITTED and
            READ UNCOMMITTED now supported, selective deadlock resolution
          mysqld.cc:
            Change MySQL default isolation level to REPEATABLE READ; note
            that InnoDB has always had that default, and BDB and MyISAM
            always run at SERIALIZABLE level anyway
    ------------------------------------------------------------
    revno: 5581.1.7
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-22 10:24:55 +0300
    message:
      WL#6871: page_copy_rec_list_start(): Use PageCur::insert()
      instead of page_cur_insert_rec_low().
    ------------------------------------------------------------
    revno: 5581.1.6
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Mon 2013-04-22 10:21:46 +0300
    message:
      WL#6871: PageCur cleanup.
      Merge the 2 constructors. Add m_ prefix to the member fields.
    ------------------------------------------------------------
    revno: 5581.1.5
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Fri 2013-04-19 16:02:36 +0300
    message:
      WL#6871: Implement the PageCur class to gradually replace page_cur_t.
      
      rec_init_offsets(): Make this public.
      
      rec_get_size_old(): New function, to determine the extra_size, data_size
      of a ROW_FORMAT=REDUNDANT record.
      
      PageCur::insert(): Essentially a copy of page_cur_insert_rec_low(),
      but works with offsets=NULL for ROW_FORMAT=REDUNDANT.
      
      page_copy_rec_list_end_no_locks(): Make use of PageCur.
      This function is invoked during page reorganize and some page splits.
    ------------------------------------------------------------
    revno: 5581.1.4
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-18 15:49:43 +0300
    message:
      lock_rec_other_has_expl_req() cleanup:
      Rename a parameter to "bool wait" and correct the comment.
      wait=LOCK_WAIT used to mean the opposite what the comment said.
    ------------------------------------------------------------
    revno: 5581.1.3
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-18 15:42:23 +0300
    message:
      Clean up lock_rec_other_has_expl_req().
      Remove the constant parameter gap=0.
    ------------------------------------------------------------
    revno: 5581.1.2
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-18 15:35:17 +0300
    message:
      WL#6871 preparation: Remove the lock0lock.cc dependency on page_cur_t.
      
      The intention is to initialize rec_get_offsets() at page cursor creation.
      The lock subsystem is the only current user of page_cur_t that does not
      need to access the data payload in the records.
    ------------------------------------------------------------
    revno: 5581.1.1
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6871
    timestamp: Thu 2013-04-18 13:46:21 +0300
    message:
      Remove the unused functions
      page_cur_invalidate(), btr_cur_invalidate().
------------------------------------------------------------
revno: 6267 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 14:58:53 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.258.67
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-14 14:57:39 +0530
    message:
      Bug #17001980 RQG_PERFORMANCE_SCHEMA STOPPED WITH A CRASH IN
      HA_INNOBASE::CLONE.
      
      Problem:
      
      In the function ha_innobase::clone(), it was asserted that a thread
      cannot clone a table handler that is used by another thread. It was
      also asserted that the original table handler and the cloned table
      handler must belong to the same transaction. Both are wrong.
      
      Solution:
      
      It is OK for a thread to clone a table handler that is used by another
      thread. The original table handler and the cloned table handler can
      belong to different transactions.  So both asserts are removed.
      
      rb#3066 approved by Marko
------------------------------------------------------------
revno: 6266 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 14:54:40 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.267.1
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-14 13:42:52 +0530
    message:
      Bug #17001980 RQG_PERFORMANCE_SCHEMA STOPPED WITH A CRASH IN
      HA_INNOBASE::CLONE.
      
      Problem:
      
      In the function ha_innobase::clone(), it was asserted that a thread
      cannot clone a table handler that is used by another thread. It was
      also asserted that the original table handler and the cloned table
      handler must belong to the same transaction. Both are wrong.
      
      Solution:
      
      It is OK for a thread to clone a table handler that is used by another
      thread. The original table handler and the cloned table handler can
      belong to different transactions.  So both asserts are removed.
      
      rb#3066 approved by Marko
------------------------------------------------------------
revno: 6265 [merge]
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: 17286858-mysql-trunk
timestamp: Wed 2013-08-14 14:00:01 +0530
message:
  BUG#17286858:
  Upmerge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.66
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: 17286858-mysql-56
    timestamp: Wed 2013-08-14 13:57:36 +0530
    message:
      Bug#17286858: CHANGE_MASTER() INVOKES HA_INNOBASE::TRUNCATE() IN A DML TRANSACTION
        
      Problem: While resetting the slave-worker-info table, table->file->truncate() was
      being called which is a DDL operation and should not be mixed with DML operations,
      according to innodb api specs.
        
      Fix: Replaced truncate with the a sequential row deletion using ha_delete_row()
      interface.
------------------------------------------------------------
revno: 6264 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 10:38:10 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.65 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-14 10:32:15 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.536.25 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-08-14 10:24:36 +0300
        message:
          Merge mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.880.36
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-08-14 09:43:21 +0300
            message:
              Bug#16971045 ASSERTION FAILURES ON ROLLBACK OF AN INSERT AFTER A
              FAILED BLOB WRITE
              
              btr_store_big_rec_extern_fields(): Relax a debug assertion so that
              some BLOB pointers may remain zero if an error occurs.
              
              btr_free_externally_stored_field(), row_undo_ins(): Allow the BLOB
              pointer to be zero on any rollback.
              
              rb#3059 approved by Jimmy Yang, Kevin Lewis
------------------------------------------------------------
revno: 6263
committer: Vamsikrishna Bhagi <vamsikrishna.bhagi@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 10:43:12 +0530
message:
  (no message)
------------------------------------------------------------
revno: 6262
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-13 23:10:29 -0600
message:
  Fix Compiler warnings on Windows 32 and 64 bit compiles
  for InnoDB and innorwlocktest.
  
  Approved by Sunny in RB#3070
------------------------------------------------------------
revno: 6261 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 10:05:58 +0800
message:
  Follow up patch of Bug#17214191 MEMCACHED ADD/SET ARE SLOWER THAN INSERTS
  Fixed the trunk weekly test failure.
  
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.64
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: 17214191
    timestamp: Wed 2013-08-14 09:50:06 +0800
    message:
      Follow up patch of Bug#17214191 MEMCACHED ADD/SET ARE SLOWER THAN INSERTS
      
      Approved by Jimmy on IM.
      
      This follow up patch fixed the trunk weekly test failure.
      The previous patch triggered a legacy bug.
      On Solaris, strtok_r has different behavior. That is, if the input
      string is a empty string, the third in/out parameter will not change
      after this function was called.
      So, on Solaris, we can't use this out parameter to check the end
      condition. We should use the return value to check it.
------------------------------------------------------------
revno: 6260
committer: Shivji Kumar Jha <shivji.jha@oracle.com>
branch nick: mysql-trunk_wl3656
timestamp: Wed 2013-08-14 02:44:56 +0530
message:
  WL#3656:PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
        
  Post push fix.
  Fixed valgrind failure in rpl_perfschema_connect_status.test
------------------------------------------------------------
revno: 6259 [merge]
committer: Igor Solodovnikov <igor.solodovnikov@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-14 00:11:51 +0300
message:
  Merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.258.63
    committer: Igor Solodovnikov <igor.solodovnikov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-14 00:11:09 +0300
    message:
      Bug #16797982	MYSQL_OPTIONS4 SYMBOL MISSING FROM LIBMYSQL.DLL, CONNECTOR/C 6.1, 32BIT
      
      CLIENT_API_FUNCTIONS list in libmysql/CMakeLists.txt updated.
------------------------------------------------------------
revno: 6258
committer: Vamsikrishna Bhagi <vamsikrishna.bhagi@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-13 21:47:28 +0530
message:
  WL#6441 Convert mysql_secure_installation
          script to C
  
  
  mysql_secure_installation script currently
  stores the user supplied password in a temporary
  option file. This option file is later passed to
  mysql client, which executes the required SQL
  commands.
  
  Since, storing password in an option file is
  considered insecure, the script can be converted
  to a C++ program so that the program can connect
  to the server directly and execute the specified
  commands using C API (libmysql).
------------------------------------------------------------
revno: 6257
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-13 21:41:35 +0530
message:
  WL#6314:
  Additional runs for new MTS submode.
  daily runs  : --slave-parallel-type=database|logical_clock
  weekly runs : --slave-parallel-type=database|logical_clock --big-test
------------------------------------------------------------
revno: 6256 [merge]
committer: Rohit Kalhans <rohit.kalhans@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-13 20:48:29 +0530
message:
  Wl#6314: Prepared transactions slave parallel applier
    
  Description: Implemented intra-schema multi-threaded slave
  MySQL replication slaves can now apply events in parallel within
  the database. This is made possible by using the parallelization
  information from the master. The information is stored as logical
  timestamp of the last transaction that committed before the current
  one, when this transaction entered the prepare phase. All the
  transactions that have the same commit parent can be executed in
  parallel.
    ------------------------------------------------------------
    revno: 5107.36.72
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-08-12 18:51:43 +0530
    message:
      Fixed i_rpl.rpl_mts_internals  on OSx
    ------------------------------------------------------------
    revno: 5107.36.71
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-08-08 02:31:34 +0530
    message:
      WL#6314
      fixed failure when DDL with *VAR events are involved.
    ------------------------------------------------------------
    revno: 5107.36.70
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-08-07 18:48:46 +0530
    message:
      WL#6314: Intra-schema multi-threaded slaves
      
      1. Fixed rpl_perfschema_execute_status_by_worker test failure after merge to trunk.
      2. Fixed main.mysqlbinlog which failed due to change in binlog format after this
         WL.  
    ------------------------------------------------------------
    revno: 5107.36.69 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-08-07 18:20:24 +0530
    message:
      Local merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5107.36.68 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-08-05 13:55:50 +0530
    message:
      local merge with mysql trunk
    ------------------------------------------------------------
    revno: 5107.36.67
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-08-02 00:05:16 +0530
    message:
      WL#6314: Intra-schema multithreaded slaves.
      
      Fixed incorrect logic in Mts_Submode_master which caused the
      jobs_done to advance incorrectly causing the jobs_done > delegated_jobs
      thereby preventing the slave coordinator from waiting before scheduling
      next group. 
    ------------------------------------------------------------
    revno: 5107.36.66
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-23 16:53:31 +0530
    message:
      WL#6314: Intra-schema multithreaded slaves
      BUG#17194823: VARIABLE SLAVE_PARALLEL_TYPE CAN BE CHANGED FOR RUNNING SLAVE
      
      Fix: Moved the check for is slave running to ON_CHECK and behind the
      active_mi->rli->run_lock.
    ------------------------------------------------------------
    revno: 5107.36.65
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-07-17 23:55:16 +0530
    message:
      WL#6314:
      Increased the test coverage by adding temporary tables in rpl_mts_submode_switch
      disabled sys_vars.slave_parallel_type_basic on embedded servers.
    ------------------------------------------------------------
    revno: 5107.36.64
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-07-17 14:17:01 +0530
    message:
      fixed compile time warnings in sql/binlog.cc
    ------------------------------------------------------------
    revno: 5107.36.63
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-07-17 13:19:21 +0530
    message:
      Fixed i_rpl.rpl_stop_slave_timeout test failure caused after a merge with mysql-trunk.
    ------------------------------------------------------------
    revno: 5107.36.62 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-16 20:42:42 +0530
    message:
      local merge with mysql-trunk branch.
    ------------------------------------------------------------
    revno: 5107.36.61
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-16 20:37:20 +0530
    message:
      WL#6314:
      Reverted unwanted changes from the final patch.
    ------------------------------------------------------------
    revno: 5107.36.60
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-16 19:26:01 +0530
    message:
      Restricted tests that require slave_parallel_type=database
    ------------------------------------------------------------
    revno: 5107.36.59
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-16 18:30:56 +0530
    message:
      WL#6314:
      fixed mts_submode_switch issue
      fixed commenting in newly added tests
      fixed modified tests.
    ------------------------------------------------------------
    revno: 5107.36.58
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-16 01:55:28 +0530
    message:
      WL#6314:
      Fixed mts_submode_switch failure on push-build
    ------------------------------------------------------------
    revno: 5107.36.57
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-07-15 22:04:10 +0530
    message:
      WL#6314:
      fixed timeout issues.
      Fixed rpl.rpl_mts_submode_switch by making D3.t transactional.
      removed MTR runs on Pushbuild branch to make the tests faster.
    ------------------------------------------------------------
    revno: 5107.36.56
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-07-15 18:01:40 +0530
    message:
      WL6314: fixed test failures in rpl.rpl_parallel_switch_sequential.test
      and some other tests failing due to timeout.
    ------------------------------------------------------------
    revno: 5107.36.55
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-07-15 03:13:31 +0530
    message:
      WL#6314:
      -restricted rpl_*_mts_recovery tests for slave_parallel_type= logical clock
      -Added new test for MTS crash recovery for the new submode.
    ------------------------------------------------------------
    revno: 5107.36.54
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sun 2013-07-14 17:50:59 +0530
    message:
      WL#6314: partially reverted the changes in rohit.kalhans@oracle.com-20130712152054-dpb4rp1j0fg4nb0p
    ------------------------------------------------------------
    revno: 5107.36.53
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sun 2013-07-14 17:37:15 +0530
    message:
      WL#6314:
      -Added test to check switching submode works seamlessly without reset slave
      -Updated test rpl_mts_submode_switch to check
       - the diff of master & slave tables.
       - RAND_EVENTS and USER VAR events outside the trx boundaries
    ------------------------------------------------------------
    revno: 5107.36.52
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-07-12 20:50:54 +0530
    message:
      -fixed test cases
          1.rpl.rpl_parallel_switch_sequential
          2.rpl.rpl_semi_sync_events
    ------------------------------------------------------------
    revno: 5107.36.51
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-07-12 13:05:24 +0530
    message:
      WL#6314
      Fixed failures due to incorrect file inclusions.
      Fixed failures due to old binlog being used in tests.
    ------------------------------------------------------------
    revno: 5107.36.50
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-07-12 00:36:15 +0530
    message:
      Disabled test rpl_auto_increment_bug33029.test since it is not compatible
      with slave_parallel_type=LOGICAL_CLOCK. This test uses an old relay log which
      causes the slave to stop as this depicts an old master. 
    ------------------------------------------------------------
    revno: 5107.36.49
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-07-11 23:18:03 +0530
    message:
      WL#6314: Inter-transaction multi threaded slave.
      
      1. Added method to check of mts type.
      2. fixed test cases failing on pb2 
    ------------------------------------------------------------
    revno: 5107.36.48
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-07-11 15:29:54 +0530
    message:
      Updated test cases. 
      Enabled disabled test on PB.
    ------------------------------------------------------------
    revno: 5107.36.47
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-07-11 10:57:09 +0530
    message:
      Enabled big test on WL branch
    ------------------------------------------------------------
    revno: 5107.36.46
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-07-10 06:16:04 +0530
    message:
      WL#6314: intra-schema multi-threaded slave
      
      Fixed test failures on PB2 after last push.
      - Updated mts_group_status to MTS_NOT_IN_GROUP in Mts_submode_logical_clock::
        wait_for_workers_to_finish()
    ------------------------------------------------------------
    revno: 5107.36.45
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-07-10 03:39:18 +0530
    message:
      WL#6314 Intra schema multi-treaded slave
      - moved wait_for_workers_to_finish() to Mts_submode class and 
        derivatives.
      - fixed failing test cases on pushbuild.
    ------------------------------------------------------------
    revno: 5107.36.44
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-09 05:29:42 +0530
    message:
      WL#6314: intra-transaction multi-threaded slave.
      
      - Added stage info while coordinator thread is waiting.
      -removed condition wait while waiting for transactions to finish
    ------------------------------------------------------------
    revno: 5107.36.43
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-07-08 20:32:54 +0530
    message:
      WL#64314: Intra-schema mu;lti-threaded slave.
      Adressed review comments.
      cleanup code
      removed all unwanted changes.
    ------------------------------------------------------------
    revno: 5107.36.42
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sat 2013-07-06 19:58:20 +0530
    message:
      Wl#6314: Intra-transaction multi-threaded slave
      -Replaced mysql_mutex_t with atomic locks and increments.
      -Replaced custom algorithm for waiting for workers to finish with
       wait_for_workers_to_finish method.
    ------------------------------------------------------------
    revno: 5107.36.41
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-07-05 00:35:50 +0530
    message:
      Fixed test case failures on push build.
      Fixed valgrind issues
    ------------------------------------------------------------
    revno: 5107.36.40
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-07-04 16:39:32 +0530
    message:
      Fixed test case failures on PB2
      Renamed have_mts_submode_master_parallel.inc have_mts_submode_logical_clock.inc
    ------------------------------------------------------------
    revno: 5107.36.39
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-07-03 13:48:02 +0530
    message:
      Fixed test case failures.
    ------------------------------------------------------------
    revno: 5107.36.38 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-02 21:15:00 +0530
    message:
      Local merge  from mysql-trunk branch.
    ------------------------------------------------------------
    revno: 5107.36.37
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-07-02 21:05:11 +0530
    message:
      WL#6314: Intra-schema multi-threaded slave
      1. Renamed Mts_submode_master => Mts_submode_logical_clock
      2. Renamed MASTER_PARALLEL option to LOGICAL CLOCK
      3. Moved some variables relevant to master based parallelization to Mts_submode_logical_clock.
      4. created a virtual destructor in Mts_submode class.
    ------------------------------------------------------------
    revno: 5107.36.36 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-07-01 19:54:23 +0530
    message:
      Local merge with MySQL-trunk branch.
    ------------------------------------------------------------
    revno: 5107.36.35
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-06-10 16:58:10 +0530
    message:
      WL#6314: Prepared transactions slave applier
      Fixed the server crash issue due to assert failure when
      statements are rolled back in the trx cache when a statement
      fails due to error.
    ------------------------------------------------------------
    revno: 5107.36.34
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sun 2013-06-09 13:06:19 +0530
    message:
      WL#6314:Prepared transactions slave parallel applier
      Fixed comments and improved code.
      Removed unwanted changes.
    ------------------------------------------------------------
    revno: 5107.36.33
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-05-14 23:42:08 +0530
    message:
      WL#6314
      Updated missing comment in an added function.
      Updated the default value of slave_parallel_type
      Fixed an unwanted change to the test case.
    ------------------------------------------------------------
    revno: 5107.36.32 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-05-07 17:46:13 +0530
    message:
      WL#6314: Intra-schema multithreaded slaves.
      Local merge to from mysql-trunk
    ------------------------------------------------------------
    revno: 5107.36.31
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-04-29 20:23:40 +0530
    message:
      WL#6314 Intra-schema multi-threaded slaves:
      - Fixed two test cases
      - fixed Glib-c heap dump issues
      - Removed atomic-operations in logical state clocks. Used simple
        mutex gaurded read and increment operations instead.
    ------------------------------------------------------------
    revno: 5107.36.30 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-04-25 11:58:33 +0530
    message:
      merge from mysql-trunk to the worklog branch
    ------------------------------------------------------------
    revno: 5107.36.29
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-04-25 11:39:06 +0530
    message:
      WL#6314: Inrea-transaction multi-threaded slaves.
      - Fixed test case failures on PB2
      - Added per-push runs to test the new mts-submode.
      - Updates test case result files 
    ------------------------------------------------------------
    revno: 5107.36.28
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-04-24 13:53:25 +0530
    message:
      WL#6314: fixed Glib-c heap dump error on some testcases.
    ------------------------------------------------------------
    revno: 5107.36.27
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-04-15 15:58:55 +0530
    message:
      WL#6314: Intra-schema multi-threaded slaves
      
      Fixed testcase failures
      Fixed strayed(unbounded by BEGIN...COMMIT) uservar
       events in case of uservar events being used in DDLs
      Fixed dangling pointer issue with current_mts_submode.
    ------------------------------------------------------------
    revno: 5107.36.26
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-04-05 20:19:21 +0530
    message:
      WL#6314 Intra-transaction  multithreaded slaves
      Fixed test cases
      Fixed comments
    ------------------------------------------------------------
    revno: 5107.36.25
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-04-04 15:56:07 +0530
    message:
      Wl#6314: Itra transaction multithreaded slaves
      
      -fixed test cases
      -fixed start/stop slave issues.
    ------------------------------------------------------------
    revno: 5107.36.24
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-04-04 01:00:17 +0530
    message:
      WL#6314:
      1. Code cleanup.
      2. changed scheduling logic which was flawed in case of DDLS
       
    ------------------------------------------------------------
    revno: 5107.36.23
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-04-02 14:13:43 +0530
    message:
      WL#6314: intra-database multi-threaded slaves
      Fixed code which causes test case falures.
    ------------------------------------------------------------
    revno: 5107.36.22
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-04-01 15:46:25 +0530
    message:
      WL#6314: Intra-transaction multithreaded slaves
      -modularized the code to incorporate two submodes.
      -added tests to check the switching between the modes
    ------------------------------------------------------------
    revno: 5107.36.21
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Thu 2013-03-28 22:38:07 +0530
    message:
      WL#6314: Intra-transaction multithreaded slaves
      modularized the code to incorporate two submodes. 
    ------------------------------------------------------------
    revno: 5107.36.20
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-03-19 18:06:02 +0530
    message:
      WL#6314: Intra-schema multithreaded slaves.
      -Added: test for testing submodes of MTS
      -Fixed: switching between the submodes is only allowed when the slave is not running.
    ------------------------------------------------------------
    revno: 5107.36.19
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-03-15 20:07:40 +0530
    message:
      WL#6314: Intra-schema multi-threaded slaves
      
      Fixed test tailures on mysql trunk
      	- fixed temp tables and GTID failures.
    ------------------------------------------------------------
    revno: 5107.36.18
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-03-13 19:06:36 +0530
    message:
      WL#6314: Intra-transaction multi-threaded slave
      
      Fixed issues with transactional DML outside a transaction.
    ------------------------------------------------------------
    revno: 5107.36.17
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-03-13 14:05:59 +0530
    message:
      WL#6314: Intra-schema multi-threded slaves.
      
      1. Fixed the issue with having transaxtional and non-transactional tables in a transaction.
      2. refactored the code around fix-commit_sequence number. 
    ------------------------------------------------------------
    revno: 5107.36.16
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sat 2013-03-09 03:26:34 +0530
    message:
      WL6314: 
      When the slave worker errors out, the coordinator should not wait.
      this may lead to end-less waiting and a hung slave.
    ------------------------------------------------------------
    revno: 5107.36.15 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-03-08 21:00:41 +0530
    message:
      WL#6314: local merge from mysql-trunk to mysql-trunk-wl6314
    ------------------------------------------------------------
    revno: 5107.36.14
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Fri 2013-03-08 20:50:56 +0530
    message:
      WL#6314: fixing minor issue with MAX_LOG_EVENT_HEADER
    ------------------------------------------------------------
    revno: 5107.36.13
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-03-05 13:53:47 +0530
    message:
      WL#6314; Inter-schema multi-threaded slave
      
      Removed the unused prepare_seq_number and all instances
    ------------------------------------------------------------
    revno: 5107.36.12
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Mon 2013-02-25 15:31:48 +0530
    message:
      WL#6314:
      Minor change in temporary table handling in case of MTS with BGC. 
    ------------------------------------------------------------
    revno: 5107.36.11
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sat 2013-02-23 15:57:51 +0530
    message:
      WL#6314: Intra-schema multithreaded slave.
      
      Fixed the checkpointing issues for DMLS. 
    ------------------------------------------------------------
    revno: 5107.36.10
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sat 2013-02-23 12:53:22 +0530
    message:
      WL#6314: Intra-schema multi-threaded slave
      
      fixed the prepare commit timestamping 
      fixed checkpointing with MTS_BGC
    ------------------------------------------------------------
    revno: 5107.36.9
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Sat 2013-02-09 02:04:30 +0530
    message:
      WL#6314: Inter-schema Multithreaded slaves
      
      -fixed the temporary table attachment issues
        -the coordinator while assigning the events to the threads also
         attaches the temporary tables to the worker threads 
    ------------------------------------------------------------
    revno: 5107.36.8
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Wed 2013-02-06 18:57:23 +0530
    message:
      wl#6314: Intra-schema Parallel slave
      
      - fixed the faulire on WL branch
        - it was mostly due to unhanlded codepath when transactions are rolled back.
    ------------------------------------------------------------
    revno: 5107.36.7 [merge]
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk-wl6314
    timestamp: Tue 2013-02-05 16:40:14 +0530
    message:
      local merge from mysql-trunk to the worklog branch
    ------------------------------------------------------------
    revno: 5107.36.6
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk
    timestamp: Tue 2013-02-05 03:11:46 +0530
    message:
      WL#6314: Intra-schema multi-threaded slave
      
      - Fixed the MTS_BGC to work with GTIDs
      - fixed thread selection problem
        - within the group the threads will be assigned in round robin fashion.
      - cleaned up code in and around do_write_cache()
    ------------------------------------------------------------
    revno: 5107.36.5
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk
    timestamp: Thu 2013-01-24 03:25:00 +0530
    message:
      WL#6314:Inter-schema multi-threaded slave
      
      -fixed prepare & commit sequencing.
      -At binlog-prepare 
      	-prepare clock steps by one and leaves the timestamp on
      	 the entering thread.
              -commit clock does not step but leaves a timestamp on the
               entering thread. This will be used as a commit parent on the slave side.
      -At commit
              -before entering the ha_commit_low i.e. actual commit the 
      	 commit clock steps by one.
      TODO: call binlog_prepare for implicit commits.
      TODO: use these sequences to assign group ids to transactions on slave.
    ------------------------------------------------------------
    revno: 5107.36.4
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk
    timestamp: Mon 2013-01-21 00:55:43 +0530
    message:
      WL#6314: Inter-schema multi-threaded slaves
      
      -Fixed the status-var field for Query_log_event to
      store the Prepare and Commit timestamps
        -TODO: fix the same for GTID events. 
      - Fixed prepare commit sequencing on the master.
        -TODO: use the two timestamps to mak taxonomical infrerences
      on the slave side and find the group id to events.
    ------------------------------------------------------------
    revno: 5107.36.3
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk
    timestamp: Fri 2013-01-18 03:17:58 +0530
    message:
      WL#6314: Intra-schema multi-threaded slave
            
      - Implemented group id assignment on the slave side
      - Associated BGC based group with workers threads.
    ------------------------------------------------------------
    revno: 5107.36.2
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk
    timestamp: Fri 2013-01-18 01:12:56 +0530
    message:
      WL#6314: Intra-schema multi-threaded slave
      
      - Implemented state clock for prepare & commit sequencing
      - Added new fields in status var section of Query log events
        to store the prepare and commit logical timestamp.
      - update to these timestamps will be done in do_write_cache().
    ------------------------------------------------------------
    revno: 5107.36.1
    committer: Rohit Kalhans <rohit.kalhans@oracle.com>
    branch nick: mysql-trunk
    timestamp: Mon 2013-01-14 18:20:42 +0530
    message:
      WL#6314: Intra-schema multi-threaded slave
      
      Updated the branch name.
      Added variable to choose the type of mts
------------------------------------------------------------
revno: 6255
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Tue 2013-08-13 21:50:39 +1000
message:
  WL#6044 - Follow up fix. Destroy the lock wait events on shutdown. Destroy
  the temporary block mutex when it is out of scope, during table IMPORT.
------------------------------------------------------------
revno: 6254
committer: Rafal Somla <rafal.somla@oracle.com>
branch nick: bug17294298
timestamp: Tue 2013-08-13 13:18:17 +0200
message:
  bug#17294298 - -DWITH_TEST_TRACE_PLUGIN=ON CAUSES CLIENTS TO ASSERT AT PROGRAM END
  
  Problem was that memory allocated with operator new was freed using my_free(). Fixed by using operator delete to free the memory.
------------------------------------------------------------
revno: 6253
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Tue 2013-08-13 09:23:24 +0200
message:
  Bug#14028340: IMPOSSIBLE TO OPTIMIZE SUBPARTITIONS
  
  post-push fix for error handling
------------------------------------------------------------
revno: 6252
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-13 12:42:07 +0530
message:
  - bug#17283183  ASSERTION FAILURE INVOLVING THE PURGE THREAD AND IBTMP1
  
    While upgrading from 5.7.1 to 5.7.2, non-redo rollback segment concept
    is introduced. Slot-1-32 are reserved for non-redo rollback segment.
    With normal shutdown of 5.7.1 there could be active rollback segments
    in slot-1-32 those might need to be scheduled for purge action.
    This scheduling is already been done.
  
    What went missing is, purge trying to access rollback segment between 1-32
    directly through trx_sys->rseg_array which on upgrade belongs to
    non-redo rollback segments.
    Purge should try acessing the old rollback segment that has been made active
    and kept in pending_purge_rseg_array in slot-1..32.
    Purge for temp-table is anyway blocked.
    Corrected action to ensure purge now access proper rollback segment.
  
    Approved by: Jimmy (rb#3027)
------------------------------------------------------------
revno: 6251
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Tue 2013-08-13 16:20:36 +1000
message:
  WL#6044 - Follow up fix. Revert the log_sys_t::mutex changes. Move the AIO
  events out of the #ifdef _WIN32. The events were not being freed on shutdown.
------------------------------------------------------------
revno: 6250
committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
branch nick: trunk1
timestamp: Tue 2013-08-13 11:00:31 +0530
message:
  Made partition_basic_symlink_myisam.test experimental 
------------------------------------------------------------
revno: 6249 [merge]
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Tue 2013-08-13 08:46:32 +1000
message:
  WL#6044 - InnoDB: Policy-based mutex
  
  Create a common interface for all InnoDB mutex types. This change gets rid
  of the distinction between "os_fast_mutex" and the InnoDB home-brew mutex
  implementation.
  
  Create several classes of mutexes (more to be added later).
  
   1. OSBasicMutex   - POSIX or Windows CRITICAL_SECTION
   2. OSTrackedMutex - Same as #1 but we track the acquire/release
   3. TTASFutexMutex - Where available on Linux, uses futexes instead of condvars
   4. TTASEventMutex - The old home-brew implementation
   5. SpinMutex      - Spin only version that uses TTAS
  
  #3 should get rid of an existing performance issue around condvar broadcasts
  that results in a thundering herd problem. Also, we can now set the mutex type
  to any one of the above for individual mutexes in the code.
  
  Rewrite the os_event_t code, use OSBasicMutex as the underlying mutex type.
  The code uses static polymorphism (C++ templates) instead of inheritance. This
  is to avoid the vptr overhead. This is mainly relevant only for mutexes that are
  currently used for the blocks. For very large buffer pools, e.g., 64G this will
  reduce the mutex overhead significantly. On Linux where futexes are available
  the mutex overhead can be as low as sizeof(lock_word_t).
  
  Rewrite the UNIV_SYNC_DEBUG code. Move all PFS key defines and declarations
  to sync0sync.h and sync0sync.cc.
  
  rb#1913 Approved by Jimmy Yang and Yasufumi Kinoshita.
    ------------------------------------------------------------
    revno: 4138.2.218 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-13 08:40:28 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.217 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Sun 2013-08-11 20:13:22 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.216 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-08-09 09:15:48 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.215 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-08 17:59:31 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.214
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-08 14:03:46 +1000
    message:
      WL#6044 - Code cleanup.
    ------------------------------------------------------------
    revno: 4138.2.213 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-08 10:59:06 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.212
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-08 10:51:26 +1000
    message:
      WL#6044 - Fix bugs reported during debug testing. Spin looks can be zero, update
      the assertion. Change the order of the pool mutexes, trips up when memory
      debugging is enabled. Enable DEBUG SYNC checks for a newly created database.
      Print mutex enter filename and line number in debug output, fix formatting.
    ------------------------------------------------------------
    revno: 4138.2.211 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 20:18:10 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.210
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 20:10:03 +1000
    message:
      WL#6044 - Fix the sync debug level check. Start the search from the oldest
      latch (instead of the latest latch), this ensures that recursive RW-LOCKS
      checking works as before.
    ------------------------------------------------------------
    revno: 4138.2.209
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 13:32:06 +1000
    message:
      WL#6044 - Code cleanup
    ------------------------------------------------------------
    revno: 4138.2.208 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 13:23:33 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.207 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 09:31:08 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.206 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 08:12:19 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.205
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 07:39:19 +1000
    message:
      WL#6044 - Code cleanup. Use standard library for alloc of sync array
      data structures.
    ------------------------------------------------------------
    revno: 4138.2.204
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-08-07 07:21:04 +1000
    message:
      WL#6044 - Fix debug code.
    ------------------------------------------------------------
    revno: 4138.2.203
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 19:01:22 +1000
    message:
      WL#6044 - Update the debug check.
    ------------------------------------------------------------
    revno: 4138.2.202 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 16:13:03 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.201
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 12:48:19 +1000
    message:
      WL#6044 - Remove dead code.
    ------------------------------------------------------------
    revno: 4138.2.200
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 11:31:23 +1000
    message:
      WL#6044 - Fix non-atomic issues.
    ------------------------------------------------------------
    revno: 4138.2.199
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 10:05:44 +1000
    message:
      WL#6044 - Init the sync debug mutex
    ------------------------------------------------------------
    revno: 4138.2.198
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 09:36:32 +1000
    message:
      WL#6044 - Fix startup message
    ------------------------------------------------------------
    revno: 4138.2.197
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-08-06 09:19:00 +1000
    message:
      WL#6044 - Track policy set incorrectly when UNIV_DEBUG is defined.
    ------------------------------------------------------------
    revno: 4138.2.196
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 22:29:21 +1000
    message:
      WL#6044 - Remove debugging changes.
    ------------------------------------------------------------
    revno: 4138.2.195
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 22:27:46 +1000
    message:
      WL#6044 - Add support for non-atomic builds.
    ------------------------------------------------------------
    revno: 4138.2.194
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 19:39:23 +1000
    message:
      WL#6044 - Add a conditional compile around mutexes that use atomics.
    ------------------------------------------------------------
    revno: 4138.2.193
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 18:45:41 +1000
    message:
      WL#6044 - Fallback to system mutexes if atomics is not available.
    ------------------------------------------------------------
    revno: 4138.2.192
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 18:37:57 +1000
    message:
      WL#6044 - If we don't have atomics available then use system mutexes.
    ------------------------------------------------------------
    revno: 4138.2.191
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 16:41:22 +1000
    message:
      WL#6044 - Remove stray comman. STLPort doesn't allow (--it.base()), assign
      to Latches::iterator then decrement and use.
    ------------------------------------------------------------
    revno: 4138.2.190
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 14:28:36 +1000
    message:
      WL#6044 - Remove all support for SHOW ENGINE MUTEX STATUS;
    ------------------------------------------------------------
    revno: 4138.2.189 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-08-05 07:07:08 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.188
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Sun 2013-08-04 21:11:57 +1000
    message:
      WL#6044 - Remove unused sync levels, optimiser the UNIV_SYNC_DEBUG code. Add
      some self check code.
    ------------------------------------------------------------
    revno: 4138.2.187
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Sun 2013-08-04 18:36:51 +1000
    message:
      WL#6044 - Fix some more bugs and code cleanup in UNIV_SYNC_DEBUG code.
    ------------------------------------------------------------
    revno: 4138.2.186
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Sun 2013-08-04 17:11:16 +1000
    message:
      WL#6044 - Fix some bugs and cleanup the code in UNIV_SYNC_DEBUG code.
    ------------------------------------------------------------
    revno: 4138.2.185
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-08-02 11:25:59 +1000
    message:
      WL#6044 - Fix a preprocessor directive
    ------------------------------------------------------------
    revno: 4138.2.184
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-08-02 11:21:12 +1000
    message:
      WL#6044 - Fix syntax error
    ------------------------------------------------------------
    revno: 4138.2.183 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-08-02 10:13:22 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.182
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-08-02 09:54:04 +1000
    message:
      WL#6044 - Revert some counters code that was removed earlier. Clean up
      the code.
    ------------------------------------------------------------
    revno: 4138.2.181
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-01 19:24:03 +1000
    message:
      WL#6044 - Cleanup the code
    ------------------------------------------------------------
    revno: 4138.2.180 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-01 13:33:47 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.179
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-08-01 13:33:01 +1000
    message:
      WL#6044 - Code cleanup.
    ------------------------------------------------------------
    revno: 4138.2.178 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-07-31 12:21:43 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.177 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-07-30 18:16:57 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.176
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-07-30 18:13:55 +1000
    message:
      WL#6044 - Clean up whitespace
    ------------------------------------------------------------
    revno: 4138.2.175 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Mon 2013-07-29 14:50:07 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.174 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Sat 2013-07-27 15:00:08 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.173 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-07-25 10:57:12 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.172 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-07-24 04:47:08 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.171 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-07-18 21:50:46 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.170 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-07-17 17:34:45 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.169
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-06-27 20:41:57 +1000
    message:
      WL#6044 - Move srv_use_native_conditions to os0event.cc.
    ------------------------------------------------------------
    revno: 4138.2.168 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-06-27 20:06:41 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.167
    committer: amrendra <amrendra.x.kumar@oracle.com>
    branch nick: mysql-trunk-wl6044
    timestamp: Thu 2013-06-27 10:38:13 +0200
    message:
      WL#6044 - Fix merge issues
    ------------------------------------------------------------
    revno: 4138.2.166
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-06-27 16:56:50 +1000
    message:
      WL#6044 - Fix merge issues
    ------------------------------------------------------------
    revno: 4138.2.165
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-06-25 17:40:26 +1000
    message:
      WL#6044 - Fix Windows defines
    ------------------------------------------------------------
    revno: 4138.2.164
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-06-25 16:13:37 +1000
    message:
      WL#6044 - Fix type mismatch
    ------------------------------------------------------------
    revno: 4138.2.163
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-06-21 21:08:40 +1000
    message:
      WL#6044 - Convert __WIN__ to _WIN32
    ------------------------------------------------------------
    revno: 4138.2.162 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-06-21 18:29:39 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.161
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-06-19 03:26:00 +1000
    message:
      WL#6044 - Remove merge conflict markers
    ------------------------------------------------------------
    revno: 4138.2.160 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-06-19 03:16:10 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.159 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-05-31 18:16:42 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.158
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-05-30 17:37:26 +1000
    message:
      WL#6044 - Update comments
    ------------------------------------------------------------
    revno: 4138.2.157
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-05-30 17:31:07 +1000
    message:
      WL#6044 - Update comments.
    ------------------------------------------------------------
    revno: 4138.2.156 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-05-30 04:27:23 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.155
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2013-05-30 04:23:44 +1000
    message:
      WL#6044 - Remove unused mutex
    ------------------------------------------------------------
    revno: 4138.2.154 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Wed 2013-05-29 17:32:30 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.153 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Sun 2013-05-26 07:52:05 +1000
    message:
      WL6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.152
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-05-17 14:07:53 +1000
    message:
      WL#6044 - Fix merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.151 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-05-16 12:20:42 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.150 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-05-15 18:30:01 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.149 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-05-15 10:25:36 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.148 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-05-14 16:18:05 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.147 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-05-13 06:40:00 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.146 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-05-09 16:00:27 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.145 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-05-08 10:58:56 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.144 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-05-07 08:09:03 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.143 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-05-03 10:19:17 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.142 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-05-02 12:26:21 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.141 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-05-01 10:19:46 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.140 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-04-30 17:02:44 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.139 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-04-17 08:31:06 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.138 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-04-16 08:48:07 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.137 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-04-15 07:34:56 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.136 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-04-12 09:35:34 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.135 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-04-10 09:19:13 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.134 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-04-08 08:23:04 +1000
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.133 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-04-05 14:57:43 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.132 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-04-04 08:33:09 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.131 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-04-03 13:36:27 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.130
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Tue 2013-04-02 05:13:14 +0200
    message:
      WL#6044 - Fix os_event_create() and os_event_free() calls.
    ------------------------------------------------------------
    revno: 4138.2.129 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-04-02 12:45:43 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.128 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-03-28 14:42:23 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.127 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-27 10:12:12 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.126 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-03-26 13:12:11 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.125 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2013-03-23 12:02:56 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.124 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-20 09:16:59 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.123 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-03-19 08:43:21 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.122 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-03-15 12:51:51 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.121 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-03-14 11:09:42 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.120
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-13 11:31:53 +1100
    message:
      WL#6044 - Add macro mutex_enter_nospin().
    ------------------------------------------------------------
    revno: 4138.2.119 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-13 09:06:09 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.118
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-13 08:51:07 +1100
    message:
      WL#6044 - Disable the OS mutex spin on Windows
    ------------------------------------------------------------
    revno: 4138.2.117
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-03-12 13:23:49 +1100
    message:
      WL#6044 - Use ENUM instead of magic number.
    ------------------------------------------------------------
    revno: 4138.2.116
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-03-12 09:30:35 +1100
    message:
      WL#6044 - Allow setting the max spins and max delay when invoking mutex enter.
    ------------------------------------------------------------
    revno: 4138.2.115 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-03-11 19:29:44 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.114 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-03-08 09:05:06 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.113 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-03-07 08:31:40 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.112
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-06 16:36:50 +1100
    message:
      WL#6044 - os_event_init() has to be called before all other initialisation
      because on Windows we need to setup the function pointers.
    ------------------------------------------------------------
    revno: 4138.2.111 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-06 10:39:40 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.110
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-03-06 10:35:46 +1100
    message:
      WL#6044 - Fix typo.
    ------------------------------------------------------------
    revno: 4138.2.109
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-03-05 19:24:29 +1100
    message:
      WL#6044 - Initialise the Windows event infrastructure at startup.
    ------------------------------------------------------------
    revno: 4138.2.108 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-03-05 09:16:22 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.107
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-03-04 17:38:19 +1100
    message:
      WL#6044 - Fix PFS key name.
    ------------------------------------------------------------
    revno: 4138.2.106
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 21:30:10 +1100
    message:
      WL#6044 - Rename mutex key and remove unused key.
    ------------------------------------------------------------
    revno: 4138.2.105
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 21:17:09 +1100
    message:
      WL#6044 - Fix Windows build issues.
    ------------------------------------------------------------
    revno: 4138.2.104
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 21:12:13 +1100
    message:
      WL#6044 - Fix Windows build errors.
    ------------------------------------------------------------
    revno: 4138.2.103
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 21:06:47 +1100
    message:
      WL#6044 - Fix Windows build issues.
    ------------------------------------------------------------
    revno: 4138.2.102
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 20:51:01 +1100
    message:
      WL#6044 - Fix Windows build issues.
    ------------------------------------------------------------
    revno: 4138.2.101
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 20:42:11 +1100
    message:
      WL#6044 - Fix Windows build issues.
    ------------------------------------------------------------
    revno: 4138.2.100
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 18:48:26 +1100
    message:
      WL#6044 - Fix Windows build errors.
    ------------------------------------------------------------
    revno: 4138.2.99 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-03-03 12:31:30 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.98
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-03-01 16:10:45 +1100
    message:
      WL#6044 - Add virtual destructors.
    ------------------------------------------------------------
    revno: 4138.2.97 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-03-01 14:53:43 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.96
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-03-01 13:24:46 +1100
    message:
      WL#6044 - Spin before calling the system mutex "enter". This is to test if it
      makes any difference in perfromance. Last set of results indicate that the
      Sys mutexes on Linux 1K OLTP RW Sysbench tests show regression compared to
      mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.95
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-02-27 15:41:11 +1100
    message:
      WL#6044 - Separate the mutex implementation from InnoDB usage. Try and make it
      a generic implementation and remove all dependencies on InnoDB include files.
      
      Not all dependencies have been removed yet. Things like ulint and ut_a() etc.
      are required to make it work. I think we should use generic assert and types
      from stdint.h etc. to make it more generic.
    ------------------------------------------------------------
    revno: 4138.2.94 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-02-27 10:22:39 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.93
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-26 18:25:49 +1100
    message:
      WL#6044 - New code uses RW_LOCK_X not RW_LOCK_EX. Fix merge issue.
    ------------------------------------------------------------
    revno: 4138.2.92
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-26 14:29:45 +1100
    message:
      WL#6044 - ut0counter.h templates were not uniform. Some had default parameters
      while others didn't.
    ------------------------------------------------------------
    revno: 4138.2.91 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-26 08:49:57 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.90
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-02-25 19:39:33 +1100
    message:
      WL#6044: Move InnoDB specific CMAKE options to InnoDB directory from top level
      directory. Add a new option to select MUTEX_TYPE. Valid values are:
      
       "event" default, "sys" and "futex".
      
      If "futex" is not available it will fallback to "sys".
      
      Print the mutex type in the log on startup.
    ------------------------------------------------------------
    revno: 4138.2.89
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-02-25 18:19:36 +1100
    message:
      WL#6044 - We use FUTEX_WAIT_PRIVATE because we don't use shared mutexes.
    ------------------------------------------------------------
    revno: 4138.2.88
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-02-25 18:06:13 +1100
    message:
      WL#6044 - Cleaned up the Futex implementation. Use the counter indexer to select
      the sync array. Fix the counters in row0mysql.cc, use the default indexer.
      Specialise the mutex types in log0log.h. Remove the DefaultPolicy. Add a
      NullPolicy (a nop).
    ------------------------------------------------------------
    revno: 4138.2.87 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-02-25 17:36:23 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.86
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-02-21 10:34:01 +1100
    message:
      WL#6044 - Clean up the code.
    ------------------------------------------------------------
    revno: 4138.2.85
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-02-21 10:23:06 +1100
    message:
      WL#6044 - Clean up the code.
    ------------------------------------------------------------
    revno: 4138.2.84 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-02-20 18:27:55 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.83
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2013-02-17 12:31:25 +1100
    message:
      WL#6044 - Make m_lock_word mutable.
    ------------------------------------------------------------
    revno: 4138.2.82 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-15 14:36:46 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.81
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-15 12:07:23 +1100
    message:
      WL#6044 - Remove mutex_list_print_info(), we don't keep a global list anymore.
      If required, some policy can implement it. Adding and removing from the global
      mutex list has a cost. Also, the performance schema should be used for such
      things now.
    ------------------------------------------------------------
    revno: 4138.2.80
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-15 11:59:22 +1100
    message:
      WL#6044 - Remove code that exports latch data via show engine innodb status;
    ------------------------------------------------------------
    revno: 4138.2.79
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Fri 2013-02-15 00:14:50 +0100
    message:
      WL#6044 - Set the cell request_type before setting the cell latch, under the
      protection of the sync array mutex. Otherwise we can derefence the wrong
      latch, results in a race.
    ------------------------------------------------------------
    revno: 4138.2.78 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-02-14 07:34:32 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.77
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-02-13 18:32:15 +1100
    message:
      WL#6044 - Fix comment.
    ------------------------------------------------------------
    revno: 4138.2.76 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-02-13 14:52:09 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.75
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-02-13 14:45:49 +1100
    message:
      WL#6044 - Make the policy private to the Mutex implementation.
    ------------------------------------------------------------
    revno: 4138.2.74
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-12 14:48:19 +1100
    message:
      WL#6044 - Add debug code.
    ------------------------------------------------------------
    revno: 4138.2.73
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-12 13:49:27 +1100
    message:
      WL#6044 - Fix the spin and wait code. Port the sync array reserve cell patch
      to this branch.
    ------------------------------------------------------------
    revno: 4138.2.72 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-12 08:29:16 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.71
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-02-12 08:15:21 +1100
    message:
      WL#6044 - Fix build issues on Windows. Remove unused #defines too.
    ------------------------------------------------------------
    revno: 4138.2.70
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-02-11 14:37:04 +1100
    message:
      WL#6044 - Use TTASWaitMutex as the default mutex.
    ------------------------------------------------------------
    revno: 4138.2.69 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-02-11 14:28:25 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.68 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-08 19:03:13 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.67
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-08 16:18:13 +1100
    message:
      WL#6044 - Move mutex counters to sync0sync.cc.
    ------------------------------------------------------------
    revno: 4138.2.66
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-08 11:51:16 +1100
    message:
      WL#6044 - Specialise some of the more important mutexes.
    ------------------------------------------------------------
    revno: 4138.2.65 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2013-02-08 08:54:09 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.64 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-01-31 15:46:01 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.63 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-01-30 16:08:38 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.62 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2013-01-30 01:47:03 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.61 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2013-01-29 16:57:08 +1100
    message:
      WL#6044 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4138.2.60 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2013-01-24 18:13:48 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.59
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-01-07 17:12:29 +1100
    message:
      WL#6044 - Allow selective monitoring of mutexes, in particular the buffer pool
      page mutexes.
    ------------------------------------------------------------
    revno: 4138.2.58
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-01-07 16:03:28 +1100
    message:
      WL#6044 - Rename ib_mutex.ic to ut0mutex.ic
    ------------------------------------------------------------
    revno: 4138.2.57
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-01-07 15:46:52 +1100
    message:
      WL#6044 - Rename ib_mutex.h ut0mutex.h
    ------------------------------------------------------------
    revno: 4138.2.56 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2013-01-07 11:35:18 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.55 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-12-14 07:45:02 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.54 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-11-15 08:36:51 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.53 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2012-11-12 10:52:25 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.52 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-11-03 14:12:29 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.51 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-11-02 09:28:58 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.50
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-11-01 17:11:02 +1100
    message:
      WL#6044 - Revert to the existing function call interface for enter/exit.
    ------------------------------------------------------------
    revno: 4138.2.49 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-11-01 16:52:31 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.48
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-10-25 11:32:04 +1100
    message:
      WL#6047 - Optimise the TTAS Wait mutex busy wait code.
    ------------------------------------------------------------
    revno: 4138.2.47
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-10-25 10:51:55 +1100
    message:
      WL#6044 - Get rid of a vptr. Rmove the Observer interface.
    ------------------------------------------------------------
    revno: 4138.2.46
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-10-25 09:43:24 +1100
    message:
      WL#6044 - Change default type of old mutexes. Fix PFS initialisation. Init
      the buffer pool page mutexes unconditionally. Handle the PFS_NOT_INSTRUMENTED
      separately (later).
    ------------------------------------------------------------
    revno: 4138.2.45
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-10-18 08:04:46 +1100
    message:
      WL#6044 - Simplify the trx_sys_t::mutex calls.
    ------------------------------------------------------------
    revno: 4138.2.44
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-10-17 18:06:34 +1100
    message:
      WL#6044 - Code cleanup.
    ------------------------------------------------------------
    revno: 4138.2.43 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-10-17 17:33:31 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.42 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-10-09 12:39:34 +1100
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.41
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6044
    timestamp: Thu 2012-10-04 11:05:57 +0200
    message:
      WL#6044 - Fix the code for non-debug builds.
    ------------------------------------------------------------
    revno: 4138.2.40 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-10-04 15:53:57 +1000
    message:
      Merge from mysql-trunk to mysql-trunk-wl6044.
    ------------------------------------------------------------
    revno: 4138.2.39 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-09-28 17:07:03 +1000
    message:
      Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.38 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-09-28 16:59:22 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.37 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-09-27 18:18:08 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.36 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-09-26 08:48:58 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.35
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-09-26 08:44:59 +1000
    message:
      WL#6044 - Free the hash table rw_lock and mutexes during clear.
    ------------------------------------------------------------
    revno: 4138.2.34 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-09-25 20:53:02 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.33
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-09-25 20:17:20 +1000
    message:
      WL#6044 - Free the rw-locks and events explicitly.
    ------------------------------------------------------------
    revno: 4138.2.32
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-09-25 11:12:14 +1000
    message:
      WL#6044 - Use a common interface for all mutexes within InnoDB. Refactor the
      event code. Split the atomics defines to a separate file (os0atomic.h). Move
      the event code to os0event.*, split from os0sync.cc. Get rid of os0sync.cc.
      Get rid of tracking event and mutex instances. This should reduce overhead
      in creating both events and mutexes. They should be explicitly freed during
      shutdown.
    ------------------------------------------------------------
    revno: 4138.2.31
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2012-09-23 11:47:54 +1000
    message:
      WL#6044 - The mutex implementation should init and destroy the policy.
    ------------------------------------------------------------
    revno: 4138.2.30
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-09-22 15:44:11 +1000
    message:
      WL#6044 - Fix some merge errors.
    ------------------------------------------------------------
    revno: 4138.2.29
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-09-22 09:29:27 +1000
    message:
      WL#6044 - Re-add sync0sync.cc.
    ------------------------------------------------------------
    revno: 4138.2.28 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-09-22 09:26:44 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.27
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-09-22 09:10:35 +1000
    message:
      WL#6044 - Rename RW_LOCK_SHARED to RW_LOCK_S and RW_LOCK_WAIT_EX to
      RW_LOCK_WAIT_X.
    ------------------------------------------------------------
    revno: 4138.2.26
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-09-22 09:06:10 +1000
    message:
      WL#6044 - Add debug order checking code.
    ------------------------------------------------------------
    revno: 4138.2.25 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-09-07 10:17:27 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.24
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-09-07 10:12:38 +1000
    message:
      WL#6044 - Mutexes created in BSS will be destroyed by C++ runtime on shutdown.
      Mutex destructors should be no-ops. Release any resources in a destroy() method.
      
      TODO: Prohibit creation of mutexes on the C++ heap using the new operator.
    ------------------------------------------------------------
    revno: 4138.2.23
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-09-06 17:50:20 +1000
    message:
      WL#6044 - General cleanup.
    ------------------------------------------------------------
    revno: 4138.2.22 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-09-06 14:39:43 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.21
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-09-06 14:33:31 +1000
    message:
      WL#6044 - Code cleanup.
    ------------------------------------------------------------
    revno: 4138.2.20 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-09-04 11:20:54 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.19
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-09-04 10:09:13 +1000
    message:
      WL#6044 - Rewrite the UNIV_SYNC_DEBUG code. This is work in progress.
    ------------------------------------------------------------
    revno: 4138.2.18
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2012-08-19 12:23:55 +1000
    message:
      WL#6044 - Get rid of duplicate code.
    ------------------------------------------------------------
    revno: 4138.2.17
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2012-08-19 11:41:26 +1000
    message:
      WL#6044 - Refactor InnoDB mutex code for. Prepare to make into a
      standalone class.
    ------------------------------------------------------------
    revno: 4138.2.16
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2012-08-19 10:33:42 +1000
    message:
      WL#5522 - Avoid resetting spin to 0 for the spin only case.
    ------------------------------------------------------------
    revno: 4138.2.15
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sun 2012-08-19 10:30:24 +1000
    message:
      WL#6044 - Remove unused function.
    ------------------------------------------------------------
    revno: 4138.2.14 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Sat 2012-08-18 12:35:36 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.13
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-08-16 20:49:20 +1000
    message:
      WL#6044 - Use consts to tighten up the mutex spin code. Fix non-debug compile
      time issues. Change some ibool variables to bool.
    ------------------------------------------------------------
    revno: 4138.2.12
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-08-16 14:38:53 +1000
    message:
      WL#6440 - Refactor the code so that we can spin independently of waiting. Fix
      a bug in buf0lru.cc code introduced when the block mutex was changed.
    ------------------------------------------------------------
    revno: 4138.2.11
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-15 21:52:46 +1000
    message:
      WL#6044 - Move the mutex code from sync0sync.* to sync0mutex.*. Prepare for
      a single class to hold the debug and meta-data information, independent of
      mutex type.
    ------------------------------------------------------------
    revno: 4138.2.10 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-15 14:23:43 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.9 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Fri 2012-08-03 10:02:07 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.8 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Thu 2012-08-02 19:27:01 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.7
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-01 19:35:10 +1000
    message:
      WL#6044 - Convert the lock module to use the new Mutex interface.
    ------------------------------------------------------------
    revno: 4138.2.6
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-01 19:15:30 +1000
    message:
      WL#6044 - Add CMake checks for the presence of futex support.
    ------------------------------------------------------------
    revno: 4138.2.5
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-01 18:52:35 +1000
    message:
      WL#6044 - Add Futex and POSIX mutex types.
    ------------------------------------------------------------
    revno: 4138.2.4
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-01 18:19:41 +1000
    message:
      WL#6044 - Add a new typedef for the buffer pool page mutex and the trx_sys_t
      mutex so that we can change its type easily for testing.
    ------------------------------------------------------------
    revno: 4138.2.3 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Wed 2012-08-01 17:43:38 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.2 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Tue 2012-07-31 18:33:25 +1000
    message:
      WL#6044 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4138.2.1
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6044
    timestamp: Mon 2012-07-30 21:08:11 +1000
    message:
      WL#6044 - InnoDB: Policy-based mutex
      
      Change some mutexes to spin only mutexes. In particular the block mutex. Add
      policy based mutex implementation. See include/ib_mutex.h.
------------------------------------------------------------
revno: 6248 [merge]
committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
branch nick: final-trunk
timestamp: Mon 2013-08-12 23:09:49 +0530
message:
  Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY
  Problem Description:
  A mysqld_safe instance is started. An InnoDB crash recovery begins which takes
  few seconds to complete. During this crash recovery process happening, another
  mysqld_safe instance is started with the same server startup parameters. Since
  the mysqld's pid file is absent during the crash recovery process the second
  instance assumes there is no other process and tries to acquire a lock on the
  ibdata files in the datadir.  But this step fails and the 2nd instance keeps 
  retrying 100 times each with a delay of 1 second. Now after the 100 attempts, 
  the server goes down, but while going down it hits the mysqld_safe script's 
  cleanup section and without any check it blindly deletes the socket and pid 
  files. Since no lock is placed on the socket file, it gets deleted.
  
  Solution:
  We create a mysqld_safe.pid file in the datadir, which protects the presence 
  server instance resources by storing the mysqld_safe's process id in it. We
  place a check if the mysqld_safe.pid file is existing in the datadir. If yes
  then we check if the pid it contains is an active pid or not. If yes again,
  then the scripts logs an error saying "A mysqld_safe instance is already 
  running". Otherwise it will log the present mysqld_safe's pid into the 
  mysqld_safe.pid file.
    ------------------------------------------------------------
    revno: 3902.258.62 [merge]
    committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
    branch nick: final-5.6
    timestamp: Mon 2013-08-12 23:08:15 +0530
    message:
      Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY
      Problem Description:
      A mysqld_safe instance is started. An InnoDB crash recovery begins which takes
      few seconds to complete. During this crash recovery process happening, another
      mysqld_safe instance is started with the same server startup parameters. Since
      the mysqld's pid file is absent during the crash recovery process the second
      instance assumes there is no other process and tries to acquire a lock on the
      ibdata files in the datadir.  But this step fails and the 2nd instance keeps 
      retrying 100 times each with a delay of 1 second. Now after the 100 attempts, 
      the server goes down, but while going down it hits the mysqld_safe script's 
      cleanup section and without any check it blindly deletes the socket and pid 
      files. Since no lock is placed on the socket file, it gets deleted.
      
      Solution:
      We create a mysqld_safe.pid file in the datadir, which protects the presence 
      server instance resources by storing the mysqld_safe's process id in it. We
      place a check if the mysqld_safe.pid file is existing in the datadir. If yes
      then we check if the pid it contains is an active pid or not. If yes again,
      then the scripts logs an error saying "A mysqld_safe instance is already 
      running". Otherwise it will log the present mysqld_safe's pid into the 
      mysqld_safe.pid file.
        ------------------------------------------------------------
        revno: 2875.536.24 [merge]
        committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
        branch nick: final-5.5
        timestamp: Mon 2013-08-12 23:06:58 +0530
        message:
          Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY
          Problem Description:
          A mysqld_safe instance is started. An InnoDB crash recovery begins which takes
          few seconds to complete. During this crash recovery process happening, another
          mysqld_safe instance is started with the same server startup parameters. Since
          the mysqld's pid file is absent during the crash recovery process the second
          instance assumes there is no other process and tries to acquire a lock on the
          ibdata files in the datadir.  But this step fails and the 2nd instance keeps 
          retrying 100 times each with a delay of 1 second. Now after the 100 attempts, 
          the server goes down, but while going down it hits the mysqld_safe script's 
          cleanup section and without any check it blindly deletes the socket and pid 
          files. Since no lock is placed on the socket file, it gets deleted.
          
          Solution:
          We create a mysqld_safe.pid file in the datadir, which protects the presence 
          server instance resources by storing the mysqld_safe's process id in it. We
          place a check if the mysqld_safe.pid file is existing in the datadir. If yes
          then we check if the pid it contains is an active pid or not. If yes again,
          then the scripts logs an error saying "A mysqld_safe instance is already 
          running". Otherwise it will log the present mysqld_safe's pid into the 
          mysqld_safe.pid file.
            ------------------------------------------------------------
            revno: 2661.880.35
            committer: Anirudh Mangipudi <anirudh.mangipudi@oracle.com>
            branch nick: final-5.1
            timestamp: Mon 2013-08-12 21:54:50 +0530
            message:
              Bug #16776528 RACE CONDITION CAN CAUSE MYSQLD TO REMOVE SOCKET FILE ERRANTLY
              Problem Description:
              A mysqld_safe instance is started. An InnoDB crash recovery begins which takes
              few seconds to complete. During this crash recovery process happening, another
              mysqld_safe instance is started with the same server startup parameters. Since
              the mysqld's pid file is absent during the crash recovery process the second
              instance assumes there is no other process and tries to acquire a lock on the
              ibdata files in the datadir.  But this step fails and the 2nd instance keeps 
              retrying 100 times each with a delay of 1 second. Now after the 100 attempts, 
              the server goes down, but while going down it hits the mysqld_safe script's 
              cleanup section and without any check it blindly deletes the socket and pid 
              files. Since no lock is placed on the socket file, it gets deleted.
              
              Solution:
              We create a mysqld_safe.pid file in the datadir, which protects the presence 
              server instance resources by storing the mysqld_safe's process id in it. We
              place a check if the mysqld_safe.pid file is existing in the datadir. If yes
              then we check if the pid it contains is an active pid or not. If yes again,
              then the scripts logs an error saying "A mysqld_safe instance is already 
              running". Otherwise it will log the present mysqld_safe's pid into the 
              mysqld_safe.pid file.
------------------------------------------------------------
revno: 6247 [merge]
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Mon 2013-08-12 16:48:03 +0200
message:
  merge to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.61 [merge]
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: topush-5.6
    timestamp: Mon 2013-08-12 16:42:05 +0200
    message:
      merge to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.536.23
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Mon 2013-08-12 11:09:33 +0200
        message:
          Bug#16860588:CRASH WITH CREATE TABLE ... LIKE ..
          AND PARTITION VALUES IN (NULL)
          
          The code assumed there was at least one list element
          in LIST partitioned table.
          
          Fixed by checking the number of list elements.
        ------------------------------------------------------------
        revno: 2875.536.22
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Mon 2013-08-12 10:52:08 +0200
        message:
          Bug#17228383: VALGRIND WARNING IN IBUF_DELETE_REC
          
          Since the mtr_t struct is marked as invalid in DEBUG_VALGRIND build
          during mtr_commit, checking mtr->inside_ibuf will cause this warning.
          Also since mtr->inside_ibuf cannot be set in mtr_commit (assert check)
          and mtr->state is set to MTR_COMMITTED, the 'ut_ad(!ibuf_inside(&mtr))'
          check is not needed if 'ut_ad(mtr.state == MTR_COMMITTED)' is also
          checked.
------------------------------------------------------------
revno: 6246
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Mon 2013-08-12 16:22:58 +0200
message:
  Bug#16900947: WHEN REPAIRING A PARTITION REMOVE
  THE DUPLICATES AND LOG THEM
  
  There are no easy/fast way to repair partitions which have
  duplicate key violations.
  
  Added support for IGNORE in
  ALTER IGNORE TABLE t CHECK/REPAIR PARTITION all_or_list_of_partitions.
  
  For REPAIR, it will remove rows that are impossible to move, due to
  duplicate key violations.
  
  For CHECK, it will write out the contents of the row
  (all fields in the PK/partitioning expression) and does not stop after the
  first misplaced row.
------------------------------------------------------------
revno: 6245
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Mon 2013-08-12 15:57:14 +0200
message:
  Bug#14028340: IMPOSSIBLE TO OPTIMIZE SUBPARTITIONS
  
  Only partition level names was accepted for the following
  operations:
  ANALYZE
  CHECK
  OPTIMIZE
  REBUILD
  REPAIR
  TRUNCATE
  
  This patch adds checkning the listed names also against
  the subpartitions, allowing to specify the operation to be done
  for specified subpartitions.
------------------------------------------------------------
revno: 6244 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Mon 2013-08-12 19:53:53 +0530
message:
  Bug#16614004 - CRASH AFTER READING FREED MEMORY AFTER DOING DDL 
          	IN STORED ROUTINE
  Merge fix for Bug#16614004 from mysql-5.6 to mysql-trunk"
    ------------------------------------------------------------
    revno: 3902.258.60 [merge]
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-08-12 19:52:41 +0530
    message:
      Bug#16614004 - CRASH AFTER READING FREED MEMORY AFTER DOING DDL 
              	IN STORED ROUTINE
      Merge fix for Bug#16614004 from mysql-5.5 to mysql-5.6"
        ------------------------------------------------------------
        revno: 2875.536.21 [merge]
        committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
        branch nick: 5.5
        timestamp: Mon 2013-08-12 19:46:44 +0530
        message:
          Bug#16614004 - CRASH AFTER READING FREED MEMORY AFTER DOING DDL 
                  	IN STORED ROUTINE
          
          Inside a loop in a stored procedure, we create a partitioned
          table. The CREATE statement is thus treated as a prepared statement:
          it is prepared once, and then executed by each iteration. Thus its Lex
          is reused many times. This Lex contains a part_info member, which
          describes how the partitions should be laid out, including the
          partitioning function. Each execution of the CREATE does this, in
          open_table_from_share ():
              
                 tmp= mysql_unpack_partition(thd, share->partition_info_str,
                                             share->partition_info_str_len,
                                             outparam, is_create_table,
                                             share->default_part_db_type,
                                             &work_part_info_used);
              ...
                 tmp= fix_partition_func(thd, outparam, is_create_table);
          The first line calls init_lex_with_single_table() which creates
          a TABLE_LIST, necessary for the "field fixing" which will be
          done by the second line; this is how it is created:
               if ((!(table_ident= new Table_ident(thd,
                                                   table->s->db,
                                                   table->s->table_name, TRUE))) ||
                   (!(table_list= select_lex->add_table_to_list(thd,
                                                                table_ident,
                                                                NULL,
                                                                 0))))
                    return TRUE;
            it is allocated in the execution memory root.
          Then the partitioning function ("id", stored in Lex -> part_info)
            is fixed, which calls Item_ident:: fix_fields (), which resolves
          "id" to the table_list above, and stores in the item's
          cached_table a pointer to this table_list. 
          The table is created, later it is dropped by another statement,
          then we execute again the prepared CREATE. This reuses the Lex,
          thus also its part_info, thus also the item representing the
          partitioning function (part_info is cloned but it's a shallow
          cloning); CREATE wants to fix the item again (which is
          normal, every execution fixes items again), fix_fields ()
          sees that the cached_table pointer is set and picks up the
          pointed table_list. But this last object does not exist
          anymore (it was allocated in the execution memory root of
          the previous execution, so it has been freed), so we access
          invalid memory.
          
          The solution: when creating the table_list, mark that it
          cannot be cached.
            ------------------------------------------------------------
            revno: 2875.539.1
            committer: Guilhem Bichot <guilhem.bichot@oracle.com>
            branch nick: 5.5
            timestamp: Wed 2013-07-24 14:33:52 +0200
            message:
              Fix for Bug#16614004 CRASH AFTER READING FREED MEMORY AFTER DOING DDL IN STORED ROUTINE
              Inside a loop in a stored procedure, we create a partitioned
              table. The CREATE statement is thus treated as a prepared statement:
              it is prepared once, and then executed by each iteration. Thus its Lex
              is reused many times. This Lex contains a part_info member, which
              describes how the partitions should be laid out, including the
              partitioning function. Each execution of the CREATE does this, in
              open_table_from_share ():
              
                  tmp= mysql_unpack_partition(thd, share->partition_info_str,
                                              share->partition_info_str_len,
                                              outparam, is_create_table,
                                              share->default_part_db_type,
                                              &work_part_info_used);
               ...
                    tmp= fix_partition_func(thd, outparam, is_create_table);
              The first line calls init_lex_with_single_table() which creates
              a TABLE_LIST, necessary for the "field fixing" which will be
              done by the second line; this is how it is created:
                if ((!(table_ident= new Table_ident(thd,
                                                    table->s->db,
                                                    table->s->table_name, TRUE))) ||
                    (!(table_list= select_lex->add_table_to_list(thd,
                                                                 table_ident,
                                                                 NULL,
                                                                 0))))
                  return TRUE;
              it is allocated in the execution memory root.
              Then the partitioning function ("id", stored in Lex -> part_info)
              is fixed, which calls Item_ident:: fix_fields (), which resolves
              "id" to the table_list above, and stores in the item's
              cached_table a pointer to this table_list. 
              The table is created, later it is dropped by another statement,
              then we execute again the prepared CREATE. This reuses the Lex,
              thus also its part_info, thus also the item representing the
              partitioning function (part_info is cloned but it's a shallow
              cloning); CREATE wants to fix the item again (which is
              normal, every execution fixes items again), fix_fields ()
              sees that the cached_table pointer is set and picks up the
              pointed table_list. But this last object does not exist
              anymore (it was allocated in the execution memory root of
              the previous execution, so it has been freed), so we access
              invalid memory.
              The solution: when creating the table_list, mark that it
              cannot be cached.
------------------------------------------------------------
revno: 6243
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-08-12 18:57:43 +0530
message:
  Post push fix for WL#6606
  When mysqld is started with --skip-networking option, it
  should listen on unix socket to accept connections. In the
  current code, no initialization of unix sockets happens 
  if opt_disable_networking flag is enabled. This patch fixes
  this problem.
------------------------------------------------------------
revno: 6242 [merge]
committer: Thirunarayanan B<thirunarayanan.balathandayuth@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-08-12 15:18:33 +0530
message:
  Null Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.258.59 [merge]
    committer: Thirunarayanan B<thirunarayanan.balathandayuth@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-08-12 15:14:31 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
------------------------------------------------------------
revno: 6241 [merge]
committer: Thirunarayanan B<thirunarayanan.balathandayuth@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-08-12 15:04:49 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.266.1 [merge]
    committer: Thirunarayanan B<thirunarayanan.balathandayuth@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-08-08 14:46:52 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.536.20
        committer: Thirunarayanan B<thirunarayanan.balathandayuth@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-08-08 14:28:20 +0530
        message:
          Bug #17076718	 ADDING "_IBFK_" FOREIGN KEY "TABLE XXX ALREADY EXISTS"
          
          Problem:
            When the user specified foreign key name contains "_IBFK_", InnoDB wrongly
                tries to rename it. 
          
          Solution : 
            This issue is already solved in mysql-5.1 by the following patch
           
            revno: 4029
            revision-id: annamalai.gurusami@oracle.com-20130725092323-p4s20g1bhc0fmfep
            parent: astha.pareek@oracle.com-20130723124343-f90tpoldtmozgohd
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-07-25 14:53:23 +0530
            message:
               Bug #17076737 DUPLICATE CONSTRAINTS DISPLAYED WHEN NAME INCLUDES "_IBFK_"
          
          rb#3012 approved by Jimmy Yang
------------------------------------------------------------
revno: 6240
committer: Alexander Nozdrin <alexander.nozdrin@oracle.com>
branch nick: trunk
timestamp: Mon 2013-08-12 12:46:57 +0400
message:
  Patch for Bug#17162055: SSL.CMAKE SILENTLY CHOOSES BUNDLED YASSL INSTEAD OF
  ERRORING FOR OLD OPENSSL VER
  
  The problem was that if the user specified incorrect path to SSL installation,
  or if the user specified unsupported (too old) SSL installation using WITH_SSL,
  it's implicitly changed to the 'bundled' value, meaning bundled YaSSL will be
  used instead of user-specified SSL.
  
  The fix is to do not change WITH_SSL to the 'bundled' value, but rather
  exit with an error message and let the user to correct the WITH_SSL value.
------------------------------------------------------------
revno: 6239 [merge]
committer: Alexander Nozdrin <alexander.nozdrin@oracle.com>
branch nick: trunk-17087862
timestamp: Mon 2013-08-12 12:45:05 +0400
message:
  Manual merge from 5.6.
    ------------------------------------------------------------
    revno: 3902.258.58
    committer: Alexander Nozdrin <alexander.nozdrin@oracle.com>
    branch nick: 5.6-17087862
    timestamp: Mon 2013-08-12 12:42:37 +0400
    message:
      A patch for Bug#17087862: THREAD POOL PLUGIN FAILS TO MAINTAIN
      ENCRYPTED CONNECTION UNDER LOAD.
      
      The user visible problem was that an error in one connection might
      have affected other connections. When that happened, the other
      connection was closed by the server, thus the client received the
      "Lost connection" error. The server however didn't crash.
      
      Technically, the problem was that OpenSSL requires that the thread's
      error queue is empty before invoking any I/O operation
      (https://www.openssl.org/docs/ssl/SSL_get_error.html).
      That was not the case. The bug happened when the error queue is not
      empty and a non-blocking I/O-operation failed because it would block.
      
      YaSSL is not affected as it employs different scheme for handling
      errors.
      
      MySQL-5.5 is not affected as it uses blocking I/O calls.
      
      Test case is missing because the bug appeared under the highload and
      depended on thread scheduling.
------------------------------------------------------------
revno: 6238
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Mon 2013-08-12 09:00:00 +0200
message:
  Bug#17297266: WRONG DBUG_ENTER STRING IN
                THD::INCREMENT_QUESTIONS_COUNTER
  
  Update two DBUG_ENTER strings to match function name.
  Code added by the patch for Bug#14003080.
------------------------------------------------------------
revno: 6237 [merge]
committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
branch nick: mysql-trunk-16373054
timestamp: Mon 2013-08-12 11:12:33 +0530
message:
  BUG#16373054 - CRASH WHEN MYSQL.PROC HAS NO AVAILABLE PK
  Merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.258.57
    committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
    branch nick: mysql-5.6-16373054
    timestamp: Mon 2013-08-12 11:04:44 +0530
    message:
      BUG#16373054 - CRASH WHEN MYSQL.PROC HAS NO AVAILABLE PK
      
      Analysis
      --------
      
      'mysqld' crashes when:
      a) The primary key for the system table 'proc' is dropped and
      b) A stored procedure is invoked.
      
      Ideally it is expected that system tables are not tampered.
      When we access these tables for performing some operation,
      we do not check if a valid key information is available.
      Since the primary key is dropped, the mysqld crashes while trying
      to access the key information. This behavior is observed with
      other system tables(user, columns_priv, event and plugin)
      as well when it's primary key is dropped. This issue is addressed
      with this patch.
      
      Fix:
      ---
      Make sure that key information is available when the operations
      accessing the system tables are invoked. In such a case, we now
      report an error instead of a crash.
      
      Note: We do not validate complete key information as it could
      impact performance. Once MySQL roles is introduced, such checks
      would become unnecessary.
------------------------------------------------------------
revno: 6236
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Sat 2013-08-10 08:29:56 +1000
message:
  WL#6578 - Follow up fix, remove bogus assertion.
------------------------------------------------------------
revno: 6235
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Sat 2013-08-10 08:21:12 +1000
message:
  WL#7047 - Follow up fix.
------------------------------------------------------------
revno: 6234
committer: Tanjot Uppal <tanjot.uppal@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-08-10 00:09:08 +0530
message:
  Made i_perfschema.truncate_stress experimental till the Bug#17267760 is fixed
------------------------------------------------------------
revno: 6233
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-08-10 03:04:46 +0900
message:
  adjustment for
  WL#6326 : InnoDB: fix index->lock contention
  
  solaris11-sparc-64bit could not resolve DEBUG_SYNC_C() at storage/innobase/sync/sync0rw.cc.
  added "#include <my_sys.h>" to the file
------------------------------------------------------------
revno: 6232 [merge]
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk_work
timestamp: Fri 2013-08-09 21:26:03 +0900
message:
  - WL#6326 : InnoDB: fix index->lock contention
  
  The acquisition of node pointer page latches is protected by index->lock latch.
  
  Before WL#6326, index->lock protected all node pointer pages either in S or X
  mode, and no individual block->lock were acquired on node pointer pages.
  
  After WL#6326, node pointer pages are protected by individual block->lock
  S-latch or X-latch. The acquisition of node pointer page latches is covered by
  index->lock, for preventing deadlocks.
  
  This WL# depends on WL#6363
  
  (rb#1099 : Approved by Kevin and Jimmy)
  
  
  - WL#6363 : implement SX-lock for rw_lock
  
  InnoDB internally uses rw-lock implementation to keep consistency of internal
  resources. Basically the rw-lock has 2 types S-lock (shared) and X-lock (exluded).
  The fix adds the new type SX-lock (shared excluded) for room to optimize
  concurrency and improve scalability more.
  
  At least, S-lock and X-lock behave same, and compatible for current code. So,
  nothing changed by only this fix as it is. (no functional/performance changes
  for users)
  
  The new state SX-lock will be used by the future work. (e.g. WL#6326: InnoDB:
  fix index->lock contention)
  
  new state of rw_lock: SX-lock
        | S|SX| X|
      --+--+--+--+
       S| o| o| x|
      --+--+--+--+
      SX| o| x| x|
      --+--+--+--+
       X| x| x| x|
      --+--+--+--+
  
  (rb#1098 : Approved by Inaam and Kevin)
    ------------------------------------------------------------
    revno: 6022.1.11
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Thu 2013-08-08 20:17:36 +0900
    message:
      WL#6326 InnoDB: fix index->lock contention
      mtr and RQG test files added by Matthias Leich
    ------------------------------------------------------------
    revno: 6022.1.10
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Tue 2013-07-23 10:32:08 +0900
    message:
      WL#6326 InnoDB: fix index->lock contention
      1. Fix the test innodb_wl6326, because it works only with 16k page size
      2. Beautifications of innodb_wl6326
      3. Fix several sys_vars tests
         Rows introduced by WL6326 into innodb_metrics were missing in result sets.
      
      * fixed by Matthias Leich
    ------------------------------------------------------------
    revno: 6022.1.9 [merge]
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Mon 2013-07-22 13:51:54 +0900
    message:
      merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6022.1.8
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Wed 2013-07-17 14:18:34 +0900
    message:
      WL#6326 (rb#1099)
      bug fix:
      - adjust innodb.innodb_wl6326 test for current behavior of this fix
    ------------------------------------------------------------
    revno: 6022.1.7
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Sat 2013-07-13 16:33:28 +0900
    message:
      WL#6326 (rb#1099)
      bug fix:
      - dict_index_node_ptr_max_size() didn't include length of the page_no in a record header
    ------------------------------------------------------------
    revno: 6022.1.6
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Fri 2013-07-12 13:50:47 +0900
    message:
      WL#6326 (rb#1099)
      bug fix:
      deadlock opportunities are fixed along with rb#1099
      - when delete leftmost record of page
      - compresssed tables
    ------------------------------------------------------------
    revno: 6022.1.5
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Thu 2013-07-04 14:21:11 +0900
    message:
      WL#6326 (rb#1099)
      bug fix:
      adjust btr_cur_will_modify_tree() for right merge possibility (rb#2506 (Bug#16417635))
    ------------------------------------------------------------
    revno: 6022.1.4
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Wed 2013-07-03 20:20:45 +0900
    message:
      WL#6326 (rb#1099)
      bug fix:
      dict_index_node_ptr_max_size() missed to add field_ext_max_size for compact format
    ------------------------------------------------------------
    revno: 6022.1.3
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Mon 2013-07-01 13:13:14 +0900
    message:
      update along with rb#1099
    ------------------------------------------------------------
    revno: 6022.1.2
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Thu 2013-06-27 15:46:38 +0900
    message:
      WL#6326 - current version on reviewing at rb#1099
    ------------------------------------------------------------
    revno: 6022.1.1
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-trunk-wl6326-sx-index
    timestamp: Thu 2013-06-27 15:44:45 +0900
    message:
      WL#6363 - reviewed change at rb#1098
------------------------------------------------------------
revno: 6231
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-09 13:37:28 +0300
message:
  Bug#16915379 ASSERT DBG_CMP >= 0 IN CURSOR HANDLING
  
  The UNIV_SEARCH_DEBUG option, which is normally not defined even in debug
  builds, was broken by the fix of
  Bug#16852278 SIMPLIFY RECORD COMPARISONS
  
  I reduced the SQL to about 400 lines and was able to deterministically
  repeat the problem with it. One assignment has to be moved around a
  #ifdef UNIV_SEARCH_DEBUG block. With the fix, also the unreduced SQL
  trace executes fine under UNIV_SEARCH_DEBUG.
  
  The bug should not have any user-visible impact. My fix obviously only
  affects the UNIV_SEARCH_DEBUG option.
  
  Approved by Jimmy Yang on the IM
------------------------------------------------------------
revno: 6230 [merge]
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-09 11:53:21 +0300
message:
  Merge mysql-trunk-wl6504 -> mysql-trunk
    ------------------------------------------------------------
    revno: 6049.1.13 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Fri 2013-08-09 11:50:51 +0300
    message:
      Merge mysql-trunk -> mysql-trunk-wl6504
    ------------------------------------------------------------
    revno: 6049.1.12
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Thu 2013-07-11 09:30:12 +0300
    message:
      Fix typos in comments
    ------------------------------------------------------------
    revno: 6049.1.11 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Wed 2013-07-10 20:05:25 +0300
    message:
      Merge mysql-trunk -> mysql-trunk-wl6504
    ------------------------------------------------------------
    revno: 6049.1.10
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Mon 2013-07-08 15:14:53 +0530
    message:
      wl6504:Disable page size 4k & 8K
    ------------------------------------------------------------
    revno: 6049.1.9
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Fri 2013-07-05 12:26:23 +0530
    message:
      wl6504: 
      * added one more time the wait condition to pervent failing in parallel & repeat options 
      * removed not parallel inc file
    ------------------------------------------------------------
    revno: 6049.1.8
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Thu 2013-07-04 15:12:26 +0530
    message:
      wl6504: removed the print statement 
    ------------------------------------------------------------
    revno: 6049.1.7
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Wed 2013-07-03 15:37:27 +0530
    message:
      wl6504: added new testcase & result file
    ------------------------------------------------------------
    revno: 6049.1.6
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Wed 2013-07-03 14:45:04 +0530
    message:
      wl6504: * deleted the old testcase & result file
      	* added a testcase: innodb_buffer_pool_dump_pct_basic.test
              * removed empty spaces in the result file and testcase
              
    ------------------------------------------------------------
    revno: 6049.1.5 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Wed 2013-07-03 11:40:36 +0300
    message:
      Merge mysql-trunk -> mysql-trunk-wl6504
    ------------------------------------------------------------
    revno: 6049.1.4
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Tue 2013-07-02 14:22:35 +0530
    message:
      wl6504: removed empty spaces and print statments 
    ------------------------------------------------------------
    revno: 6049.1.3
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Tue 2013-07-02 11:43:20 +0530
    message:
      wl6504: removed not_parallel.inc & added $MYSQL_TMP_DIR
    ------------------------------------------------------------
    revno: 6049.1.2
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Mon 2013-07-01 17:56:16 +0530
    message:
      wl6504: functionality testing of the innodb_buffer_pool_pct flag 
    ------------------------------------------------------------
    revno: 6049.1.1
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6504
    timestamp: Mon 2013-07-01 12:29:42 +0300
    message:
      WL#6504 InnoDB buffer pool dump/load enchantments
      
      This patch consists of two parts:
      
      1. Dump only the hottest N% of the buffer pool(s)
      2. Prevent hogging the server duing BP load
      
      Reviewed by:	Inaam (rb:2243)
------------------------------------------------------------
revno: 6229 [merge]
committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
branch nick: mysql-trunk-16857395
timestamp: Fri 2013-08-09 13:09:48 +0530
message:
  BUG#16857395 - EXCESSIVE MEMORY USAGE AFTER REPEATED TRIGGER
                 EXCEPTION HANDLERS 
  
  Null merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.258.56
    committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
    branch nick: mysql-5.6-16857395
    timestamp: Fri 2013-08-09 13:01:39 +0530
    message:
      BUG#16857395 - EXCESSIVE MEMORY USAGE AFTER REPEATED TRIGGER
                     EXCEPTION HANDLERS
      
      Follow up patch to fix missing error message when an SQL
      condition is handled by the handler.
------------------------------------------------------------
revno: 6228
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Fri 2013-08-09 08:37:45 +1000
message:
  WL#7047 - Optimize buffer pool list scans and related batch processing code
  
  Reduce excessive scanning of pages when doing flush list batches. The
  fix is to introduce the concept of "Hazard Pointer", this reduces the
  time complexity of the scan from O(n*n) to O(n).
  
  The concept of hazard pointer is reversed in this work.  Academically a
  hazard pointer is a pointer that the thread working on it will declare as
  such and as long as that thread is not done no other thread is allowed to
  do anything with it.
  
  In this WL we declare the pointer as a hazard pointer and then if any other
  thread attempts to work on it, it is allowed to do so but it has to adjust
  the hazard pointer to the next valid value. We use hazard pointer solely for
  reverse traversal of lists within a buffer pool instance.
  
  Add an event to control the background flush thread. The background flush
  thread wait has been converted to an os event timed wait so that it can be
  signalled by threads that want to kick start a background flush when the
  buffer pool is running low on free/dirty pages.
  
  This patch was originally written by Inaam Rana.
  
  rb#2367 Approved by Jimmy Yang and Kevin Lewis.
------------------------------------------------------------
revno: 6227
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-cleanup
timestamp: Thu 2013-08-08 15:50:08 +0200
message:
  Test scripts cleanup, when building without the performance schema
------------------------------------------------------------
revno: 6226
committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
branch nick: trunk-16587369
timestamp: Thu 2013-08-08 14:14:07 +0200
message:
  Bug#16587369: HANDLER FOR SQLEXCEPTION NOT CATCHING ERROR
  1452 (FK CONSTRAINT) FOR UPDATE
  
  Post push fix. 
  
  In the first patch, restructuring a boolean expression in 
  an if statement resulted in the function "end_bulk_insert()"
  not being called in situations where it should. 
  
  The fix is to split the if statement into two separate 
  statements, making sure evaluation is done in the correct 
  order. This also improves code readability. 
------------------------------------------------------------
revno: 6225
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-08-08 10:00:06 +0200
message:
  Bug#17280703: RESIGNAL CAUSES SOME SQL CONDITION ITEMS TO BE LOST
  
  The problem was that the contents of SQL condition items such as
  TABLE_NAME, CONSTRAINT_NAME etc. would be lost if resignalled by
  an stored routine condition handler.
  
  Such items can currently only be set by SIGNAL/RESIGNAL and
  only retrieved by GET DIAGNOSTICS.
  
  This bug was fixed in 5.7 by WL#6406 Stacked diagnostic areas.
  This patch just adds additional test coverage.
------------------------------------------------------------
revno: 6224
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Thu 2013-08-08 17:52:02 +1000
message:
  WL#6578 - Follow up fix, sanitise the view pointer before dereferencing.
------------------------------------------------------------
revno: 6223 [merge]
committer: mayank prasad <mayank.prasad@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-08 12:47:27 +0530
message:
  WL#5766:PERFORMANCE SCHEMA, stored programs instrumentation.
  
  Details : Merging WL branch to trunk.
    ------------------------------------------------------------
    revno: 5697.1.64
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-08-08 12:32:31 +0530
    message:
      Fixing 64-bit platform specific test case results.
    ------------------------------------------------------------
    revno: 5697.1.63 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-08-08 12:13:17 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.62 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-08-02 20:00:30 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.61
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Sun 2013-08-04 19:12:54 +0530
    message:
      WL#5766 : added tests to increase coverage 
    ------------------------------------------------------------
    revno: 5697.1.60
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Fri 2013-08-02 15:50:07 +0530
    message:
      fixing NON-PS compilation issue.
    ------------------------------------------------------------
    revno: 5697.1.59
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Fri 2013-08-02 10:57:07 +0530
    message:
      fixing Windows specific thread stack overrun issue seen on trunk-stage
    ------------------------------------------------------------
    revno: 5697.1.58 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-08-01 18:37:23 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.57
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Sat 2013-08-03 18:28:13 +0530
    message:
      WL#5766 - changed few tests 
    ------------------------------------------------------------
    revno: 5697.1.56
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Thu 2013-08-01 15:37:57 +0530
    message:
      (no message)
    ------------------------------------------------------------
    revno: 5697.1.55
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Thu 2013-08-01 14:34:55 +0530
    message:
      Bug#17182801:NESTING_EVENT_TYPE/ID ARE STILL NULL FOR EVENT NESTED STATEMENTS.
      
      Details:
       - Follow up patch to fix Windows-64 Specific Crash on PB2.
    ------------------------------------------------------------
    revno: 5697.1.54
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Wed 2013-07-31 23:25:32 +0530
    message:
      Probable fix for Windows Issue
    ------------------------------------------------------------
    revno: 5697.1.53
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Wed 2013-07-31 09:04:30 +0530
    message:
      Fixing PB2 failures
    ------------------------------------------------------------
    revno: 5697.1.52 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-07-31 07:34:15 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.51
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Tue 2013-07-30 21:33:05 +0530
    message:
      Bug#17182801:NESTING_EVENT_TYPE/ID ARE STILL NULL FOR EVENT NESTED STATEMENTS.
      
      Issue :
       - NESTED_EVENT_/TYPE/LEVEL was NULL/0 for events.
      
      Reason :
       - Evetns are not executed as part of some statement i.e. there
         is no parent statement for a event. Events are scheduled based
         on timing and are executed when time comes.
      
      Fix :
       - A new instrument statement/scheduler/event is added to make
         sure all executed events are recorded by PS. This instrument
         would be the parent for events executed.
    ------------------------------------------------------------
    revno: 5697.1.50
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Mon 2013-07-29 14:36:29 +0530
    message:
      fixing Thread Stack Overrun.
    ------------------------------------------------------------
    revno: 5697.1.49
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Mon 2013-07-29 14:29:21 +0530
    message:
      Fixing Thread Stack Overrun due to less value of thread_stack.
    ------------------------------------------------------------
    revno: 5697.1.48
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Sat 2013-07-27 01:38:57 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Fixed unittest failures on PB2.
    ------------------------------------------------------------
    revno: 5697.1.47 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-26 21:39:38 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.46
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-26 16:25:04 +0530
    message:
      Fixing result files for test cases.
    ------------------------------------------------------------
    revno: 5697.1.45
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-26 15:27:53 +0530
    message:
      fixing one missed line during merge.
    ------------------------------------------------------------
    revno: 5697.1.44
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-26 15:21:40 +0530
    message:
      Fix for test cases specific to 64-bit Platform.
    ------------------------------------------------------------
    revno: 5697.1.43 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-26 15:01:35 +0530
    message:
      MERGE: mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.42
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-26 11:24:35 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation
      
      Fixed the failing test. 
    ------------------------------------------------------------
    revno: 5697.1.41
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-07-25 18:48:41 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation 
      Bug#17193809 : EVENTS INSTRUMENTATION IS NOT DONE AS EXPECTED.
      Bug#17182042 : EXPECTED RESULT NOT SEEN WITH SHOW STATUS 
                           OF "PERFORMANCE_SCHEMA_PROGRAM_LOST" 
            
            Fixed the tests cases.
    ------------------------------------------------------------
    revno: 5697.1.40
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Mon 2013-07-22 15:57:53 +0530
    message:
      Bug#17181642 : STORED PROGRAMS RECORDED IN THE PS TABLE ARE NOT REMOVED AFTER "DROP DATABASE"
      
      Issue:
       Code to drop stats of a SP was implemented in functions
       which are called when a SP is dropped explicitely using
       DROP TRIGGER/EVENT/PROCEDURE/FUNCTION command. But when
       a database is dropped, these functions are not called but
       SP is removed from server.
      
      Fix:
       Added code to drop stats of a SP when:
       - It is dropped using DROP command explicitely
       - It is dropped as part of dropping a Database.
    ------------------------------------------------------------
    revno: 5697.1.39 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Mon 2013-07-22 15:30:08 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.38
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-19 11:56:53 +0530
    message:
      WL#5766 
      
      Fix for statement_program_nested.test failure 
    ------------------------------------------------------------
    revno: 5697.1.37
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-07-18 17:36:54 +0530
    message:
      WL#5766 
      
      minor modifications done to the tests 
    ------------------------------------------------------------
    revno: 5697.1.36
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-07-17 09:45:58 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
              
              Details:
               - Fixed pb2 failures
    ------------------------------------------------------------
    revno: 5697.1.35
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-07-16 17:32:02 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation
      
      fix for few failing tests seen.
    ------------------------------------------------------------
    revno: 5697.1.34
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-07-16 16:29:51 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Fixed WINDOWS specific test case failure.
    ------------------------------------------------------------
    revno: 5697.1.33
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-07-16 13:23:41 +0530
    message:
       WL#5766 :  PERFORMANCE SCHEMA, stored programs instrumentation
            
            fix for the failing test.
    ------------------------------------------------------------
    revno: 5697.1.32
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-07-16 11:03:52 +0530
    message:
      WL#5766 :  PERFORMANCE SCHEMA, stored programs instrumentation
      
      fixed few failing test cases 
    ------------------------------------------------------------
    revno: 5697.1.31
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Mon 2013-07-15 12:49:03 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Fix pb2 failures specific to 64 bit platform.
       - Fixed one crash in sp.cc after the last push.
    ------------------------------------------------------------
    revno: 5697.1.30 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Mon 2013-07-15 12:46:05 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.29
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Sun 2013-07-14 10:24:34 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation
    ------------------------------------------------------------
    revno: 5697.1.28
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: test_5766
    timestamp: Fri 2013-07-12 18:01:25 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Modified code to put MYSQL_GET_SP_SHARE at correct place to
         make sure SP gets into PS table only when they are created 
         successfully.
    ------------------------------------------------------------
    revno: 5697.1.27 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-07-12 17:48:16 +0530
    message:
      MERGE : mysql-trunk-->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.26
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-07-11 12:05:13 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation
      
      fixed pb2 failures 
    ------------------------------------------------------------
    revno: 5697.1.25
    committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-07-10 13:58:38 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
            
            Added tests that check stored program instrumentation.
    ------------------------------------------------------------
    revno: 5697.1.24
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Mon 2013-06-24 12:22:10 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Final review comments from Marc.
    ------------------------------------------------------------
    revno: 5697.1.23 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Mon 2013-06-24 12:15:50 +0530
    message:
      MERGE: mysql-trunk --> mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.22
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Fri 2013-06-21 16:02:36 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - 4th round of review comment from Marc.
    ------------------------------------------------------------
    revno: 5697.1.21 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-06-21 15:41:45 +0530
    message:
      MERGE : mysql-trunk --> mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.20
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Tue 2013-06-18 16:54:52 +0530
    message:
      Fixed PB2 Issues.
    ------------------------------------------------------------
    revno: 5697.1.19 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-06-18 14:36:10 +0530
    message:
      MERGE : mysql-trunk --> mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.18
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Tue 2013-06-18 13:48:35 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Fixed a code issue because of which nesting even level
         information was messed up.
    ------------------------------------------------------------
    revno: 5697.1.17
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Wed 2013-06-12 16:05:23 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Fixing pb2 failing test cases specific to 64bit platform.
    ------------------------------------------------------------
    revno: 5697.1.16 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-06-12 16:02:35 +0530
    message:
      MERGE : mysql-trunk --> mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.15
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Tue 2013-06-11 15:03:01 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - 3rd round of review comments from Marc.
    ------------------------------------------------------------
    revno: 5697.1.14 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-06-11 14:52:30 +0530
    message:
      MERGE : mysql-trunk --> mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.13
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Thu 2013-06-06 14:52:14 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details :
       - Addressed Marc's review comment about lookup_setup_object
         not to be called while executing a stored program.
    ------------------------------------------------------------
    revno: 5697.1.12 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-06-06 14:48:58 +0530
    message:
      MERGE : mysql-trunk --> mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.11
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Wed 2013-06-05 11:48:29 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - 2nd round of review comments from Marc.
    ------------------------------------------------------------
    revno: 5697.1.10 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-06-05 11:43:25 +0530
    message:
      MERGE : mysql-trunk->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.9
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Fri 2013-05-24 17:44:19 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Modified set_statement_parent prototype to accept sp_share
         instead of sp_head.
    ------------------------------------------------------------
    revno: 5697.1.8 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-05-24 17:42:05 +0530
    message:
      MERGE : mysql-trunk->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.7
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Fri 2013-05-24 14:57:08 +0530
    message:
      review comments from Marc
    ------------------------------------------------------------
    revno: 5697.1.6 [merge]
    committer: mayank prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Fri 2013-05-24 14:52:07 +0530
    message:
      MERGE : mysql-trunk->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.5 [merge]
    committer: Mayank Prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Thu 2013-05-16 11:43:52 +0530
    message:
      MERGE : mysql-trunk->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.4
    committer: Mayank Prasad <mayank.prasad@oracle.com>
    branch nick: wl5766
    timestamp: Tue 2013-05-14 12:29:42 +0530
    message:
      WL#5766 : PERFORMANCE SCHEMA, stored programs instrumentation.
      
      Details:
       - Added code for reusing holes created by deletion of a record
         from program_array.
       - Renamed few strucutres/variables.
    ------------------------------------------------------------
    revno: 5697.1.3 [merge]
    committer: Mayank Prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Tue 2013-05-14 12:26:32 +0530
    message:
      MERGE : mysql-trunk->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.2 [merge]
    committer: Mayank Prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-05-08 23:19:05 +0530
    message:
      MERGE: mysql-trunk->mysql-trunk-wl5766
    ------------------------------------------------------------
    revno: 5697.1.1
    committer: Mayank Prasad <mayank.prasad@oracle.com>
    branch nick: mysql-trunk-wl5766
    timestamp: Wed 2013-05-08 16:36:26 +0530
    message:
      Recreated branch mysql-trunk-wl5766 and pushing WL patch into it.
------------------------------------------------------------
revno: 6222
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk5
timestamp: Thu 2013-08-08 13:58:54 +0800
message:
  Fix Bug #17058493 - COMMAND-LINE OPTION '--INNODB-FT-AUX-TABLE' CANNOT
  TAKE AN ARGUMENT
  
  rb://2986 apporved by Sunny Bains
------------------------------------------------------------
revno: 6221
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-08-08 11:23:37 +0530
message:
  - WL#6501: Truncate table atomic
    Corrected test-scenario whose result would differ based on how quickly
    truncate crashes.
    Connection-1 causes truncate to crash.
    Connection-2 is executing DML statement in parallel on other table.
    If connection-1 completes the action it would cause server to go down
    which means Connection-2 test statement would never succeed.
  
    Test-Scenario was to test truncate atomicity and Connection-2 inserting
    to other table was not needed for validiting this. Corrected test-case to
    fix the issue.
------------------------------------------------------------
revno: 6220 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-08 11:49:35 +0800
message:
  Null merge from 5.6
    ------------------------------------------------------------
    revno: 3902.258.55
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: 17214191
    timestamp: Thu 2013-08-08 11:47:04 +0800
    message:
      Bug#17214191 MEMCACHED ADD/SET ARE SLOWER THAN INSERTS
      
      rb://2993 approved by Jimmy.
      
      This bug is because when we do inserts through memcached, we skip a
      srv_active_wake_master_thread() embedded in innodb_commit() in ha_innodb.cc.
      This srv_sys->activity_count.inc() is checked by BUF FLUSH LIST flush.
      If we do not increment it, then the background buffer flush do extra flushes.
      The master thread thought the server is quiet and no activity, so it does
      buffer pool preemptive flush.  It brings more extra I/O.
      
      Add srv_active_wake_master_thread() to ib_cursor_insert_row(), then
      things come to normal.
      
      In this patch, we also remove the unnecessary memcpy for inserting row,
      and fixed a legacy memory leak in innodb_get.
------------------------------------------------------------
revno: 6219 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-08 11:31:46 +0800
message:
  Bug#17214191 MEMCACHED ADD/SET ARE SLOWER THAN INSERTS
  
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.265.1
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: 17214191
    timestamp: Thu 2013-08-08 11:13:00 +0800
    message:
      Bug#17214191 MEMCACHED ADD/SET ARE SLOWER THAN INSERTS
      
      rb://2993 approved by Jimmy.
      
      This bug is because when we do inserts through memcached, we skip a
      srv_active_wake_master_thread() embedded in innodb_commit() in ha_innodb.cc.
      This srv_sys->activity_count.inc() is checked by BUF FLUSH LIST flush.
      If we do not increment it, then the background buffer flush do extra flushes.
      The master thread thought the server is quiet and no activity, so it does
      buffer pool preemptive flush.  It brings more extra I/O.
      
      Add srv_active_wake_master_thread() to ib_cursor_insert_row(), then
      things come to normal.
      
      In this patch, we also remove the unnecessary memcpy for inserting row,
      and fixed a legacy memory leak in innodb_get.
------------------------------------------------------------
revno: 6218 [merge]
committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
branch nick: mysql-trunk-16857395
timestamp: Thu 2013-08-08 08:34:11 +0530
message:
  BUG#16857395 - EXCESSIVE MEMORY USAGE AFTER REPEATED TRIGGER
                 EXCEPTION HANDLERS
  Merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.258.54
    committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
    branch nick: mysql-5.6-16857395
    timestamp: Thu 2013-08-08 08:22:37 +0530
    message:
      BUG#16857395 - EXCESSIVE MEMORY USAGE AFTER REPEATED TRIGGER
                     EXCEPTION HANDLERS
      
      Analysis
      --------
      Excessive memory consumption is observed when executing a
      stored procedure multiple times when:
      
      a) The stored procedure has an SQL statement which fails during
         validation.
      
      b) The stored procedure has an an SQL statement which requires to
         be re-prepared.
      
      Under the above scenarios, the query within the stored procedure is
      invalidated during the execution. The invalidation calls for the
      re-parse of the query. During the re-parse, the lex tree is allocated
      on the persistent mem_root of the stored procedure. When the stored
      procedure is executed multiple times, the repeated allocation of the
      new lex tree on the persistent mem_root is observed. The previous
      allocations for the lex tree in the mem_root are never freed. In
      addition to the lex tree, the Ref_ptr_array(array of pointers to
      the field items) was also allocated on the persistent mem_root and
      never freed during re-parse. Hence the memory growth was observed.
      
      Also the patch solves the memory growth due to the cases listed below:
      a) Allocation of Sql_condition and its memory on persistent mem-root
         every time a condition is raised.
      
      b) Allocation of Handler-structure on the persistent mem-root every
         time an SQL-handler is pushed. Observed when the execution flow
         goes to DECLARE HANDLER statement.
      
      c) Allocation of Cursor-structure on the persistent mem-root every
         time a cursor is pushed. Observed when the DECLARE CURSOR
         statement is executed.
      
      Fix:
      ----
      1) Patch for the allocation of the lex tree and 'Ref_ptr_array' on the
         persistent mem_root:
         A new mem_root 'm_lex_mem_root' is introduced which holds the lex
         tree and the Ref_ptr_array. When a query is invalidated, before the
         reparse we free this mem_root, init the root and use it to allocate
         the newly parsed lex tree.
      
         The 'ref_pointer_array' part of the lex tree object points the
         Ref_ptr_array. Since 'Ref_ptr_array' should not be
         allocated on the persistent mem_root, we switch the stmt_arena's
         mem_root to that of the new 'm_lex_mem_root'. This mem_root
         is persistent until reparse or the stored routine is dropped,
         hence the 'Ref_ptr_array' is allocated on the new mem_root as well.
         Since this mem_root is freed and re-initialised during
         re-parse we will not observe a memory growth. Also ensures that
         the prepared statement execution is unaffected.
      
      2) Patch for the next set of issues listed above:
        a) The Sql_condition is a temporary instance hence initialised in
           the execution mem_root which is freed at the end of the execution.
        b) The handler is now stored on the heap instead of the caller's
           mem_root thus avoiding the memory growth.
        c) The cursor is now stored on the heap instead of the caller's
           mem_root thus avoiding the memory growth.
      
      Note: I have not added an mtr test case: A test case which executes
            for a longer period is needed to observe the increasing memory
            consumption and is not suitable for mtr. Also the existing test
            suite has tests which uses the new mem_root.
------------------------------------------------------------
revno: 6217 [merge]
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-08 02:07:13 +0200
message:
  Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS
  
  local merge mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.53
    committer: Christopher Powers <chris.powers@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-08-08 02:03:09 +0200
    message:
      Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS
      
      Updated event_aggregate_setup.inc with reverted instrument name.
------------------------------------------------------------
revno: 6216 [merge]
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 18:18:32 -0500
message:
  Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS
  
  Local merge mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.52
    committer: Christopher Powers <chris.powers@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-07 18:11:14 -0500
    message:
      Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL THREAD STATEMENTS
      
      Revert 'statement/com/new_packet' to 'statement/com/'.
------------------------------------------------------------
revno: 6215
committer: Martin Hansson <martin.hansson@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 16:15:12 +0200
message:
  Bug#11748775: OPTIMIZER USES WRONG INDEX FOR THE RIGHT TABLE IN LEFT
  JOIN
  
  The range optimizer used the wrong prerequisite for concluding that a
  table is the inner table of an outer join. It looked at
  TABLE::maybe_null which, if true, means that a table is the inner
  table of an outer join. However, this flag is not unset if the outer
  join is rewritten to an inner join. This caused the range optimizer to
  bail out on such indexes. The ref optimizer, on the other hand, used
  the correct information. The effect is that the optimizer gets a cost
  estimate from the ref optimizer only, and it is so far off that the
  wrong index gets chosen.
  
  The fix is to make the range optimizer correctly recognize what is
  actually an inner table of an outer join. This causes it to produce a
  range access plan, but - more importantly - a cost. Thanks to the
  heuristic that range statistics take precedence if the ref estimate
  seems too optimistic, the index gets rejected, and the obviously
  better index is chosen.
  
  Fixing the bug has the additional benefit that a lot of impossible
  where conditions are now discovered that previously were not, more
  precisely when there is an outer join with an IS NULL predicate on a
  non-nullable column of the inner table, and the outer join is
  rewritten to inner join.
  
  A lot of test cases change. Some change because of the newly
  discovered impossible where clause mentioned above, while some change
  because we can now do a range scan where previously the optimizer
  thought a table scan was the only option.
------------------------------------------------------------
revno: 6214
committer: Shivji Kumar Jha <shivji.jha@oracle.com>
branch nick: mysql-trunk_wl3656
timestamp: Wed 2013-08-07 17:34:48 +0530
message:
  WL#3656:PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
  
  Fixed valgrind failures.
  Post push fix
------------------------------------------------------------
revno: 6213
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 17:25:37 +0530
message:
  WL #6982 Make plugin column in mysql.user non-null
------------------------------------------------------------
revno: 6212 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 15:56:10 +0530
message:
  Bug#16416302 - CRASH WITH LOSSY RBR REPLICATION
  OF OLD STYLE DECIMALS
        
  Merging fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.258.51 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-07 15:51:35 +0530
    message:
      Bug#16416302 - CRASH WITH LOSSY RBR REPLICATION
      OF OLD STYLE DECIMALS
            
      Merging fix from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.536.19
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-08-07 15:08:55 +0530
        message:
          Bug#16416302 - CRASH WITH LOSSY RBR REPLICATION
          OF OLD STYLE DECIMALS
          
          Fixing post-push test script failure
------------------------------------------------------------
revno: 6211
committer: Satya Bodapati <satya.bodapati@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 15:33:47 +0530
message:
  Bug#17165034 - EXTENDING SYSTEM OR TEMPORARY TABLESPACE DOES NOT WORK
  
  Extending/Adding system or temporary tablespaces is broken on trunk.
  
  Example for extending system tablespaces: 
  1. Database is created with innodb_data_file_path=ibdata1:10M
  2. change the innodb_data_file_path to ibdata:10M;ibdata2:10M;ibdata3:10M:autoextend
  3. start the server
  4. New data files ibdata2,ibdata3 should be created.
  
  This works fine on 5.6 but broken on trunk.
  
  Also InnoDB refuses to start if there multi-file tablespaces(>2)
  
  Issues fixed in the patch:
  --------------------------
  1. Extending tablespaces
  2. creation of multi-file tablespaces(>2)
  3. Removed an assert to allow graceful exit by printing error message
     when an ibdata file is missing
  
  Approved by Kevin. rb#2915
------------------------------------------------------------
revno: 6210 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 10:35:55 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.50
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-07 10:19:06 +0300
    message:
      Bug#16896810 INPLACE ALTER: FAILING ASSERTION: !PREBUILT->TRX->CHECK_FOREIGNS
      
      When there are multiple indexes on the same column, and all of them
      are being dropped while a foreign key constraint needs an index,
      InnoDB would not block the DROP INDEX operation. (InnoDB foreign key
      constraint checks are only performed by index lookup, never by a table
      scan.)
      
      ha_innobase::prepare_inplace_alter_table(): Flag the indexes to be
      dropped, before invoking innobase_check_foreign_key_index(), so that
      to-be-dropped indexes will be skipped when determining if there are
      replacements for all to-be-dropped indexes.
      
      innobase_check_foreign_key_index(): Remove the assertion
      ut_ad(!index->to_be_dropped). The index should be flagged as
      to-be-dropped except when dropping the primary key.
      
      rb#3020 approved by Jimmy Yang
------------------------------------------------------------
revno: 6209 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 07:37:48 +0200
message:
  Merge up from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.258.49
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-07 07:35:42 +0200
    message:
      Increased timeout for runs with bigt-test
------------------------------------------------------------
revno: 6208
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 10:03:18 +0530
message:
  WL#6606 - Offload THD and network initialization to worker
            thread.
  Initialization of THD and vio/net initialization happens
  in the acceptor thread that accepts the connection. THD and
  network initialization involves acquiring locks, memory
  allocation of various structures and system calls which are
  compute-bound as well as tasks that may block. The acceptor
  thread is an event loop that waits for new connection events
  from clients. To maximize the number of connections that can
  be handled per unit of time, the acceptor thread should
  spend as much of its time listening for new connections.
  This means thd and vio/net initialization should be
  offloaded from the accept event loop and delegated to
  worker threads that handle the client connections.
  This worklog provides a generic framework which offloads
  THD initialization and net/vio initialization to worker
  threads for all types of communication channels (shared
  memory, named pipes and sockets) that clients connect with
  server.
  In addition, this worklog refactored the existing
  interfaces of the struct scheduler_functions into an object
  oriented API, refactored and moved code related to
  connection handling and its management into a separate
  directory and files that contain implementations of specific
  related functionality. This resulted in removal of unnecessary
  #defines, modularity, better code clarity and readability in
  addition to performance improvements made in the worklog.
  As result of changes in this worklog, the follow bugs have
  been fixed:
  Bug#12951536 - THD INITIALIZATION TOO EXPENSIVE FOR
                 ACCEPT() THREAD.
  Bug#12951595 - TOO MUCH NETWORK INITIALIZATION DONE
                 IN ACCEPT() THREAD.
  Bug#12951605 - ACCEPT() SOCKET GETS TOO MUCH OF FCNTL()S.
  
  User Visible Changes:
  The system variables "bind_address", "thread_handling",
  ""thread_cache_size" and status variables "threads_cached",
  "Slow_launch_threads" are no longer visible in embedded
  server mode (where they have no effect).
------------------------------------------------------------
revno: 6207
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 09:00:02 +0530
message:
  - bug#17227149: INNODB_WL6501 KEEPS ON FAILING INTERMITTENTLY
    - In one of the injected error even though file was open we injected
      error to assume it is closed and this lead to issue on Windows
      as Windows will have lock on the file and will not remove it from
      system till lock is expired. Leading to timeout of test-case.
    - Ensure you close the file-handle in such cases while injecting error.
  
   Approved by Sunny (over IM)
------------------------------------------------------------
revno: 6206 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-08-07 08:49:36 +0530
message:
  Bug#16416302 - CRASH WITH LOSSY RBR REPLICATION
  OF OLD STYLE DECIMALS
  
  Merging fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.258.48 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-08-07 08:26:55 +0530
    message:
      Bug#16416302 - CRASH WITH LOSSY RBR REPLICATION
      OF OLD STYLE DECIMALS
      
      Merging fix from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.536.18
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-08-07 07:56:07 +0530
        message:
          Bug#16416302 - CRASH WITH LOSSY RBR REPLICATION
          OF OLD STYLE DECIMALS
          
          Problem: In RBR, Slave is unable to read row buffer
          properly when the row event contains MYSQL_TYPE_DECIMAL
          (old style decimals) data type column.
          
          Analysis: In RBR, Slave assumes that Master sends
          meta data information for all column types like
          text,blob,varchar,old decimal,new decimal,float,
          and few  other types along with row buffer event.
          But Master is not sending this meta data information
          for old style decimal columns. Hence Slave is crashing
          due to unknown precision value for these column types.
          Master cannot send this precision value to Slave which
          will break replication cross-version compatibility.
          
          Fix: To fix the crash, Slave will now throw error if it
          receives old-style decimal datatype. User should
          consider changing the old-style decimal to new style
          decimal data type by executing "ALTER table modify column"
          query as mentioned in http://dev.mysql.com/
          doc/refman/5.0/en/upgrading-from-previous-series.html.
------------------------------------------------------------
revno: 6205
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Wed 2013-08-07 13:15:53 +1000
message:
  WL#6578 - Fix const correctness.
------------------------------------------------------------
revno: 6204
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Wed 2013-08-07 13:00:55 +1000
message:
  WL#6578 - Follow up fix. Test for a valid read view before printing.
------------------------------------------------------------
revno: 6203 [merge]
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Wed 2013-08-07 08:27:14 +1000
message:
  WL#6578 - InnoDB: Optimize read view creation
  
  The aim of this WL is to reduce contention around trx_sys_t::mutex and
  the lock_sys_t::mutex.
  
   1. Refactor the MVCC code
   2. Reuse read views for AC-NL-RO selects
   3. Use a pool of read views
   4. Add MVCC class
   5. Use a trx_id to trx_t* map
   6. Keep the active trx_id_ts in a vector.
   7. Pre-allocate a small cache of record and table locks
   8. Avoid extra work when a transaction is tagged as read-only (during commit).
   9. General code cleanup
  
  Approved by Jimmy Yang and Yasufumi Kinoshita rb#2901
    ------------------------------------------------------------
    revno: 6121.1.36 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Wed 2013-08-07 08:11:08 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.35 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-08-06 16:11:11 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.34 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Mon 2013-08-05 07:10:16 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.33
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Fri 2013-08-02 16:17:53 +1000
    message:
      WL#6578 - Remove diagnostic print.
    ------------------------------------------------------------
    revno: 6121.1.32 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Fri 2013-08-02 09:57:36 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.31 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Thu 2013-08-01 13:35:20 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.30 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Wed 2013-07-31 12:24:22 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.29 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-30 18:37:22 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.28 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-30 09:16:51 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.27
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-30 09:13:26 +1000
    message:
      WL#6578 - Add an assertion to check some old code. Fix a bug in the
      refactoring of the code in this branch. A mutex exit was missing.
    ------------------------------------------------------------
    revno: 6121.1.26
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-30 09:00:09 +1000
    message:
      WL#6578 - Fix an off by one assertion.
    ------------------------------------------------------------
    revno: 6121.1.25 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Mon 2013-07-29 14:51:13 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.24 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Mon 2013-07-29 14:41:08 +1000
    message:
      WL#6578 - Add a cache of table locks anchored in trx_t.
        ------------------------------------------------------------
        revno: 6121.2.1
        committer: Sunny Bains <Sunny.Bains@Oracle.Com>
        branch nick: wl6578
        timestamp: Mon 2013-07-29 06:29:11 +0200
        message:
          WL#6578 - Use a cache for table locks anchored in trx_t.
    ------------------------------------------------------------
    revno: 6121.1.23
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Mon 2013-07-29 07:18:11 +1000
    message:
      WL#6578 - Reduce the size of lock_t
    ------------------------------------------------------------
    revno: 6121.1.22
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sun 2013-07-28 18:21:59 +1000
    message:
      WL#6578 - Add an assertion
    ------------------------------------------------------------
    revno: 6121.1.21
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sun 2013-07-28 18:20:10 +1000
    message:
      WL#6578 - Fix a bug
    ------------------------------------------------------------
    revno: 6121.1.20
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sun 2013-07-28 10:37:44 +1000
    message:
      WL#6578 - Fix the purge trx ids copy function.
    ------------------------------------------------------------
    revno: 6121.1.19
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sat 2013-07-27 23:05:19 +1000
    message:
      WL#6768 - Optimise purge read view creation.
    ------------------------------------------------------------
    revno: 6121.1.18 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sat 2013-07-27 15:01:33 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.17
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sat 2013-07-27 14:54:18 +1000
    message:
      WL#6578 - Remove code that should be added to the server to reduce overhead
      during transaction start.
    ------------------------------------------------------------
    revno: 6121.1.16
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sat 2013-07-27 14:50:58 +1000
    message:
      WL#6578: Minor cleanup.
    ------------------------------------------------------------
    revno: 6121.1.15
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Sat 2013-07-27 09:09:13 +1000
    message:
      WL#6578 - Create a new std:vector like class to handle read view trx IDs.
      Add infrastructure for reading the transaction time from the server
      session instance. Bypass RW code paths when a transaction is RO. Some minor
      code rearrangement in btr0sea.cc, after doing some perf tests. Seems like
      some instruction cache misses due to jumps (gotos). Make some hash functions
      const correct.
    ------------------------------------------------------------
    revno: 6121.1.14
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Thu 2013-07-25 18:56:38 +1000
    message:
      WL#6578 - The allocator constructor can't be explicit. Doesn't work with
      STLPort on Solaris.
    ------------------------------------------------------------
    revno: 6121.1.13
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Thu 2013-07-25 13:15:24 +1000
    message:
      WL#6578 - Minor change
    ------------------------------------------------------------
    revno: 6121.1.12 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Thu 2013-07-25 10:52:10 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.11
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Thu 2013-07-25 10:47:22 +1000
    message:
      WL#6578 - Minor code cleanup.
    ------------------------------------------------------------
    revno: 6121.1.10 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Wed 2013-07-24 05:01:45 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.9 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Thu 2013-07-18 21:51:44 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.8 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Wed 2013-07-17 16:48:05 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.7
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Wed 2013-07-17 16:43:38 +1000
    message:
      WL#6578 - Fix a bug, when cloning a view we need to check the cloned views
      trx id array size. General code cleanup.
    ------------------------------------------------------------
    revno: 6121.1.6
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Wed 2013-07-17 10:03:58 +1000
    message:
      WL#6578 - Fix whitespace.
    ------------------------------------------------------------
    revno: 6121.1.5
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-16 16:31:46 +1000
    message:
      WL#6578 - Remove unused paramter.
    ------------------------------------------------------------
    revno: 6121.1.4
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-16 16:27:21 +1000
    message:
      WL#6578 - Add a check for nanosleep(2).
    ------------------------------------------------------------
    revno: 6121.1.3 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-16 16:19:17 +1000
    message:
      WL#6578 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 6121.1.2
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Tue 2013-07-16 15:38:51 +1000
    message:
      WL#6578 - Fix a failing test. The sync point needs to be before we remove
      the rw transaction from the active (trx_sys_t::rw_ids_set) set.
    ------------------------------------------------------------
    revno: 6121.1.1
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6578
    timestamp: Mon 2013-07-15 22:39:02 +1000
    message:
      WL#6578 - Initial commit.
------------------------------------------------------------
revno: 6202 [merge]
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 18:30:38 +0530
message:
  Bug#16917425 : Reverting back latest changes made
    ------------------------------------------------------------
    revno: 3902.258.47
    committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-08-06 18:23:28 +0530
    message:
      Bug#16917425 : Reverting back latest changes made
------------------------------------------------------------
revno: 6201
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 17:39:40 +0530
message:
  WL #6982 Make plugin column in mysql.user non-null
------------------------------------------------------------
revno: 6200
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-cleanup
timestamp: Tue 2013-08-06 13:38:42 +0200
message:
  Fixed branch name
------------------------------------------------------------
revno: 6199 [merge]
committer: Shivji Kumar Jha <shivji.jha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 16:49:08 +0530
message:
  WL#3656:PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
  
  Implemented following Performance Schema tables for
  replication monitoring:
  
  1) replication_connection_configuration
  2) replication_connection_status
  3) replication_execute_configuration
  4) replication_execute_status
  5) replication_execute_status_by_coordinator
  6) replication_execute_status_by_worker
    ------------------------------------------------------------
    revno: 5107.35.48
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-08-06 02:34:56 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Added waiting condition in a test to aviod
      possible sporadic failure.
    ------------------------------------------------------------
    revno: 5107.35.47 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Mon 2013-08-05 12:25:53 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                  
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.46 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-07-31 21:56:35 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.45 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-07-31 17:05:00 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.44 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-30 18:46:45 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.43
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656
    timestamp: Tue 2013-07-30 13:53:56 +0200
    message:
      Fixed build break,
      when compiling without the performance schema
    ------------------------------------------------------------
    revno: 5107.35.42
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Mon 2013-07-29 20:52:25 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Couple of cosmetic changes in the final patch
      before push to mysql-trunk-stage.
    ------------------------------------------------------------
    revno: 5107.35.41
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656
    timestamp: Mon 2013-07-29 15:57:40 +0200
    message:
      Fixed spurious warnings about performance_schema tables,
      when not using the performance_schema.
    ------------------------------------------------------------
    revno: 5107.35.40
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656
    timestamp: Mon 2013-07-29 15:17:35 +0200
    message:
      Whitespace cleanup
    ------------------------------------------------------------
    revno: 5107.35.39
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656
    timestamp: Mon 2013-07-29 12:08:46 +0200
    message:
      More cleanup for embedded
    ------------------------------------------------------------
    revno: 5107.35.38
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Mon 2013-07-29 10:49:11 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Added suppression to the test failing as a result of
      Bug#16580366.
    ------------------------------------------------------------
    revno: 5107.35.37
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Mon 2013-07-29 02:37:21 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                  
      Fixed failures on pb2 WL branch
    ------------------------------------------------------------
    revno: 5107.35.36 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Sun 2013-07-28 13:15:14 +0530
    message:
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.35
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Sat 2013-07-27 22:19:40 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                  
      Fixed valgrind failures on pb2 WL branch.
      replaced free() by delete to match the new operator.
    ------------------------------------------------------------
    revno: 5107.35.34
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Sat 2013-07-27 00:59:44 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
      Fixed failures on pb2 WL branch
    ------------------------------------------------------------
    revno: 5107.35.33
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-07-26 18:03:36 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Fixed failures on pb2 WL branch.
    ------------------------------------------------------------
    revno: 5107.35.32
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-23 13:40:02 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      worked on fixing failing tests.
    ------------------------------------------------------------
    revno: 5107.35.31
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-07-19 19:01:32 +0530
    message:
      BUG#17186024 - SERVER CRASH FOR SELECT * FROM
                     REPLICATION_EXECUTE_STATUS_BY_WORKER
      BUG#17186087 - LAST_SEEN_TRANSACTION COLUMN CONTAINS
                     THE GARBAGE 
      
      Problem:
      =======
      The value of the field last_seen_transaction
      was not cleared at start slave. So, the if
      (w->currently_executing_transaction.sidno)
      passed as a result of the old value, causing
      an assert later in the code.
      
      Fix:
      ===
      cleared last_seen_transaction at slave start.
    ------------------------------------------------------------
    revno: 5107.35.30
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-16 18:03:52 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      - worked on minor comments- whitespace etc
      - Addressed failures on trunk branch in reference to
        Last_error_timestamp field.
    ------------------------------------------------------------
    revno: 5107.35.29 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-07-12 19:24:22 +0530
    message:
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.28
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-07-12 19:12:21 +0530
    message:
      BUG#17154390 - CRASHING WHEN EXECUTING SELECT ON
                     NEW PFS TABLES WITHOUT REPLICATION
      
      Problem:
      ========
      There is a test in perfschema suite which tests the same.
      But the issue was not caught because mtr starts the server
      with server-id=1. Now the code says: 
      if(server-id!=0) 
        init_slave(); 
      Since server-id=1, init_slave is called and active_mi is
      declared and thus dereferencing an attribute of active_mi
      is fine. 
      
      When server is started manually, server-id=0. Hence,
      init_slave() is not called, so active_mi is not declared.
      So, de-referencing an attribute of active_mi lead to a
      server crash.
      
      Fix:
      ===
      Fixed the issue by checking for NULL before dereferencing.
    ------------------------------------------------------------
    revno: 5107.35.27
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Thu 2013-07-11 10:14:27 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      - Addressed review comments from Rith.
      - Worked on windows failures in pb2 WL branch
    ------------------------------------------------------------
    revno: 5107.35.26
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-07-10 10:58:07 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                        
      Addressed review comments from Rith.
      - All the tables return an empty set on master.
      - In non-MTS mode, worker table returns an empty set.
      - The rpl tests have been modified to assert on count(*)=0
        in the above two scenarios.
    ------------------------------------------------------------
    revno: 5107.35.25
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-07-10 00:17:10 +0530
    message:
       WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                  
       Fix to handle failures in WL branch(mysql-trunk-wl3656)
    ------------------------------------------------------------
    revno: 5107.35.24
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-09 22:49:05 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                  
      Fix to handle windows failures in WL branch(mysql-trunk-wl3656)
    ------------------------------------------------------------
    revno: 5107.35.23
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-09 17:19:52 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
      Fix to handle windows failures in WL branch(mysql-trunk-wl3656)
    ------------------------------------------------------------
    revno: 5107.35.22
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-09 10:35:54 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Fix to handle some failures in WL branch(mysql-trunk-wl3656)
    ------------------------------------------------------------
    revno: 5107.35.21 [merge]
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-09 02:28:48 +0530
    message:
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.20
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-09 01:30:52 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Addressed review comments from Rith.
    ------------------------------------------------------------
    revno: 5107.35.19
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656-marc
    timestamp: Mon 2013-07-08 15:23:57 +0200
    message:
      Rework on embedded build failures, related to Bug 17041705 - DO NOT BUILD PERFORMANCE SCHEMA FOR EMBEDDED
    ------------------------------------------------------------
    revno: 5107.35.18
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656-marc
    timestamp: Fri 2013-07-05 12:25:42 +0200
    message:
      Follow up on Bug 17041705 - DO NOT BUILD PERFORMANCE SCHEMA FOR EMBEDDED,
    ------------------------------------------------------------
    revno: 5107.35.17
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Thu 2013-07-04 23:44:54 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
      
      In this patch:
      fixed rpl_perfschema_* tests failing on pb2 WL branch
    ------------------------------------------------------------
    revno: 5107.35.16 [merge]
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-trunk-wl3656-merge
    timestamp: Thu 2013-07-04 18:49:48 +0200
    message:
      Merge mysql-trunk --> mysql-trunk-wl3656
    ------------------------------------------------------------
    revno: 5107.35.15
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Thu 2013-07-04 19:19:28 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
      
      In this patch:
      Addressed comments from Marc
      - fixed windows build failure on pb2.
      - added #include "my_global.h" in all added .cc
      - worked on  more tests in perfschema suite
      - applied patch for Bug#17041705
    ------------------------------------------------------------
    revno: 5107.35.14
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-07-03 21:03:17 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
      
      In this patch:
      Fixed rpl_perfschema_execute_status_by_coordinator.test
      faling on PB2 WL branch
    ------------------------------------------------------------
    revno: 5107.35.13
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-07-03 18:12:09 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
      
      In this patch:
      1) Added helper functions in class Relay_log_info
        a) To get worker count
        b) Pointer to Slave worker object at index n
           in workers array
      2) Added #ifndef EMBEDDED_LIBRARY macros
    ------------------------------------------------------------
    revno: 5107.35.12
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-07-02 16:52:38 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
      
      In this patch:
      fix to handle failure of test
      perfschema.information_schema on pb2 WL branch.
      The issue was: In case MTS(mi->rli->workers) was not set,
      the get_row_count() function returned a uninitialized
      value.
    ------------------------------------------------------------
    revno: 5107.35.11
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Mon 2013-07-01 00:23:01 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      In this patch:
      Worked on pb2 failures in WL branch related to
      warnings in MTS.
    ------------------------------------------------------------
    revno: 5107.35.10
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Sun 2013-06-30 19:21:02 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      In this patch:
      -------------
      There was a compilation error in windows as it doesnt
      support va_copy() macro. Added #define va_copy to handle
      the same.
    ------------------------------------------------------------
    revno: 5107.35.9
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Sat 2013-06-29 11:10:51 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
    ------------------------------------------------------------
    revno: 5107.35.8
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-06-19 02:03:52 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
                  
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
                  
      Change in this patch:
      --------------------
      Fixed failures seen in pb2 WL branch(mysql-trunk-wl3656)
    ------------------------------------------------------------
    revno: 5107.35.7
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Tue 2013-06-18 15:58:45 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
            
      Change in this patch:
      --------------------
      Addressed code-review comments from Marc Alff. (rb#2599)
    ------------------------------------------------------------
    revno: 5107.35.6
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-06-12 23:40:44 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
      
      Change in this patch:
      --------------------
      Changed data type of timestamp fields from string to
      timestamp. Updated tests accordingly.
    ------------------------------------------------------------
    revno: 5107.35.5
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Sat 2013-06-08 14:24:56 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Implemented following PS tables for replication monitoring:
      1) replication_connection_configuration
      2) replication_connection_status
      3) replication_execute_configuration
      4) replication_execute_status
      5) replication_execute_status_by_coordinator
      6) replication_execute_status_by_worker
    ------------------------------------------------------------
    revno: 5107.35.4
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Wed 2013-05-22 00:27:51 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      * Fixed bugs in worker table.
      * Changed code to make it more cleaner and organised
        with fewer corner cases.
      * fixed failing test cases on last push.
      
      TODO:
      * Implement Current_Transaction field in worker's table.
      * Write mtr tests.
    ------------------------------------------------------------
    revno: 5107.35.3
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-05-17 11:47:21 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
      Changed table names.
      Changed File names and class names accordingly.
      
      Updated tests in perfschema suite.
      
      TODO:
            
        * Fix an issue identified in table: replication_execute_status_by_executor.
        * Test that MTS works correctly after delaying destructing few objects.
        * Write mtr test cases for features in WL.
    ------------------------------------------------------------
    revno: 5107.35.2
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-05-17 01:39:11 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
            
       Fixed The last table table_replication_execute_status_by_executor
       1) To calcuate field values instead of some hard-coded values in
          previous push.
       2) This table now also contains multiple rows, one for each worker
          thread.
       3) Added Worker_id column. This is now the Primary key of table.
      
        Made Thread_id fields print NULL after STOP SLAVE in every table.
        The data type is thus changed to char to print "NULL" when required.
      
        Delayed Destructing DYNAMIC_ARRAY WORKERS until START SLAVE.
        Before this patch the array was destructed at STOP SLAVE. This was
        needed to extract the worker statistics after STOP SLAVE.
      
        TODO:
      
        * Fix an issue identified in table: replication_execute_status_by_executor.
        * Remove Last_Executed_Transaction field from worker's table.
        * Further changes in design, if any.  
      
       
    ------------------------------------------------------------
    revno: 5107.35.1
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-trunk_wl3656
    timestamp: Fri 2013-05-10 23:29:56 +0530
    message:
      WL#3656- PERFORMANCE SCHEMA table for SHOW SLAVE STATUS
      
       Implemented following PS tables for replication monitoring:
         1) replication_connection_config_by_channel
         2) replication_connection_status_by_channel
         3) replication_execute_config_by_channel
         4) replication_execute_status_by_channel
         5) replication_execute_status_by_coordinator
         6) replication_execute_status_by_executor
       
       Updated tests in perfschema suite accordingly.
      
       TODO:
           - Some fields in the above tables have hardcoded values.
           - Extend tables to contain multiple rows.
           - Write mtr scrpits to test the printed values.
       
------------------------------------------------------------
revno: 6198
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 16:00:19 +0530
message:
  - bug#17227149: INNODB_WL6501 KEEPS ON FAILING INTERMITTENTLY
    - Caching length before log directory path is copied to the buffer and then
      using the stale length for calculation.
    - Missed out change at one place. Did the same change at other places.
    - Missed out instance resulted in valgrind issue.
    - Corrected the same.
------------------------------------------------------------
revno: 6197
committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
branch nick: trunk-16587369
timestamp: Tue 2013-08-06 12:11:18 +0200
message:
  Bug#16587369: HANDLER FOR SQLEXCEPTION NOT CATCHING ERROR
  1452 (FK CONSTRAINT) FOR UPDATE
  
  Overview
  --------
  This is a bug regarding the handling of fatal errors. A fatal
  error is an error that should not be caught by a condition
  handler in a stored procedure. The issues described in the bug
  report are that:
  
  1. The same error is handled differently for different
     statements.
  2. Seemingly trivial errors are treated as fatal.
  
  It should be noted that in the context of this bug report (and
  bug fix), only handler errors are relevant to consider. There are
  two important issues regarding handler errors in the source code:
  
  1. Deciding whether a handler error is to be considered fatal.
  2. Ensuring that the handler error is indeed treated as fatal.
  
  For the first issue, "is_fatal_error()" is provided by the
  handler api, and returns true for handler errors that are
  fatal. The second issue can be handled in various ways; the most
  common is to call "print_error()" with a flag indicating that the
  handler error is to be considered fatal. Inspecting how the
  source code handles these two issues, in light of the problems
  reported, reveals three shortcomings in the implementation:
  
  1. Handler errors are in fact fatal by default, as defined by the
     "is_fatal_error()" function.
  2. When an error is returned from the handler api, the caller
     does not always check if the error is fatal.
  3. The presence of a fatal error is not always flagged when
     calling "print_error()".
  
  
  Suggested fix
  -------------
  The scope and ambition for the fix is to treat handler errors
  consistently for DML statements (update, insert, delete) by
  making sure "is_fatal_error()" is called before calling
  "print_error()", and to provide the "ME_FATALERROR" flag as
  appopriate. This alone does not fix the bug that is reported,
  since handler errors are fatal by default, hence, we also need to
  extend the function "is_fatal_error()" to recognize more handler
  errors as being non-fatal.
  
  An attempt was made to consider handler errors non-fatal by
  default, but this made a large number of tests fail in not very
  obvious ways, so this solution was not pursued further. Instead,
  a switch for catching non-fatal errors was added to
  "is_fatal_error()", currently catching:
  
  - HA_ERR_NO_REFERENCED_ROW: The error originally addressed by the
    bug report considered here.
  - HA_ERR_ROW_IS_REFERENCED: Another FK constraint violation
    error, an obvious extension of the bug we are addressing.
  - HA_ERR_LOCK_WAIT_TIMEOUT: See below.
  
  Changing the implementation of "is_fatal_error()" has a potential
  impact on the non-DML source code, which also calls this
  function; however, no damage has been observed in the testing
  that has been done. On the other hand, tests failed for other
  reasons:
  
  1. Some tests expected a fatal outcome in situations where the
     error is now non-fatal (e.g. for foreign key constraint
     violations). The fix for this was to modify the test.
  2. Some tests expected a non-fatal outcome where the error is now
     fatal due to the changed implementation of DML statements
     where we ensure that errors are treated the way they ought
     to. The fix for this was to extend "is_fatal_error()" to
     consider the error in question as non fatal (the error here
     was lock wait timeout).
  
  Re-considering which handler errors should be considered fatal is
  still a relevant task, but is considered beyond the scope of this
  bug fix. Additionally, such a task might be the responsibility of
  the storage engine teams.
------------------------------------------------------------
revno: 6196
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 14:22:10 +0530
message:
  - bug#17227149: INNODB_WL6501 KEEPS ON FAILING INTERMITTENTLY
  
    Accidentally checked in old version of test-case.
------------------------------------------------------------
revno: 6195 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 11:08:45 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.46
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-08-06 10:55:25 +0300
    message:
      Bug#16996584 5.6.11+ REGRESSION: MULTIPLE CRASHES DURING CRASH RECOVERY
      Bug#17234962 FIX FOR BUG 14606334 IN 5.6.11 BREAKS BACKWARD
      COMPATIBILITY FOR INNODB RECOVERY
      
      The function page_create_empty() that was introduced for fixing
      Bug#14606334 was incorrectly being executed when applying redo log
      from an earlier MySQL version.
      
      page_cur_delete_rec(), page_delete_rec_list_end(): If we are applying
      a redo log record, do not attempt to "optimize" it by calling
      page_create_empty() even if the page would become empty.  We must
      replay the redo log operations as is, in order to keep the PAGE_FREE
      list compatible with any subsequent redo log entries that may have
      been logged for the page.
      
      rb#3008 approved by Jimmy Yang
------------------------------------------------------------
revno: 6194
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 13:32:18 +0530
message:
  - bug#17270947: THE TEST INNODB_WL6470_1 FAILS WITH
    "--MYSQLD=--INNODB-PAGE-SIZE=4K".
  
    If test-case is executed with 4k page size and test-case demands creation
    of table with page-size = 8K then innodb will issue valid warning.
    Need to supress such warnings.
------------------------------------------------------------
revno: 6193
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 12:46:23 +0530
message:
  - bug#17227149: INNODB_WL6501 KEEPS ON FAILING INTERMITTENTLY
  
    WL#6501 redo logs the table meta-data during truncate. This
    redo log entry is lost if a checkpoint is made asynchronously
    while the truncate is in progress. If the server crashes after
    the asynchronous checkpoint but before TRUNCATE completes we
    lose the redo log entry on startup.
  
    To avoid this issue we introduce a separate TRUNCATE log.
    The truncate meta-data is now written to the new TRUNCATE
    log. This log is not affected by the checkpoint on the main
    REDO log.
  
    Life-Cycle for TRUNCATE log:
  
    - Truncate started
      - log-checkpoint
      - truncate log created and written with magic-number = 0 followed by fsync
      - execute truncate action drop index/re-init tablespace
        (if single tablespace)/create index.
      - update SYS_XXXX tables.
      - log-checkpoint
      - write magic-number to truncate log followed by fsync
      - remove/delete truncate log.
  
    If server crashes before truncate log is written: no action
    If server crashes after truncate log is written with magic-number = 0: add
    table to truncate for fixup.
    If server crashes after truncate log is updated with magic-number: avoiding
    adding table to truncate for fixup.
    If server crashes after truncate log is updated and deleted: On recovery we
    might not see the truncate log so no question of adding it to truncate fix-up
    list.
  
    * Note: Purpose of the magic number.
    Some file-systems don't persist the meta-data immediately and if the OS
    crashes during this window then on recovery truncate fixup action will be
    initiated as TRUNCATE log file is still present on the disk.
    To avoid such anomalies we mark our action-completion by magic-number.
  
    Approved by: rb#2987 (Sunny)
------------------------------------------------------------
revno: 6192 [merge]
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 12:01:21 +0530
message:
  Bug#16917425 : added check to skip tests where few tests were failing in absence of plugin
    ------------------------------------------------------------
    revno: 3902.258.45
    committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-08-06 11:57:35 +0530
    message:
      Bug#16917425 : added check to skip tests where few tests were failing in absence of plugin
------------------------------------------------------------
revno: 6191
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 11:46:42 +0530
message:
  Bug #16862290 	ASSERT TRX->DICT_OPERATION_LOCK_MODE == 0
  
  Problem:
  
  There is an assert in place to ensure that the dictionary operation lock
  is not taken recursively.  This assert was failing. 
  
  Solution:
  
  Added an if condition to ensure that the dictionary operation lock is
  not taken recursively. 
  
  rb#3015 approved by Kevin and Marko.
------------------------------------------------------------
revno: 6190 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 06:58:09 +0200
message:
  Null merge from 5.6
    ------------------------------------------------------------
    revno: 3902.258.44
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-08-06 06:56:11 +0200
    message:
      Added big-test to the runs with 4k and 8k page size. Also restricted these runs to innodb suite
------------------------------------------------------------
revno: 6189 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 06:50:01 +0200
message:
  Merge up from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.264.1
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-08-06 06:42:09 +0200
    message:
      Added big-test to the runs with 4k and 8k page size. Also restricted these runs to innodb suite
------------------------------------------------------------
revno: 6188 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-08-06 10:00:38 +0800
message:
  The assertion 'ut_ad(oldest_lsn <= cur_lsn)' can't hold, because we get the
  current max LSN before we get the oldest LSN from the buffer pool.
  
  We can simply change the assertion to 'ut_ad(oldest_lsn <= log_get_lsn())'
  to fix it. At the meantime, the cur_lsn is used in a subtraction, which is
  'cur_lsn - oldest_lsn' to get the 'age'. If the original assertion can't hold,
  the subtraction would result in a very big number. Although the unexpected
  subtraction is harmless, I'd like to check the cur_lsn to get a reasonable
  'age'.
  
  rb#3013, approved by Marko
    ------------------------------------------------------------
    revno: 3902.258.43
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Tue 2013-08-06 09:41:11 +0800
    message:
      The assertion 'ut_ad(oldest_lsn <= cur_lsn)' can't hold, because we get the
      current max LSN before we get the oldest LSN from the buffer pool.
      
      We can simply change the assertion to 'ut_ad(oldest_lsn <= log_get_lsn())'
      to fix it. At the meantime, the cur_lsn is used in a subtraction, which is
      'cur_lsn - oldest_lsn' to get the 'age'. If the original assertion can't hold,
      the subtraction would result in a very big number. Although the unexpected
      subtraction is harmless, I'd like to check the cur_lsn to get a reasonable
      'age'.
      
      rb#3013, approved by Marko
------------------------------------------------------------
revno: 6187
committer: Tiago Jorge <tiago.jorge@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-08-05 11:59:52 +0100
message:
  BUG#15909788-TEMPORARY FILES CREATED BY BINARY LOG CACHE ARE NOT PURGED AFTER
               TRANSACTION COM
              
  Problem:
  When you modify a large amout of data inside a transaction,
  for example a big LOAD DATA INFILE, and the size overcomes the binary log cache
  it will create temporary files in the tmp partition. Those files don't disappear
  until you close the connection, thus potentially filling up all available disk
  space in MySQL configured temp directory.
  
  Analysis:
  
  The binlog uses an internal cache implementation (IOCACHE) to store operations
  which have not yet been commited, as such, not yet written in the Binlog file.
  As stated in the bug, that cache is created per connected
  client, since all commit operations are intercepted by the binlog if it is
  active. When binlog_cache_size overflows, a file is created in the configured
  temporary directory by IOCACHE and it can grow up until
  max_binlog_cache_size (4GB). It has a "greedy" optimized approach,
  meaning that the create temp file is reused after a commit,
  having its only file seek cursor back to 0
  (mf_iocache.c::reinit_io_cache(...)), but will take the size of
  the largest transaction ever made by that client. When a client leaves, and
  as stated in the bug, IOCACHE is closed and the temporary file is deleted.
  
  Fix:
  The implementation was refactored in order to be intelligent and regain
  resources by reducing the file size to 0 without deleting
  it in the reset() method of the binlog_cache_data class, which is called
  after COMMIT or ROLLBACK operations.
------------------------------------------------------------
revno: 6186
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-08-05 11:12:17 +0530
message:
  Bug #17236738 - CAT_FILE FROM MYSQLTEST.CC DOES NOT HANDLE '\\R' CORRECTLY
------------------------------------------------------------
revno: 6185
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-08-02 13:16:34 +0900
message:
  Bug#17026780 INNODB TESTS FAILING DUE TO VARIATION IN CLUST_INDEX_SIZE VALUE
  Bug#16870041 I_INNODB.INNODB-ALTER-DEBUG FAILED REGULARLY IN DIFFERENT RUNS WITH TIMEOUT
  
  rb#2903 Approved by Marko
------------------------------------------------------------
revno: 6184 [merge]
committer: Joao Gramacho <joao.gramacho@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-01 13:58:51 +0100
message:
  Bug#16820156 MASTER_DELAY DOES NOT PERFORM PROPER TYPE CHECKING
  Bug#16960315 ERROR 1729 OVERFILLS BY THE VALUE OF MASTER_DELAY GREATER THAN 2^31
  
  Addressing post push failure in PB2 for embedded servers.
  
  Merge from mysql-5.6 into mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.42
    committer: Joao Gramacho <joao.gramacho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-08-01 13:54:32 +0100
    message:
      Bug#16820156 MASTER_DELAY DOES NOT PERFORM PROPER TYPE CHECKING
      Bug#16960315 ERROR 1729 OVERFILLS BY THE VALUE OF MASTER_DELAY GREATER THAN 2^31
      
      Addressing post push failure in PB2 for embedded servers.
      
      Added not_embedded.inc as it is not possible to set up an embedded server
      as a master or a slave.
------------------------------------------------------------
revno: 6183 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug16856735_mysql-trunk
timestamp: Thu 2013-08-01 11:59:46 +0530
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.41
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug16856735_mysql-5.6
    timestamp: Thu 2013-08-01 11:45:53 +0530
    message:
      Fixing post push test issue.
------------------------------------------------------------
revno: 6182
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk-bug16240526
timestamp: Thu 2013-08-01 12:03:38 +0700
message:
  This is patch for bug#16240526 - ASSERT FAILED IN FIELD::CHECK_CONSTRAINTS.
  
  The bug is a regression from WL#6030.
  
  mysql server built with debug could be terminated abnormally if
  a user executes SQL statement LOAD DATA INFILE that is failed
  for some reason and after that user executes some other
  SQL statement.
------------------------------------------------------------
revno: 6181
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk-bug17170755
timestamp: Thu 2013-08-01 11:25:12 +0700
message:
  This is patch for bug#17170755: Wrong internal representation of trigger creation timestamp.
  
  The bug relates to wrong storing of timestamp value in the data dictionary (.TRG file).
  Test case was added to guarantee that internal storing format won't change in the future
  without change in the data dictionary format.
  Also minor refactoring was done - repeatable code to calculate timestamp as timeval 
  was moved to dedicated method of class Trigger.
------------------------------------------------------------
revno: 6180 [merge]
committer: Sunanda Menon<sunanda.menon@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-01 04:39:40 +0200
message:
  Upmerge of the 5.6.13 build
    ------------------------------------------------------------
    revno: 3902.258.40 [merge]
    author: sunanda.menon@oracle.com
    committer: Sunanda Menon<sunanda.menon@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-08-01 04:35:01 +0200
    message:
      Merge from mysql-5.6.13-release
        ------------------------------------------------------------
        revno: 3902.263.2
        tags: mysql-5.6.13
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.6.13-release
        timestamp: Wed 2013-07-10 18:02:48 +0200
        message:
          Updated spec file for Bug#17080138
        ------------------------------------------------------------
        revno: 3902.263.1
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.6.13-release
        timestamp: Wed 2013-07-10 16:21:04 +0200
        message:
          Cleaned up spec file to handle advanced to community downgrade
------------------------------------------------------------
revno: 6179 [merge]
committer: Hery Ramilison <hery.ramilison@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-08-01 00:10:46 +0200
message:
  Upmerge of the 5.5.33 build
    ------------------------------------------------------------
    revno: 3902.258.39 [merge]
    committer: Hery Ramilison <hery.ramilison@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-31 23:53:43 +0200
    message:
      Upmerge of the 5.5.33 build
        ------------------------------------------------------------
        revno: 2875.536.17 [merge]
        author: hery.ramilison@oracle.com
        committer: Hery Ramilison <hery.ramilison@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-07-31 23:01:01 +0200
        message:
          Merge from mysql-5.5.33-release
            ------------------------------------------------------------
            revno: 2875.538.3
            tags: mysql-5.5.33
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.33-release
            timestamp: Mon 2013-07-15 13:41:27 +0200
            message:
              Removed random passwords feature for Bugfix#17160741 (not applicable for 5.5.X)
            ------------------------------------------------------------
            revno: 2875.538.2
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.33-release
            timestamp: Wed 2013-07-10 19:14:41 +0200
            message:
              Updated spec file for Bug#17080138
            ------------------------------------------------------------
            revno: 2875.538.1
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.33-release
            timestamp: Tue 2013-07-09 20:35:26 +0200
            message:
              Removed directory  /usr/share/mysql/solaris/postinstall-solaris to resolve build error
------------------------------------------------------------
revno: 6178 [merge]
committer: Joao Gramacho <joao.gramacho@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 18:58:40 +0100
message:
  Bug#16997513 MY_STRTOLL10 ACCEPTING OVERFLOWED UNSIGNED LONG LONG VALUES AS NORMAL ONES
  
  Merge from mysql-5.6 into mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.38 [merge]
    committer: Joao Gramacho <joao.gramacho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-31 18:15:34 +0100
    message:
      Bug#16997513 MY_STRTOLL10 ACCEPTING OVERFLOWED UNSIGNED LONG LONG VALUES AS NORMAL ONES
      
      Merge from mysql-5.5 into mysql-5.6
        ------------------------------------------------------------
        revno: 2875.536.16 [merge]
        committer: Joao Gramacho <joao.gramacho@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-07-31 17:59:06 +0100
        message:
          Bug#16997513 MY_STRTOLL10 ACCEPTING OVERFLOWED UNSIGNED LONG LONG VALUES AS NORMAL ONES
          
          Merge from mysql-5.1 into mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.34
            committer: Joao Gramacho <joao.gramacho@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-07-31 17:54:40 +0100
            message:
              Bug#16997513 MY_STRTOLL10 ACCEPTING OVERFLOWED UNSIGNED LONG LONG VALUES AS NORMAL ONES
              
              Problem:
              =======
              It was detected an incorrect behavior of my_strtoll10 function when 
              converting strings with numbers in the following format:
              "184467440XXXXXXXXXYY"
              
              Where XXXXXXXXX > 737095516 and YY <= 15
              
              Samples of problematic numbers:
              "18446744073709551915"
              "18446744073709552001"
              
              Instead of returning the larger unsigned long long value and setting overflow
              in the returned error code, my_strtoll10 function returns the lower 64-bits 
              of the evaluated number and did not set overflow in the returned error code.
              
              Analysis:
              ========
              Once trying to fix bug 16820156, I've found this bug in the overflow check of
              my_strtoll10 function.
              
              This function, once receiving a string with an integer number larger than
              18446744073709551615 (the larger unsigned long long number) should return the
              larger unsigned long long number and set overflow in the returned error code.
              
              Because of a wrong overflow evaluation, the function didn't catch the
              overflow cases where (i == cutoff) && (j > cutoff2) && (k <= cutoff3). When
              the overflow evaluation fails, the function return the lower 64-bits of the
              evaluated number and do not set overflow in the returned error code.
              
              Fix:
              ===
              Corrected the overflow evaluation in my_strtoll10.
------------------------------------------------------------
revno: 6177 [merge]
committer: Joao Gramacho <joao.gramacho@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 17:42:51 +0100
message:
  Bug#16820156 MASTER_DELAY DOES NOT PERFORM PROPER TYPE CHECKING
  Bug#16960315 ERROR 1729 OVERFILLS BY THE VALUE OF MASTER_DELAY GREATER THAN 2^31
  
  Merge from mysql-5.6 into mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.37
    committer: Joao Gramacho <joao.gramacho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-31 17:25:27 +0100
    message:
      Bug#16820156 MASTER_DELAY DOES NOT PERFORM PROPER TYPE CHECKING
      Bug#16960315 ERROR 1729 OVERFILLS BY THE VALUE OF MASTER_DELAY GREATER THAN 2^31
      
      Problem:
      =======
      The problem happens when users try to set MASTER_DELAY using 
      CHANGE MASTER TO command. There are two different issues
      reported:
      
      1) When the value to set is greater than 2^32 - 1, the server
      will raise an error message stating that the user was trying
      to set an value that exceeds the maximum, but the number shown
      in the message will be other than the specified in the command.
      
      2) When the value to set is greater than 2^64 - 1 and in the
      following format:
      "184467440XXXXXXXXXYY", where XXXXXXXXX > 737095516 and YY <= 15,
      the command is accepted without presenting errors and the value
      assigned is equal to the argument passed minus 2^64.
      
      Analysis:
      ========
      The accepted range of MASTER_DELAY is between 0 and
      MASTER_DELAY_MAX (2^31 - 1).
      
      The MASTER_DELAY_SYM is defined as ulong_num on parser.
      
      Before assigning the MASTER_DELAY, the parser checks if the argument
      informed by the user is greater than MASTER_DELAY_MAX, raising
      error ER_MASTER_DELAY_VALUE_OUT_OF_RANGE if it is the case.
      
      The error message ER_MASTER_DELAY_VALUE_OUT_OF_RANGE receives
      the unaccepted value as an unsigned int value to print the message
      to the user.
      
      The parser accepts any kind of number as ulong_num and will
      compare the passed argument with MASTER_DELAY_MAX correctly, but
      as it is casting the value to unsigned integer when calling my_error,
      only the lower 32 bits of the value are passed to the error print
      function.
      
      The second issue reported above is a bug in the function that
      converts strings to unsigned long long values. When the value passed
      has the pattern mentioned above, the overflow test fails and the lower
      64 bits of the larger value is returned.
      
      Fix:
      ===
      Replaced the cast to unsigned int of the parser variable to a string
      pointer of the current token evaluated by the parser.
      
      Had also to change the parameter type in the error message to string.
      
      A bug was opened to the second issue (Bug 16997513).
      
      @ sql/share/errmsg-utf8.txt
        Changed the type of the invalid argument in the message to string.
        Before the fix, when the value in the argument was greater than 
        2^32 - 1, the value displayed by the message was equal the 
        argument minus 2^32 up to the unsigned log limit of the operating
        system.
      
      @ sql/sql_yacc.yy
        Sending a string pointer of the current token evaluated instead of
        casting the out of range value to unsigned int before sending.
------------------------------------------------------------
revno: 6176
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 21:17:15 +0530
message:
  Bug #17236738 : CAT_FILE FROM MYSQLTEST.CC DOES NOT HANDLE '\R' CORRECTLY
------------------------------------------------------------
revno: 6175 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 19:58:39 +0530
message:
  Bug 17236738 upmerge revert 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.258.36
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-31 19:44:50 +0530
    message:
      Bug #17236738 reverting the changes
------------------------------------------------------------
revno: 6174
committer: Joao Gramacho <joao.gramacho@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 15:17:31 +0100
message:
  BUG#17248770 TAP UNIT TEST PFS_INSTR-OOM IS FAILING
  
  Fixed a minor problem in the test counter.
------------------------------------------------------------
revno: 6173
committer: Tiago Jorge <tiago.jorge@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 12:43:03 +0100
message:
  BUG#16662380 BINLOG_UNSAFE_FULLTEXT_PLUGIN SPORADICALLY FAILED
  
  Problem: 
  
  BINLOG_UNSAFE_FULLTEXT_PLUGIN failed sometimes in PB2
  
  Analysis: 
  
  Test has been deleted in revno 5547 by Shaohua Wang 
  <shaohua.wang@oracle.com> since according to him:
  "Remove binlog_unsafe_fulltext_plugin.test and will add it in WL#6943."
  
  Fix:
  An .opt file was left behind when deleting. Will remove that file
  and send an email to Shaohua Wang asking when he plans to
  get the test back running.
------------------------------------------------------------
revno: 6172 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-31 16:56:07 +0530
message:
  Bug 17236738 upmerge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.258.35
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-31 16:53:28 +0530
    message:
      Bug #17236738 - CAT_FILE FROM MYSQLTEST.CC DOES NOT HANDLE '\\R' CORRECTLY
------------------------------------------------------------
revno: 6171
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-07-30 15:25:59 -0500
message:
  Eliminate recent compiler warnings on Win32 compiles.
  
  include/row0trunc.h
  row/row0trunc.cc
  page/page0zip.cc
    From WL6501 - Use table_id_t instead of ulint for table IDs
    in several functions.
  
  os/os0file.cc
    From WL6501 - New var cur_pos is only used under !WIN32.
    Declare the vars where they are used.
    Also a call to _chsize() expects the size to be a long,
    which is 32 bits on WIN32.
  
  dict/dict0stats.cc
    From rb:2201 - Bug#16504900
    The function vector::at() must receive an unsigned long which is
    32 bytes on Win32.  Typoecast from ib_uint64_t.
------------------------------------------------------------
revno: 6170
committer: Pedro Gomes  <pedro.gomes@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-30 17:33:48 +0100
message:
  Bug #17164074: TABLE_MAP EVENT'S DATA SIZE IS NOT SET WHEM READING IT FROM A PACKET.
  
  Currently, when the table map event is built during execution, its
  data size is calculated and later used when the event is written to
  the binary log. The same does not happen when the event is created
  from a net packet however. In fact when the event is deserialized, its
  fields are set but not its size. This can in the future cause problems
  if we for some reason write this event to a cache or binlog as its
  size will be 0 when requested.
  
  The size is now calculated in both situations to avoid future problems
------------------------------------------------------------
revno: 6169 [merge]
committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
branch nick: mysql-trunk-tryval
timestamp: Tue 2013-07-30 11:22:14 +0530
message:
  Bug#17083851    BACKPORT BUG#11765744 TO 5.1, 5.5 AND 5.6 
        
  Description:
  Original fix Bug#11765744 changed mutex to read write lock
  to avoid multiple recursive lock acquire operation on 
  LOCK_status mutex.  
  On Windows, locking read-write lock recursively is not safe. 
  Slim read-write locks, which MySQL uses if they are supported by
  Windows version, do not support recursion according to their 
  documentation. For our own implementation of read-write lock, 
  which is used in cases when Windows version doesn't support SRW,
  recursive locking of read-write lock can easily lead to deadlock
  if there are concurrent lock requests.
  
  Fix:  
  This patch reverts the previous fix for bug#11765744 that used
  read-write locks. Instead problem of recursive locking for
  LOCK_status mutex is solved by tracking recursion level using 
  counter in THD object and acquiring lock only once when we enter 
  fill_status() function first time. 
    ------------------------------------------------------------
    revno: 3902.258.34 [merge]
    committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
    branch nick: mysql-5.6-try
    timestamp: Tue 2013-07-30 10:10:05 +0530
    message:
      Bug#17083851    BACKPORT BUG#11765744 TO 5.1, 5.5 AND 5.6 
            
      Description:
      Original fix Bug#11765744 changed mutex to read write lock
      to avoid multiple recursive lock acquire operation on 
      LOCK_status mutex.  
      On Windows, locking read-write lock recursively is not safe. 
      Slim read-write locks, which MySQL uses if they are supported by
      Windows version, do not support recursion according to their 
      documentation. For our own implementation of read-write lock, 
      which is used in cases when Windows version doesn't support SRW,
      recursive locking of read-write lock can easily lead to deadlock
      if there are concurrent lock requests.
      
      Fix:  
      This patch reverts the previous fix for bug#11765744 that used
      read-write locks. Instead problem of recursive locking for
      LOCK_status mutex is solved by tracking recursion level using 
      counter in THD object and acquiring lock only once when we enter 
      fill_status() function first time. 
        ------------------------------------------------------------
        revno: 2875.536.15 [merge]
        committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
        branch nick: mysql-5.5-try
        timestamp: Tue 2013-07-30 09:51:14 +0530
        message:
          Bug#17083851    BACKPORT BUG#11765744 TO 5.1, 5.5 AND 5.6 
                
          Description:
          Original fix Bug#11765744 changed mutex to read write lock
          to avoid multiple recursive lock acquire operation on 
          LOCK_status mutex.  
          On Windows, locking read-write lock recursively is not safe. 
          Slim read-write locks, which MySQL uses if they are supported by
          Windows version, do not support recursion according to their 
          documentation. For our own implementation of read-write lock, 
          which is used in cases when Windows version doesn't support SRW,
          recursive locking of read-write lock can easily lead to deadlock
          if there are concurrent lock requests.
                
          Fix:  
          This patch reverts the previous fix for bug#11765744 that used
          read-write locks. Instead problem of recursive locking for
          LOCK_status mutex is solved by tracking recursion level using 
          counter in THD object and acquiring lock only once when we enter 
          fill_status() function first time. 
            ------------------------------------------------------------
            revno: 2661.880.33
            committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
            branch nick: mysql-5.1-try
            timestamp: Tue 2013-07-30 09:44:11 +0530
            message:
              Bug#17083851    BACKPORT BUG#11765744 TO 5.1, 5.5 AND 5.6 
              
              Description:
              Original fix Bug#11765744 changed mutex to read write lock
              to avoid multiple recursive lock acquire operation on 
              LOCK_status mutex.  
              On Windows, locking read-write lock recursively is not safe. 
              Slim read-write locks, which MySQL uses if they are supported by
              Windows version, do not support recursion according to their 
              documentation. For our own implementation of read-write lock, 
              which is used in cases when Windows version doesn't support SRW,
              recursive locking of read-write lock can easily lead to deadlock
              if there are concurrent lock requests.
              
              Fix:  
              This patch reverts the previous fix for bug#11765744 that used
              read-write locks. Instead problem of recursive locking for
              LOCK_status mutex is solved by tracking recursion level using 
              counter in THD object and acquiring lock only once when we enter 
              fill_status() function first time. 
------------------------------------------------------------
revno: 6168 [merge]
committer: Bill Qu <bill.qu@Oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-30 11:39:40 +0800
message:
  Bug #17016017 	HANDLE COMMIT ERROR CAUSED BY BINLOG ROTATION FAILURE
  
  Merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.258.33
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-30 11:33:26 +0800
    message:
      Bug #17016017 	HANDLE COMMIT ERROR CAUSED BY BINLOG ROTATION FAILURE
      
      The commit error caused by binlog rotation failure writes an incident
      into binlog file and interrupts the user session with some concrete
      error messages, which do not mention that the slave server will be
      stopped by the incident event later.
      
      Write an error to log when encountering binlog rotation failure.
      So that user might have a chance to be alerted and explore
      incident details before its slave server would stop.
------------------------------------------------------------
revno: 6167 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-30 10:21:49 +0800
message:
  Bug#17160270 LOG_SYS->OLD_LSN AND OLD_BUF_FREE WAS COMPILED EVEN
  UNIV_LOG_DEBUG IS DISABLED
  
  Merged from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.258.32
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-30 10:12:23 +0800
    message:
      Bug#17160270 LOG_SYS->OLD_LSN AND OLD_BUF_FREE WAS COMPILED EVEN
      UNIV_LOG_DEBUG IS DISABLED
      
      Approved by Jimmy on IM.
      
      This patch included the debugs members to debug macro.
------------------------------------------------------------
revno: 6166 [merge]
committer: Bill Qu <bill.qu@Oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-30 08:55:34 +0800
message:
  Bug #16579083  SESSION ATTACH ERROR WILL CAUSE INCONSISTENCY BETWEEN MASTER AND SLAVE
  
  Merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.258.31
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-30 08:13:30 +0800
    message:
      Bug #16579083  SESSION ATTACH ERROR WILL CAUSE INCONSISTENCY BETWEEN MASTER AND SLAVE
      
      In group commit, the session attach error will cause the rollback
      of the transaction, but the transaction is binlogged and will be
      replicated to slave at that time. Which will cause inconsistency
      between master and slave finally.
      
      To fix the problem, we attach a POSIX thread to a session in
      ten tries when encountering 'out of memory' error, in case
      the 'out of memory' is temporary. Terminate the server after
      failed to attach the POSIX thread to the session in ten tries.
      Then the consistency between master and slave can be guaranteed
      after mysql server restarts, as the transaction is binlogged
      at that phase and the transaction is committed during recovery.
      To a statement with non-transactional table, we don't guarantee
      the consistency after server restarts, as it is not committed
      during recovery.
------------------------------------------------------------
revno: 6165 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-29 14:58:32 +0530
message:
  Bug#13417564 SKIP SLEEP IN SRV_MASTER_THREAD WHEN 
               SHUTDOWN IS IN PROGRESS 
  
  [ Null Merge from mysql-5.6]
    ------------------------------------------------------------
    revno: 3902.258.30 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-29 14:48:44 +0530
    message:
      Bug#13417564 SKIP SLEEP IN SRV_MASTER_THREAD WHEN 
                   SHUTDOWN IS IN PROGRESS 
      
      [ Null Merge from mysql-5.5]
        ------------------------------------------------------------
        revno: 2875.536.14 [merge]
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-07-29 14:46:16 +0530
        message:
          Bug#13417564 SKIP SLEEP IN SRV_MASTER_THREAD WHEN 
                       SHUTDOWN IS IN PROGRESS 
          
          [ Null Merge from mysql-5.1]
            ------------------------------------------------------------
            revno: 2661.880.32
            committer: Aditya A <aditya.a@oracle.com>
            branch nick: mysql-5.1
            timestamp: Mon 2013-07-29 14:45:06 +0530
            message:
              Bug#13417564 SKIP SLEEP IN SRV_MASTER_THREAD WHEN 
                           SHUTDOWN IS IN PROGRESS 
              
              PROBLEM
              -------
               In the background thread srv_master_thread() we have a 
               a one second delay loop which will continuously monitor
               server activity .If the server is inactive (with out any
               user activity) or in a shutdown state we do some background
               activity like flushing the changes.In the current code
               we are not checking if server is in shutdown state before
               sleeping for one second.
              
              FIX
              ---
              If server is in shutdown state ,then dont go to one second
              sleep. 
------------------------------------------------------------
revno: 6164
committer: shipjain@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-07-29 08:24:28 +0200
message:
  mtr file modified for buffer size
------------------------------------------------------------
revno: 6163 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-29 11:46:31 +0530
message:
  Bug #11766851 QUERYING I_S.PARTITIONS CHANGES THE CARDINALITY OF THE
                PARTITIONS.
  
  [ Merge from 5.6 ]
    ------------------------------------------------------------
    revno: 3902.258.29 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-29 11:42:47 +0530
    message:
      Bug #11766851 QUERYING I_S.PARTITIONS CHANGES THE CARDINALITY OF THE
                    PARTITIONS.
      
      [ Merge from 5.5 ]
        ------------------------------------------------------------
        revno: 2875.536.13
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-07-29 11:41:13 +0530
        message:
          Bug #11766851 QUERYING I_S.PARTITIONS CHANGES THE CARDINALITY OF THE
                        PARTITIONS.
          
          ANALYSIS
          --------
          Whenever we query I_S.partitions,
          ha_partition::get_dynamic_partition_info()
          is called which resets the cardinality 
          according to the number of rows in last
          partition.
          
          Fix
          ---
          When we call get_dynamic_partition_info() 
          avoid passing the flag HA_STATUS_CONST
          to info() since HA_STATUS_CONST should 
          ideally not be called for per partition.
          
          [Approved by mattiasj rb#2830 ]
------------------------------------------------------------
revno: 6162 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-07-27 22:45:06 +0530
message:
  BUG#16290902 DROP TEMP TABLE IF EXISTS CAN CAUSE POINT
  IN TIME RECOVERY FAILURE ON SLAVES
  
  Merging fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.258.28 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sat 2013-07-27 18:42:21 +0530
    message:
      BUG#16290902 DROP TEMP TABLE IF EXISTS CAN CAUSE POINT
      IN TIME RECOVERY FAILURE ON SLAVES
      
      Merging fix from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.536.12
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Sat 2013-07-27 17:35:02 +0530
        message:
          BUG#16290902 DROP TEMP TABLE IF EXISTS CAN CAUSE POINT
          IN TIME RECOVERY FAILURE ON SLAVES
          
          Problem:
          DROP TEMP TABLE IF EXISTS commands can cause point
          in time recovery (re-applying binlog) failures.
          
          Analyses:
          In RBR, 'DROP TEMPORARY TABLE' commands are
          always binlogged by adding 'IF EXISTS' clauses.
          Also, the slave SQL thread will not check replicate.* filter
          rules for "DROP TEMPORARY TABLE IF EXISTS" queries.
          If log-slave-updates is enabled on slave, these queries
          will be binlogged in the format of "USE `db`;
          DROP TEMPORARY TABLE IF EXISTS `t1`;" irrespective
          of filtering rules and irrespective of the `db` existence.
          When users try to recover slave from it's own binlog,
          use `db` command might fail if `db` is not present on slave.
          
          Fix:
          At the time of writing the 'DROP TEMPORARY TABLE
          IF EXISTS' query into the binlog, 'use `db`' will not be
          present and the table name in the query will be a fully
          qualified table name.
          Eg:
          'USE `db`; DROP TEMPORARY TABLE IF EXISTS `t1`;'
          will be logged as
          'DROP TEMPORARY TABLE IF EXISTS `db`.`t1`;'.
------------------------------------------------------------
revno: 6161 [merge]
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-26 15:27:44 +0100
message:
  BUG#16533802: START SLAVE FAILS WITH TABLE REPOSITORY AND AUTOCOMMIT = 0
  
  Merge from mysql-5.6 into mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.27
    committer: Nuno Carvalho <nuno.carvalho@oracle.com>
    branch nick: mysql-5.6-bf
    timestamp: Fri 2013-07-26 15:24:28 +0100
    message:
      BUG#16533802: START SLAVE FAILS WITH TABLE REPOSITORY AND AUTOCOMMIT = 0
      
      When a slave server was started with AUTOCOMMIT=0 and master or
      relay info persisted on tables, the START SLAVE command failed due
      to lock timeouts accessing the info tables. The problem also
      happened when the connection from which START SLAVE was executed had
      autocommit mode equal to 0.
      
      The problem happened because the Rpl_info_table::do_check_info()
      methods, used on slave internal structures initialization, didn't
      finish the transaction started to access info tables. Since tables
      were still locked by the access from do_check_info(), the following
      initialization procedures failed to acquire the update access lock
      to those tables, which in turn caused the START SLAVE command to
      fail.
      
      To fix this incorrect behaviour, we set autocommit= 1 on replication
      threads to release info table locks, allowing the subsequent access
      to tables.
      When info tables are used and autocommit= 0 we also force a new
      transaction to start and commit on global_init_info() to avoid
      table access deadlocks when START SLAVE is executed after RESET
      SLAVE.
      We also need to force a commit on Rpl_info_table::do_clean_info() to
      avoid errors on RESET SLAVE
      (on Rpl_info_factory::reset_workers(Relay_log_info *)) when MTS is
      enabled.
------------------------------------------------------------
revno: 6160 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-07-26 20:59:48 +0800
message:
  Analysis:
  A field in format B or beyond is not expected to re-read its prefix stored
  externally when it has already stored the prefix in memory. Or else the result
  would be local prefix appended by external prefix which must be wrong.
  
  Solution:
  In row_ext_cache_fill where the external stored value will be read, if the
  file format is barracuda or beyond and the prefix is already in memory,
  do a memcpy to copy the in memory prefix to ext.
  
  rb#2921 Approved by Jimmy
    ------------------------------------------------------------
    revno: 3902.258.26
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6-16569640
    timestamp: Fri 2013-07-26 20:53:40 +0800
    message:
      Analysis:
      A field in format B or beyond is not expected to re-read its prefix stored
      externally when it has already stored the prefix in memory. Or else the result
      would be local prefix appended by external prefix which must be wrong.
      
      Solution:
      In row_ext_cache_fill where the external stored value will be read, if the
      file format is barracuda or beyond and the prefix is already in memory,
      do a memcpy to copy the in memory prefix to ext.
      
      rb#2921 Approved by Jimmy
------------------------------------------------------------
revno: 6159 [merge]
committer: Alexander Nozdrin <alexander.nozdrin@oracle.com>
branch nick: trunk-12818811
timestamp: Fri 2013-07-26 14:00:26 +0400
message:
  Manual merge from 5.6.
    ------------------------------------------------------------
    revno: 3902.258.25
    committer: Alexander Nozdrin <alexander.nozdrin@oracle.com>
    branch nick: 5.6-12818811
    timestamp: Fri 2013-07-26 13:29:35 +0400
    message:
      Patch for Bug#12818811: PREPARED STATEMENT RETURNS WRONG COLUMN NULLABILITY.
      
      The user-visible problem was that meta-data returned by a prepared
      SELECT-statement with UNION had incorrect column nullability flag if
      the SELECT-statements had outer joins. Some columns could be marked as NOT NULL,
      while they actually might contain (and did contain) NULL values.
      
      The technical problem was that LEX::select_lex::item_list was used
      to determine column nullability instead of LEX::unit::types.
      Using of LEX::unit::types in this case became possible after some refactoring
      done in 5.6.
      
      The fix is to use LEX::unit::types.
------------------------------------------------------------
revno: 6158
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-fix
timestamp: Fri 2013-07-26 11:11:40 +0200
message:
  WL#3249 PERFORMANCE SCHEMA, Instrument memory usage
  
  Simplified mysys link dependencies, for MAC OSX.
------------------------------------------------------------
revno: 6157
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-fix
timestamp: Fri 2013-07-26 08:14:17 +0200
message:
  WL#3249 PERFORMANCE SCHEMA, Instrument memory usage
  
  Merge cleanup.
------------------------------------------------------------
revno: 6156 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-26 09:52:28 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.258.24 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-07-25 16:20:56 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.536.11 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-07-25 15:31:06 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.31
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-07-25 14:53:23 +0530
            message:
              Bug #17076737 DUPLICATE CONSTRAINTS DISPLAYED WHEN NAME INCLUDES "_IBFK_"
              
              Problem:
              
              When the user specified foreign key name contains "_ibfk_", InnoDB wrongly
              tries to rename it. 
              
              Solution:
              
              When a table is renamed, all its associated foreign keys will also be renamed,
              only if the foreign key names are automatically generated.  If the foreign key
              names are given by the user, even if it has _ibfk_ in it, it must not be
              renamed.
              
              rb#2935 approved by Jimmy, Krunal and Satya
------------------------------------------------------------
revno: 6155
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-wl3249-push
timestamp: Thu 2013-07-25 21:33:10 +0200
message:
  WL#3249 PERFORMANCE SCHEMA, Instrument memory usage
------------------------------------------------------------
revno: 6154 [merge]
committer: Luis Soares <luis.soares@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-25 10:43:36 +0100
message:
  BUG#16662771
  
  Automerged bug branch into latest mysql-trunk.
    ------------------------------------------------------------
    revno: 6148.1.1
    committer: Luis Soares <luis.soares@oracle.com>
    branch nick: mysql-trunk
    timestamp: Wed 2013-07-24 23:18:34 +0100
    message:
      BUG#16662771: MULTIPLE RPL TESTS FAILING ON WINDOWS DUE TO CRASH AT PROTOCOL::STORE()
      
      The problem manifests itself when a user thread is issuing a SHOW
      SLAVE STATUS while at the same time the slave IO thread is being
      terminated because of some error (in the case analyzed, the error was
      because the IO thread had received a packet bigger than
      slave_max_allowed_packet).
      
      Looking at handle_slave_io, specifically at the part that handles
      errors, one can find that the THD structure is deleted before
      mi->info_thd is set to NULL. That is not an issue in itself, but the
      fact that the deletion happens while it is not guarded by
      mi->info_thd_lock makes it a problem. As a consequence, a race for the
      THD memory area, between the user thread and the IO thread that is
      shutting down and cleaning its data structures, can happen. To be
      precise, if the user thread accesses THD memory through mi->info_thd
      and before that the IO thread frees the memory but has not yet set the
      info_thd to NULL, then the server can crash.
      
      To fix this problem the deletion of the data structure while the IO
      thread is shutting down is moved to a later stage of this process,
      i.e., after setting mi->info_thd to NULL.
------------------------------------------------------------
revno: 6153
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-25 12:11:12 +0530
message:
  BUG#16633880 - VALGRIND FAILURE IN
                 THREAD_POOL.THREAD_POOL_KILL_COVERAGE
  PROBLEM AND FIX:
  The test thread_pool.thread_pool_kill_coverage fails under valgrind
  most of time indicating invalid THD read when it attempts to backtrace
  as per the PB2 logs. As per the analysis done, the reason for failure
  appear to be timeout. Under timeout, the mtr sends a kill signal to
  to the mysqld. As part of the sequence of the kill signal handling
  code, the handle_fatal_signal method is called. In the handle_fatal
  _signal, current_thd global variable is read. This gets the THR_THD
  and get the thd pointer associated with the connection/thread. The
  thd pointer may point to a freed THD and this causes an invalid read
  error to be issued by valgrind. In terms of code related to
  thread pool whenever THD is about to be freed, the thd pointer stored
  in THR_THD need to be set to NULL so that the handle_signal_fatal doesn't
  read a invalid thd and uses it. The fix sets the THR_THD key value
  associated with the thread to NULL before freeing the THD for thread
  pool related threads that handle connection and set THR_THD to NULL
  in no_threads_end in scheduler.cc as well.
    In addition, the test case timeout issue is due to the fact that the
  test case thread_pool.thread_pool_kill_coverage includes kill_coverage.inc
  and in kill_coverage.inc the KILL QUERY/KILL is executed in a loop
  100 times. The kill_coverage.inc is included 3 times in the test cases
  and thus a total of 600 times KILL QUERY/KILL is being called. In valgrind,
  every memory access is shadowed and under heavy load  when run under valgrind,
  the test case eventually times out. Fix the test case to call KILL QUERY/KILL
  twice which covers all code coverage scenarios.
  NOTE TO REVIEWER: current_thd() calls pthread_getspecific which is not guarnteed to 
  be asynchronous signal safe by POSIX.
  Calling current_thd in the signal handler itself is not signal safe and hence is
  incorrect and may need to be removed in which some thd related variables can't
  be shown.(Related link:
  https://www.securecoding.cert.org/confluence/display/seccode/SIG30-C.+Call+only+asynchronous-safe+functions+within+signal+handlers)
  Moreever pthread_getspecific is not guaranteed to return NULL if 
  specific thread key is not associated with. So this bug won't address these 
  scenarios as the prime issue is timeout of the testcase.
------------------------------------------------------------
revno: 6152 [merge]
committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
branch nick: trunk
timestamp: Wed 2013-07-24 17:41:34 +0530
message:
  Bug#16865959 - PLEASE BACKPORT BUG 14749800.
  
  NULL merge from 5.6 to TRUNK
    ------------------------------------------------------------
    revno: 3902.258.23 [merge]
    committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
    branch nick: mysql_5_6
    timestamp: Wed 2013-07-24 17:37:08 +0530
    message:
      Bug#16865959 - PLEASE BACKPORT BUG 14749800.
      
      Merging from 5.5 to 5.6.
      
      In 5.6 all the changes done for bug#14749800 is merged.
        ------------------------------------------------------------
        revno: 2875.536.10
        committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
        branch nick: mysql_5_5
        timestamp: Wed 2013-07-24 15:44:41 +0530
        message:
          Bug#16865959 - PLEASE BACKPORT BUG 14749800.
          
          Since log_throttle is not available in 5.5. Logging of
          error message for failure of thread to create new connection
          in "create_thread_to_handle_connection" is not backported.
          
          Since, function "my_plugin_log_message" is not available in 
          5.5 version and since there is incompatibility between
          sql_print_XXX function compiled with g++ and alog files with
          gcc to use sql_print_error, changes related to audit log
          plugin is not backported.
------------------------------------------------------------
revno: 6151 [merge]
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: trunk
timestamp: Wed 2013-07-24 16:13:22 +0530
message:
  Merge of patch for Bug#17170207 from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.258.22
    committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
    branch nick: B17170207-5.6
    timestamp: Wed 2013-07-24 16:07:26 +0530
    message:
      Bug#17170207 AES 256 NOT WORKING CORRECTLY ON MYSQL 5.6.X
      
      The acceptable size of key used in AES encryption
      in MySQL are 128, 192 or 256. This is controlled by
      AES_KEY_LENGTH macro. However, the logic for 128-bit
      key (default) got hardcoded & hence, AES failed to
      work properly when built with 192/256.
      
      OpenSSL: Added macros to generate the AES-type function
               name based on the value of AES_KEY_LENGTH.
      Yassl  : Fixed the key length being passed to SetKey()
               functions.
      
      Since automated testing for different build combinations
      if not feasible, verified the patch by running the existing
      aes tests on separate [128|192|256] OpenSSL/Yassl builds.
------------------------------------------------------------
revno: 6150 [merge]
committer: Rafal Somla <rafal.somla@oracle.com>
branch nick: mysql-trunk-wl6226
timestamp: Wed 2013-07-24 12:04:02 +0200
message:
  Merge of WL#6226 from local branch.
    ------------------------------------------------------------
    revno: 5107.34.1
    committer: Rafal Somla <rafal.somla@oracle.com>
    branch nick: wl6226
    timestamp: Thu 2012-11-29 10:09:18 +0100
    message:
      WL#6226 - Protocol tracing - client side
      
      This patch defines a new type of client-side plugins,
      MYSQL_CLIENT_TRACE_PLUGIN, and an infrastructure for sending
      to such a plugin, if one is loaded into libmysql, various
      trace events related to client-server communication.
      
      Trace plugins are defined in include/mysql/plugin_trace.h.
      This file also contains a list of available trace events and
      a list of protocol stages which are reported to a plugin
      so that it can correctly interpret these events.
      
      Trace events are generated using trace hooks inside libmysql
      code - these are macros MYSQL_TRACE() and MYSQL_TRACE_STAGE()
      defined in libmysql/mysql_trace.h. The hooks are added
      in appropriate places in libmysql/libmysql.c and
      sql-common/client.c. Code used by the tracing infrastructure
      is in libmysql/mysql_trace.c. Plugin loading code in
      sql-common/client_plugin.c is modified to correctly recognize
      trace plugins and arrange for sending trace events to them.
      
      File libmysql/test_trace_plugin.cc contains implementation
      of a test trace plugin which can be used to test
      the infrastructure. This plugin is built into libmysql
      (and pre-loaded) if WITH_TEST_TRACE_PLUGIN build option was
      selected during build configuration. This option is disabled
      by default.
------------------------------------------------------------
revno: 6149 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Wed 2013-07-24 10:33:22 +0200
message:
  Merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.21
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Wed 2013-07-24 10:31:09 +0200
    message:
      Test cleanup
------------------------------------------------------------
revno: 6148 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Wed 2013-07-24 10:12:03 +0200
message:
  Merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.20 [merge]
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Wed 2013-07-24 10:05:36 +0200
    message:
      Bug#17156507 SUCCESSFUL CONNECTION ATTEMPT DOESN'T RESET THE SUM_CONNECT_ERRORS COUNTER
      
      Merge to mysql-5.6
        ------------------------------------------------------------
        revno: 3902.262.2 [merge]
        committer: Marc Alff <marc.alff@oracle.com>
        branch nick: mysql-5.6-bug17156507
        timestamp: Wed 2013-07-24 09:53:13 +0200
        message:
          Local merge
        ------------------------------------------------------------
        revno: 3902.262.1
        committer: Marc Alff <marc.alff@oracle.com>
        branch nick: mysql-5.6-bug17156507
        timestamp: Tue 2013-07-23 15:08:32 +0200
        message:
          Bug#17156507 SUCCESSFUL CONNECTION ATTEMPT DOESN'T RESET THE SUM_CONNECT_ERRORS COUNTER
          
          Before this fix, a successful connection failed to reset the per IP address counter
          used to count successive connection failures, that can possibly cause a host to be blocked,
          when reaching max_connect_errors.
          
          This counter is reset by function reset_host_connect_errors().
          This function is called only when connect_errors is non zero,
          as a performance optimization, to avoid locking the host cache for nothing.
          
          The problem was that the connect_error counter was not returned by ip_to_hostname(),
          so that reset_host_connect_errors() was never called for successful connections.
          
          A related minor bug was fixed also: the comparison with max_connect_error was off by one,
          the comparison should use greater or equal instead of strictly greater.
------------------------------------------------------------
revno: 6147 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-24 09:19:26 +0800
message:
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.19
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-24 09:17:27 +0800
    message:
      BUG#17161372 - INNODB - FULLTEXT NOT WORKING 
      
      Analysis:
      The root cause is that innodb parser error occurs when parsing the database name.
      we assume database name starts by letter, not digit.
      
      Solution:
      Quote fts internal table name with double quote.
      
      rb://2948 approved by Jimmy Yang.
------------------------------------------------------------
revno: 6146
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Wed 2013-07-24 04:13:27 +1000
message:
  Minor code cleanup.
------------------------------------------------------------
revno: 6145 [merge]
committer: Luis Soares <luis.soares@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-23 14:11:54 +0100
message:
  BUG#17160671
  
  Automerged mysql-5.6 into latest mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.258.18 [merge]
    committer: Luis Soares <luis.soares@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-23 14:10:26 +0100
    message:
      BUG#17160671
      
      Automerged bug branch into latest mysql-5.6.
        ------------------------------------------------------------
        revno: 3902.261.1
        committer: Luis Soares <luis.soares@oracle.com>
        branch nick: mysql-5.6
        timestamp: Tue 2013-07-23 09:39:41 +0100
        message:
          BUG#17160671: SLAVE_PARALLEL_WORKERS INCOMPATIBLE WITH RELAY_LOG_INFO_FILE
          
          When setting relay-log-info-file and slave-parallel-workers > 0, then
          the slave will use the value set through relay-log-info-file to create
          each worker thread relay-log.info file. However, currently the slave
          is concatenating the string "worker-" with the contents of
          relay-log-info-file, regardless whether it is a full path or not.
          
          This patch fixes the problem by extracting the directory part of the
          value set for relay-log-info-file and uses it as a prefix for the
          string "worker-". Then the part of the value that is not a directory
          is used as a prefix for naming the worker relay-log.info file:
          
          dirpart(relay-log-info-file)+"worker-"+namepart(relay-log-info-file)
          
          If dirpart(relay-log-info-file) is empty, then the worker info files
          will be created in the the datadir.
------------------------------------------------------------
revno: 6144 [merge]
committer: Astha Pareek <astha.pareek@oracle.com>
branch nick: mysql-trunk-b12535301
timestamp: Tue 2013-07-23 18:29:41 +0530
message:
  BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5
  
  upmerge mysql-5.6->mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.17 [merge]
    committer: Astha Pareek <astha.pareek@oracle.com>
    branch nick: mysql-5.6-b12535301
    timestamp: Tue 2013-07-23 18:26:30 +0530
    message:
      BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5
      
      upmerge 5.5->5.6
        ------------------------------------------------------------
        revno: 2875.536.9 [merge]
        committer: Astha Pareek <astha.pareek@oracle.com>
        branch nick: mysql-5.5-b12535301
        timestamp: Tue 2013-07-23 18:18:19 +0530
        message:
          BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5
          
          Problem:
          sys_vars.rpl_init_slave_func test was failing sporadically 
          on 5.5+.
          
          Fix:
          Added assert condition after wait for checks.
          Recorded test and enabled it.
            ------------------------------------------------------------
            revno: 2661.880.30
            committer: Astha Pareek <astha.pareek@oracle.com>
            branch nick: mysql-5.1-b12535301
            timestamp: Tue 2013-07-23 18:13:43 +0530
            message:
              BUG#16295518 - SYS_VARS.RPL_INIT_SLAVE_FUNC IS FAILING ON MYSQL-5.1 
              BUG#12535301- SYS_VARS.RPL_INIT_SLAVE_FUNC MISMATCHES IN DAILY-5.5 
              
              Problem:
              sys_vars.rpl_init_slave_func test was not recorded after
              the last edit. It was disabled on 5.1 after seeing failures
              due to the above reason.
              No old failures as this suite never ran with pb2 on 5.1
              
              Fix:
              Added assert condition after wait for checks.
              Recorded test and enabled it.
------------------------------------------------------------
revno: 6143 [merge]
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql-trunk_16914535
timestamp: Tue 2013-07-23 14:20:04 +0530
message:
  BUG#16914535 - MYSQLBINLOG REWRITE-DB SUPPRESSES USE STATEMENT
        
  Problem: The mysqlbinlog --rewrite-db="from->to" suppresses the USE db; 
           statements, even for databases that are not mentioned in the option.
           The problem was due to the fact that on using the mysqlbinlog with
           the rewrite-db option the option_rewrite_set was set to true and
           so all the use '<database>' was getting suppressed.
        
  Fix: Added a check for checking whether we need to skip the use '<database>'
       logging or not based on whether the database in use is mentioned in the
       parameter to the rewrite-db option.
    ------------------------------------------------------------
    revno: 6134.1.1 [merge]
    committer: Manish Kumar<manish.4.kumar@oracle.com>
    branch nick: mysql-trunk_bug16914535
    timestamp: Thu 2013-07-18 13:20:29 +0530
    message:
      BUG#16914535 - MYSQLBINLOG REWRITE-DB SUPPRESSES USE STATEMENT
      
      Problem: The mysqlbinlog --rewrite-db="from->to" suppresses the USE db; 
               statements, even for databases that are not mentioned in the option.
               The problem was due to the fact that on using the mysqlbinlog with
               the rewrite-db option the option_rewrite_set was set to true and
               so all the use '<database>' was getting suppressed.
      
      Fix: Added a check for checking whether we need to skip the use '<database>'
           logging or not based on whether the database in use is mentioned in the
           parameter to the rewrite-db option.
        ------------------------------------------------------------
        revno: 6112.1.1
        committer: Manish Kumar<manish.4.kumar@oracle.com>
        branch nick: mysql-trunk_16914535
        timestamp: Wed 2013-07-10 19:44:43 +0530
        message:
          BUG#16914535 - MYSQLBINLOG REWRITE-DB SUPPRESSES USE STATEMENT
          
          Problem: The mysqlbinlog --rewrite-db="from->to" suppresses the USE db; 
                   statements, even for databases that are not mentioned in the option.
                   The problem was due to the fact that on using the mysqlbinlog with
                   the rewrite-db option the option_rewrite_set was set to true and
                   so all the use '<database>' was getting suppressed.
          
          Fix: Added a check for checking whether we need to skip the use '<database>'
               logging or not based on whether the database in use is mentioned in the
               parameter to the rewrite-db option.
------------------------------------------------------------
revno: 6142 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-23 12:20:17 +0530
message:
  Merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.258.16 [merge]
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-23 12:17:25 +0530
    message:
      Merge from 5.5 to 5.6.
        ------------------------------------------------------------
        revno: 2875.536.8
        committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-07-23 12:15:57 +0530
        message:
          BUG#16959022 - THREAD_POOL.THREAD_POOL_CONNECTION_ABORT_STATS
                         FAIL ON PB2 SOMETIMES.
          DESCRIPTION AND FIX:
          MTR test thread_pool.thread_pool_connection_abort_stats fail
          on PB2 sometimes. The is caused because in THD::awake if the
          connection is not processing any query, thd->killed is not set.
          This will cause a race issue causing status variables like
          aborted connects not to be incremented and allowing concurrent
          kill to happen on the same thread id.
          The fix is to set the KILLED flag if the connection is being
          killed or the connection is processing a query. The killed flag
          is not set if the connection is idle. Also synchronize the test
          before querying for the Aborted_clients status variable as
          connection kill happens asynchronously. 
------------------------------------------------------------
revno: 6141 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-23 12:07:05 +0530
message:
  Null merge 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.258.15 [merge]
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-23 12:04:43 +0530
    message:
      Null merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.536.7
        committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-07-23 12:03:00 +0530
        message:
          BUG#16959022 - THREAD_POOL.THREAD_POOL_CONNECTION_ABORT_STATS FAIL
                         ON PB2 SOMETIMES.
          Fix file id issues before original commit.
        ------------------------------------------------------------
        revno: 2875.536.6
        committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-07-23 11:59:38 +0530
        message:
          Fix file id issue
------------------------------------------------------------
revno: 6140 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-23 11:24:58 +0530
message:
  Bug#16959022 - THREAD_POOL.THREAD_POOL_CONNECTION_ABORT_STATS FAIL 
                 ON PB2 SOMETIMES.
  Null merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.258.14
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-23 11:21:18 +0530
    message:
      Bug#16959022 - THREAD_POOL.THREAD_POOL_CONNECTION_ABORT_STATS FAIL 
                     ON PB2 SOMETIMES.
      Fix file id issues before committing the original patch.
    ------------------------------------------------------------
    revno: 3902.258.13
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-23 11:15:32 +0530
    message:
      (no message)
------------------------------------------------------------
revno: 6139
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-review
timestamp: Mon 2013-07-22 13:08:04 +0200
message:
  Bug#17030235 GET RID OF DYNAMIC_ARRAY IN THE OPTIMIZER TRACE CODE
  
  Post-push fix of unit test: regexp on windows does not handle "()" in death test.
------------------------------------------------------------
revno: 6138
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-22 12:35:32 +0800
message:
  BUG#16662990 - I_INNODB.INNODB_BUG16097753 FAILING SPORADICALLY ON WINDOWS
  
  Analysis:
  The root cause is "end_utime_of_query" and "utime_after_lock" could be equal
  in microsecond when long_query_time is zero.
  
  Solution:
  Sleep 1 millisecond when waking up from lock wait using DBUG_EXECUTE_IF.
  
  rb://2926 approved by Jimmy Yang.
------------------------------------------------------------
revno: 6137
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-dynarray
timestamp: Fri 2013-07-19 11:21:24 +0200
message:
  Bug#17030235 GET RID OF DYNAMIC_ARRAY IN THE OPTIMIZER TRACE CODE
  
  Use Prealloced_array rather than Dynamic_array
  Extend Prealloced_array with necessary new member functions.
------------------------------------------------------------
revno: 6136
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: trunk
timestamp: Fri 2013-07-19 16:03:33 +0530
message:
  --Fixed the sporadic failure of innodb-wl6045-1.test in pb2.
------------------------------------------------------------
revno: 6135 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Fri 2013-07-19 10:41:18 +0200
message:
  Merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.12
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-bug17084615
    timestamp: Fri 2013-07-19 10:29:00 +0200
    message:
      Bug#17084615 CRASH, MANY TRUNCATE PFS TABLE VERSUS MANY CONNECT,DISCONNECT 
      
      Before this fix, executing
        TRUNCATE TABLE performance_schema.accounts;
      could crash the server under load.
      
      The root cause is a race condition between:
      - the TRUNCATE statement
      - a thread disconnecting.
      
      The reason for the race is as follows:
      
      TRUNCATE on a performance schema table resets the statistics,
      and aggregates statistics for lower aggregation levels.
      For example, a truncate on accounts aggregates all threads stats.
      
      At the same time, a thread disconnecting also aggregate the thread statistics
      to the next parent, before destroying the thread instrumentation.
      
      Concurrent execution of both code path can causes crashes,
      because pointers to the parent of an object can be reset to null,
      while used concurrently.
      
      For example in the crash found, PFS_thread::m_account, the pointer to the parent account,
      is set to null when disconnecting a thread, which causes the code in truncate
      to crash while attempting to aggregate the thread stats to the parent account.
      
      For example, in function aggregate_thread_waits(),
      using the thread->m_account pointer is:
      - safe when the code has ownership of the object,
        as when a thread disconnects
      - unsafe when aggregating statistics of another thread,
        as when executing a TRUNCATE.
      
      The solution is to never access thread->m_account directly,
      but require the caller to sanitize the pointer when necessary.
      
      With this fix, aggregate_thread_waits() now takes the parent account
      as input parameter, explicitely.
      
      When executing a thread disconnect, the code owns the object,
      and the call is simply:
        aggregate_thread_waits(pfs, pfs->m_account, ...);
      
      When executing a TRUNCATE, the code does not own the object,
      and the call is:
        PFS_account *safe_account= sanitize_account(pfs->m_account);
        aggregate_thread_waits(pfs, safe_account, ...);
      
      Because the pointer is sanitized, is it guaranteed to:
      - either be NULL, or be valid.
      - not change spuriously during the code execution
      
      The fix changes every aggregation where a parent can change spuriously,
      the code change follows the same mechanics.
------------------------------------------------------------
revno: 6134 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Thu 2013-07-18 09:21:06 +0200
message:
  Null merge
    ------------------------------------------------------------
    revno: 3902.258.11
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-bug17164720
    timestamp: Thu 2013-07-18 09:20:00 +0200
    message:
      Bug#17164720 ASSERT IN READ_TOKEN , STORAGE/PERFSCHEMA/PFS_DIGEST.H
      
      Before this fix,
        SELECT * from performance_schema.events_statements_current
      could cause an assertion failure when computing the DIGEST / DIGEST TEXT columns.
      
      The root cause is a race condition, that happen under load.
      The thread computing the digest reads data from a buffer,
      which is also conccurently updated when the target session is executing a statement.
      
      The fix sanitizes data when reading from the digest storage buffer,
      and when data that does not fit the expected format is found,
      a NULL digest and digest text is displayed.
------------------------------------------------------------
revno: 6133 [merge]
committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
branch nick: mysql-trunk-15844882
timestamp: Thu 2013-07-18 11:51:38 +0530
message:
  BUG#15844882: MYSQLDUMP FROM 5.5 FAILS WITH AN ERROR WHEN TRYING
                TO DUMP DATA FROM MYSQL-5.6
  
  Merge from mysql-5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.258.10 [merge]
    committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
    branch nick: mysql-5.6-15844882
    timestamp: Thu 2013-07-18 11:48:52 +0530
    message:
      BUG#15844882: MYSQLDUMP FROM 5.5 FAILS WITH AN ERROR WHEN TRYING
                    TO DUMP DATA FROM MYSQL-5.6
      
      Null Merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.536.5 [merge]
        committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
        branch nick: mysql-5.5-15844882
        timestamp: Thu 2013-07-18 11:44:00 +0530
        message:
          BUG#15844882: MYSQLDUMP FROM 5.5 FAILS WITH AN ERROR WHEN TRYING
                        TO DUMP DATA FROM MYSQL-5.6 
          
          Merge from mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.880.29
            committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
            branch nick: mysql-5.1-5844882
            timestamp: Thu 2013-07-18 11:40:08 +0530
            message:
              BUG#15844882: MYSQLDUMP FROM 5.5 FAILS WITH AN ERROR WHEN TRYING
                            TO DUMP DATA FROM MYSQL-5.6
              
              Analysis
              --------
              Dumping mysql-5.6 data using mysql-5.1/mysql-5.5 'myqldump'
              utility fails with a syntax error.
              
              Server system variable 'sql_quote_show_create' which quotes the
              identifiers is set in the mysqldump utility. The mysldump utility
              of mysql-5.1/mysql-5.5 uses deprecated syntax 'SET OPTION' to set
              the 'sql_quote_show_create' option. The support for the syntax is
              removed in mysql-5.6. Hence syntax error is reported while taking
              the dump.
              
              Fix:
              ---
              Changed the 'mysqldump' code to use the syntax
              'SET SQL_QUOTE_SHOW_CREATE' to set the 'sql_quote_show_create'
              option. That syntax is supported on mysql-5.1, mysql-5.5 and
              mysql-5.6.
              
              NOTE: I have not added an mtr test case since it is difficult
              to simulate the condition. Also the syntax may not be further
              simplified in the future.
------------------------------------------------------------
revno: 6132 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Wed 2013-07-17 15:49:18 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.258.9
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-stackguard
    timestamp: Mon 2013-07-15 12:44:54 +0200
    message:
      Bug#11748074 USE PTHREAD_ATTR_GETGUARDSIZE FOR BETTER ROBUSTNESS OF STACK THREAD SIZES
      Bug#35019 Use pthread_attr_getguardsize for better robustness of stack thread sizes
      
      Account for the extra stack guard by doing:
      pthread_attr_setstacksize(&thr_attr, my_thread_stack_size + guardize);
      
      Tested on: 
      ppc64 GNU/Linux  guardize 65536
      ia64 GNU/Linux   guardize 16384
      x86_64 GNU/Linux guardize 4096
      sun4u sparc      guardize 8192
------------------------------------------------------------
revno: 6131 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-17 14:44:06 +0530
message:
  null commit
    ------------------------------------------------------------
    revno: 3902.258.8 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-17 14:36:49 +0530
    message:
      upmerge bug 17035577 5.5 => 5.6
------------------------------------------------------------
revno: 6130 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-17 14:33:05 +0530
message:
  upmerge bug 17035577 5.6 => 5.7
    ------------------------------------------------------------
    revno: 3902.260.1 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-17 14:26:52 +0530
    message:
      upmerge bug 17035577 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.536.4 [merge]
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-07-17 14:25:09 +0530
        message:
          upmerge bug 17035577 5.1 => 5.5
            ------------------------------------------------------------
            revno: 2661.880.28
            committer: sayantan dutta <sayantan.dutta@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-07-17 14:24:02 +0530
            message:
              Bug #17035577 - MTR V1 FAILS TO START SERVER MTR_VERSION=1 PERL MYSQL-TEST-RUN.PL 1ST
------------------------------------------------------------
revno: 6129 [merge]
committer: Tanjot Uppal <tanjot.uppal@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-17 14:14:57 +0530
message:
  Fixed the below 2 tests in trunk and 5.6 from the Auth_sec suite to execute with the yassl builds:
  1) server_withoutssl_client_withoutssl.test
  2) server_withoutssl_client_withssl.test
    ------------------------------------------------------------
    revno: 3902.258.7
    committer: Tanjot Uppal <tanjot.uppal@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-17 14:12:09 +0530
    message:
      Fixed the below 2 tests in trunk and 5.6 from the Auth_sec suite to execute with the yassl builds:
      1) server_withoutssl_client_withoutssl.test
      2) server_withoutssl_client_withssl.test
------------------------------------------------------------
revno: 6128
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-push
timestamp: Wed 2013-07-17 09:26:45 +0200
message:
  Bug#17164720 ASSERT IN READ_TOKEN , STORAGE/PERFSCHEMA/PFS_DIGEST.H
  
  Before this fix,
    SELECT * from performance_schema.events_statements_current
  could cause an assertion failure when computing the DIGEST / DIGEST TEXT columns.
  
  The root cause is a race condition, that happen under load.
  The thread computing the digest reads data from a buffer,
  which is also conccurently updated when the target session is executing a statement.
  
  The fix sanitizes data when reading from the digest storage buffer,
  and when data that does not fit the expected format is found,
  a NULL digest and digest text is displayed.
------------------------------------------------------------
revno: 6127
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-16 16:05:51 +0200
message:
  Use extended tets suite on mysql-trunk-stage
------------------------------------------------------------
revno: 6126
committer: Tarique Saleem <tarique.saleem@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-16 17:11:29 +0530
message:
  updated the tests to skip on non debug builds as it needs sync points to execute the tests. 
------------------------------------------------------------
revno: 6125 [merge]
committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
branch nick: bug15880018-trunk
timestamp: Tue 2013-07-16 14:05:08 +0530
message:
  BUG#15880018 - MISLEADING MESSAGES AT STARTUP TIME
  
  DESCRIPTION:
  
  When the MySQL server starts, it checks for the file containing
  list of all the MySQL error messages. This file by default is
  'errmsg.sys'. The location of the error-message file can be
  specified by the server option '--lc-messages-dir'. If MySQL
  server can not find the file at the location specified by the
  user, an error message is displayed and server does not start.
  The Error message is general and does not point user in the right
  direction.
  
  FIX :
  
  Changed the error message so that user can check
  '--lc-messages-dir' configuration directive too if MySQL server
  can not find the 'errmsg.sys' file.
    ------------------------------------------------------------
    revno: 5850.1.1
    committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
    branch nick: bug15880018-trunk
    timestamp: Tue 2013-06-04 17:22:54 +0530
    message:
      BUG#15880018 - MISLEADING MESSAGES AT STARTUP TIME
      
      DESCRIPTION:
      
      When the MySQL server starts, it checks for the file containing
      list of all the MySQL error messages. This file by default is
      'errmsg.sys'. The location of the error-message file can be
      specified by the server option '--lc-messages-dir'. If MySQL
      server can not find the file at the location specified by the
      user, an error message is displayed and server does not start.
      The Error message is general and does not point user in the right
      direction.
      
      FIX :
      
      Changed the error message so that user can check
      '--lc-messages-dir' configuration directive too if MySQL server
      can not find the 'errmsg.sys' file.
------------------------------------------------------------
revno: 6124
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-16 16:17:21 +0800
message:
  Fix Bug#17057168 LARGE PERFORMANCE REGRESSION FOR INNODB
  GEOMETRY/SPATIAL INDEX LOOKUP
  
  For the new datatype DATA_GEOMETRY, comparison of this data always
  return 0. This caused it can't find the correct key range of the index
  on this data type, so the query on this type column will always do full
  index scan. That's why we got this performance regression.
  The solution is: Since we still use still use BLOB as underlying
  datatype, so we should compare geometry data following the compare BLOB
  way.
  In this patch, I also fixed the occasionally failure of test case
  i_innodb.innodb_bug15963619. According to Krunal's suggestion, I
  increased the restart wait time from 10 to 60.
  
  rb#2890 Approved by Jimmy.
------------------------------------------------------------
revno: 6123 [merge]
committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
branch nick: bug16358989-trunk
timestamp: Mon 2013-07-15 11:52:08 +0530
message:
  BUG#16358989 - BIT(0): ILLEGAL, BUT PRODUCES NO ERROR OR WARNING
  
  DESCRIPTION:
  
  If the size for the BIT data type is specified as zero, MySQL
  accepts it without any error or warning. It implicitly converts
  size to one. The range of the size for BIT data type is 1 to
  64. Default value for the size of BIT data type is 1.
  
  FIX:
  
  Changed the behavior to give an error if size for the BIT data
  type is specified as zero.
    ------------------------------------------------------------
    revno: 6074.1.1
    committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
    branch nick: bug16358989-trunk
    timestamp: Tue 2013-07-09 00:15:56 +0530
    message:
      BUG#16358989 - BIT(0): ILLEGAL, BUT PRODUCES NO ERROR OR WARNING
      
      DESCRIPTION:
      
      If the size for the BIT data type is specified as zero, MySQL
      accepts it without any error or warning. It implicitly converts
      size to one. The range of the size for BIT data type is 1 to
      64. Default value for the size of BIT data type is 1.
      
      FIX:
      
      Changed the behavior to give an error if size for the BIT data
      type is specified as zero.
------------------------------------------------------------
revno: 6122
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-07-15 09:59:52 +0530
message:
  - bug#17077597: INNODB TRUNCATE TABLE SPAMS ERROR LOG
  
    For each truncate, there use to be a informational message
    printed in log file indicating truncate of table.
    This would lead to over-messaging given that each statement
    is printing a message in log file.
  
    Removed the message as the same info is available through
    information_schema.
  
    Approved by: Sunny (over IM)
------------------------------------------------------------
revno: 6121
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Fri 2013-07-12 14:31:15 +0200
message:
  Bug#17079918: MISCAPITALIZATION OF SHOW CREATE TRIGGER COLUMN
  
  Rename the new SHOW CREATE TRIGGER column introduced in
  WL#3253 from "created" to "Created" to match capitalization
  of existing columns.
------------------------------------------------------------
revno: 6120
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug16725945
timestamp: Fri 2013-07-12 11:27:12 +0200
message:
  Bug#16725945: USE_AFTER_FREE ERRORS - COVERITY SCAN
  
  Fix two possible cases of use after free.
  Based on patch contributed by Jan Stan?k.
------------------------------------------------------------
revno: 6119
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-07-11 16:39:00 -0600
message:
  Bug #16934269-INCONSISTENT DECIMAL/HEX OUTPUTS OF THREAD IN INNODB STATUS
  
  Change output format if thread ID to "%lu" in two places.  
  
  Approved in email by Marko Makela and Matt Lord
------------------------------------------------------------
revno: 6118
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef9
timestamp: Thu 2013-07-11 16:32:16 +0200
message:
  Bug#16792349: YET MORE UNUSED #IFDEFS
  
  Additional patch #5:
  Remove unused SKIP_DBUG_IN_FILESORT
------------------------------------------------------------
revno: 6117 [merge]
committer: Satya Bodapati <satya.bodapati@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-11 15:59:36 +0530
message:
  Merge fix for BUG#16083211 from mysql-5.6 to mysql-trunk
  rb#2856
    ------------------------------------------------------------
    revno: 3902.258.6
    committer: Satya Bodapati <satya.bodapati@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-07-11 15:56:05 +0530
    message:
      Bug#16083211 - DO NOT EXPLICITLY DISABLE PERSISTENT STATS WHEN RUNNING
      	       IN READ ONLY MODE
      
      Problem:
      --------
      Persistent stats were disabled when running in read only mode. This is
      not necessary because we would never try to save the stats on disk when
      running in read only mode (unless ANALYZE TABLE is ran) and fetching of
      the stats from disk will work as it does not involve any modification of
      on-disk data.
      
      Fix:
      ----
      Enabled Persistent stats for read only mode. This means we do not try to
      update the persistent stats in read-only mode, but the stats data is used
      if it exists.
      
      Approved by Vasil. rb#2326
------------------------------------------------------------
revno: 6116
committer: Venkata Sidagam <venkata.sidagam@oracle.com>
branch nick: trunk
timestamp: Thu 2013-07-11 12:43:59 +0530
message:
  Bug #12368577 MY_STRNNCOLLSP_UTF16: ASSERTION `(SLEN % 2) == 0' FAILED
  
  Problem Description: mysql server gets assertion failure with the below set
  of queries in debug build.
  
  Analysis:
  a) set @a='a'; - Here the charset value is _utf8 and the length is '1'. 
  These values will be stored for the variable '@a' (by "variable" we mean 
  user_var_entry object).
  
  b) select 0 &&  @a:=_utf16'q'; - Here the charset is getting updated in 
  the prepare stage hence '@a' gets new charset value i.e _utf16. In the 
  execution stage the Server evaluates the expression (0 &&  @a:=_utf16'q') 
  and sees '0'. Hence, the value and the length is not updated. But the 
  charset for '@a' was changed to '_utf16' at preparatory stage and remains 
  as it is. We can observe that change with ("SELECT @a,CHARSET(@a),LENGTH(@a);")
  before this step and after this step.
  
  c) SELECT ''=@a; - If we give this statement then it will try to compare @a 
  using my_strnncollsp_utf16() function. Because the charset of '@a' is seen 
  as '_utf16' so the _utf16 comparison function is chosen. Since the execution 
  of the 'b' statement is not complete because of '0' in the expression the 
  length of '@a' remains '1'. But per the design _utf16 should have length 
  as multiples of 2. So, the query ends in debug assert.
  
  Fix: Before fix the charset change is happening in the query preparation 
  stage and also at the execution stage. 
  The fix is having the charset change for user variables from 
  args[0]/save_result *only* at execution phase, through 
  Item_func_set_user_var::update() function. The appropriate code already 
  exists in the current code base. In the uploaded patch I have initialized
  the charset value for the user variables at the time of variable 
  creation time. That solves the issue.
------------------------------------------------------------
revno: 6115 [merge]
committer: Sneha Modi <sneha.modi@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-11 11:08:02 +0530
message:
  Null merge from 5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.5
    committer: Sneha Modi <sneha.modi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-07-11 11:06:37 +0530
    message:
      Bug#14579516 : Backporting the fix to 5.6
------------------------------------------------------------
revno: 6114
committer: Sneha Modi <sneha.modi@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-11 10:58:52 +0530
message:
  Null merge from 5.6 -> mysql-trunk
------------------------------------------------------------
revno: 6113
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-07-11 10:26:44 +0530
message:
  - bug#17076822- DANGLING MTR IN TRUNCATE_T::DROP_INDEXES()
  
    Before actually dropping of index, check is done to ensure index
    root page is free. If it is free, then dropping activity is avoided.
    mtr was initialized before the check was done. If check evaluates
    to true then mtr was never committed leaving mtr in dangling state.
    mtr is not needed for the check and so moved initialized of mtr
    post check.
  
    Approved by: Sunny (over IM)
------------------------------------------------------------
revno: 6112
committer: Olav Sandstaa <olav.sandstaa@oracle.com>
branch nick: trunk-cleanup
timestamp: Wed 2013-07-10 09:20:09 +0200
message:
  Code clean-up: Remove unused variable named "table" from the JOIN class.
------------------------------------------------------------
revno: 6111 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk2
timestamp: Wed 2013-07-10 14:07:29 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.258.4 [merge]
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-10 14:04:12 +0800
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.536.3
        committer: Jimmy Yang <jimmy.yang@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-07-10 14:00:30 +0800
        message:
          Fix Bug #16710923 - FALSE REPORTS OF DB_FOREIGN_EXCEED_MAX_CASCADE
                            
          rb://2582 approved by Inaam
------------------------------------------------------------
revno: 6110 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-10 10:50:46 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.258.3 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-10 10:49:57 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.536.2
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-07-10 10:49:17 +0530
        message:
          Bug #14017206 WITH CONSISTENT SNAPSHOT DOES NOT WORK WITH ISOLATION LEVEL
          SERIALIZABLE
          
          Problem:
          
          The documentation claims that WITH CONSISTENT SNAPSHOT will work for both
          REPEATABLE READ and SERIALIZABLE isolation levels.  But it will work only
          for REPEATABLE READ isolation level.  Also, the clause WITH CONSISTENT
          SNAPSHOT is silently ignored when it is not applicable to the given isolation
          level.  
          
          Solution:
          
          Generate a warning when the clause WITH CONSISTENT SNAPSHOT is ignored.
          
          rb#2797 approved by Kevin.
          
          Note: Support team wanted to push this to 5.5+.
------------------------------------------------------------
revno: 6109 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-10 10:44:30 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.258.2 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-10 10:42:56 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
------------------------------------------------------------
revno: 6108 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-10 09:38:44 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.259.1 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-08 12:55:06 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.537.1 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-07-03 19:14:55 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.884.1
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-07-03 17:58:28 +0530
            message:
              Bug #14017206 	WITH CONSISTENT SNAPSHOT DOES NOT WORK WITH ISOLATION LEVEL
              SERIALIZABLE
              
              Problem:
              
              The documentation claims that WITH CONSISTENT SNAPSHOT will work for both
              REPEATABLE READ and SERIALIZABLE isolation levels.  But it will work only
              for REPEATABLE READ isolation level.  Also, the clause WITH CONSISTENT
              SNAPSHOT is silently ignored when it is not applicable to the given isolation
              level.  
              
              Solution:
              
              Generate a warning when the clause WITH CONSISTENT SNAPSHOT is ignored.
              
              rb#2797 in review by Kevin.
------------------------------------------------------------
revno: 6107 [merge]
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-09 13:54:08 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 3902.258.1 [merge]
    committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-09 13:50:07 +0200
    message:
      Empty version change upmerge
        ------------------------------------------------------------
        revno: 2875.536.1 [merge]
        committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-07-09 13:46:14 +0200
        message:
          Empty version change upmerge
            ------------------------------------------------------------
            revno: 2661.880.27
            author: murthy.narkedimilli@oracle.com
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2013-07-09 13:19:53 +0200
            message:
              Raise version number after cloning 5.1.71
------------------------------------------------------------
revno: 6106 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk2
timestamp: Tue 2013-07-09 18:37:59 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.257.5 [merge]
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-09 17:34:22 +0800
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.535.2
        committer: Jimmy Yang <jimmy.yang@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-07-09 17:30:28 +0800
        message:
          Fix Bug #16710923 - FALSE REPORTS OF DB_FOREIGN_EXCEED_MAX_CASCADE
                      
          rb://2582 approved by Inaam
------------------------------------------------------------
revno: 6105
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef8
timestamp: Tue 2013-07-09 12:13:11 +0200
message:
  Bug#16792349: YET MORE UNUSED #IFDEFS
  
  Additional patch #4:
  Remove HAVE_WRITE_CORE, was always true.
  
  Remove usage of __INTEL_COMPILER. Was only used for IA-64,
  which is no longer supported. Note that Debian does not
  use ICC to build MySQL for IA-64.
  
  Remove HAVE_IA64INTRIN_H as it then becomes unused.
------------------------------------------------------------
revno: 6104 [merge]
committer: Sunanda Menon<sunanda.menon@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-09 06:05:54 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 3902.257.4
    author: sunanda.menon@oracle.com
    committer: Sunanda Menon<sunanda.menon@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-09 05:44:31 +0200
    message:
      Raise version number after cloning 5.6.13
------------------------------------------------------------
revno: 6103
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-07-09 08:01:11 +0530
message:
  - WL#6501: To make InnoDB truncate table atomic
    - corrected compilation issue for ubuntu-32 bits system
------------------------------------------------------------
revno: 6102
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-07-09 07:44:23 +0530
message:
  - WL#6501: To make InnoDB truncate table atomic
    - corrected compilation issue for ubuntu-32 bits system
    - disable test sceanrio that fails to remove files on windows (probably
      because of locking). this was recently added QA test case which I assume
      was not verified on windows before adding.
------------------------------------------------------------
revno: 6101 [merge]
committer: Hery Ramilison <hery.ramilison@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 20:19:39 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 3902.257.3 [merge]
    tags: clone-5.6.13-build
    committer: Hery Ramilison <hery.ramilison@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-08 20:10:38 +0200
    message:
      Empty version change upmerge
        ------------------------------------------------------------
        revno: 2875.535.1
        author: hery.ramilison@oracle.com
        committer: Hery Ramilison <hery.ramilison@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-07-08 19:41:40 +0200
        message:
          Raise version number after cloning 5.5.33
------------------------------------------------------------
revno: 6100 [merge]
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 16:10:23 +0300
message:
  merging post-push bug16594095 fixes from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.257.2
    committer: Andrei Elkin <andrei.elkin@oracle.com>
    branch nick: 5.6-fixes
    timestamp: Mon 2013-07-08 16:08:41 +0300
    message:
      BUG#16594095
      
      Post-push refinement to fix a valgrind issue.
      The basic pushed patch did not expect a block of
       if (!ret_worker->checkpoint_notified) {}
      be executed multiple times during scheduling of one group.
      In fact it should have been left intact to continue to be executed at T-event
      time that guarantees its single time run.
      And that is restored, that is the former patch part is reverted.
      
      As the matter of fact the physical coordinates were unknown to the Worker 
      only during time of the first transaction scheduling upon master binlog
      rotation or the very first one at MTS start.
      Information about the master binlog at such points is passed to the Worker
      now via augmented notification mechanism.
      The new notification is light as in implementation so in terms of execution
      (is supposed to be pretty rare) and never more that once during one transaction
      scheduling (as asserted in the DBUG version of the patch).
      
      Attention to rpl_conflicts.test is paid to sort out 
      rpl_{row,stm}conflicts.test failing on PB2.
------------------------------------------------------------
revno: 6099 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 12:27:33 +0200
message:
  Null merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.257.1
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-08 12:21:42 +0200
    message:
      Removed tests that are fixed from experimental list
------------------------------------------------------------
revno: 6098
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 12:23:49 +0200
message:
  Removed fixed tests from experimental group
------------------------------------------------------------
revno: 6097
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-cleanup
timestamp: Mon 2013-07-08 12:21:48 +0200
message:
  Reverting previous patch for Bug#17041705 DO NOT BUILD PERFORMANCE SCHEMA FOR EMBEDDED
------------------------------------------------------------
revno: 6096
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 13:59:26 +0530
message:
  - WL#6501: To make InnoDB truncate table atomic
  
    - Logger class name conflicts with ndb cluster object named with
      same name. Updated name to use TruncateREDOLogger.
------------------------------------------------------------
revno: 6095
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-bug17041705
timestamp: Mon 2013-07-08 11:01:53 +0200
message:
  
  Bug#17041705 DO NOT BUILD PERFORMANCE SCHEMA FOR EMBEDDED
  
  Before this fix, the performance schema storage engine was build for the
  embedded library.
  
  There is no performance instrumentation when building for embedded,
  this is dead code.
  
  The fix is to introduce a new option to the MYSQL_ADD_PLUGIN cmake macro,
  named NOT_FOR_EMBEDDED.
  
  When this flag is set,
  - the plugin is not built for the embedded server,
  - the plugin is conditionally included (#ifndef EMBEDDED_LIBRARY)
    in the sql/sql_builtin.cc generated file.
  - the plugin is not in the list of libraries used to build libmysqld
  
  Now, because some instrumentation can be expanded at compile time,
  in particular with PSI_XXX_CALL macros when building code,
  the option RECOMPILE_FOR_EMBEDDED is also added to plugins that
  can contain references to the server itself (define MYSQL_SERVER).
  
  This affects the blackhole and the federated engine.
  
  Last, when executing tests with MTR, when using the --embedded server option,
  FRM files for performance schema tables could still be present on disk,
  which affects queries on the information_schema,
  causing spurious ER_UNKNOWN_STORAGE_ENGINE warnings.
  
  The root cause was that the installation process,
  when using mysqld --bootstrap to install a new database,
  was always creating performance schema tables (and FRM files),
  because the performance schema plugin was always loaded.
  
  mysqld --bootstrap has been relaxed a bit,
  to allow for not always loading the performance schema storage engine.
  
  The MTR script, when installing a database for an embedded test,
  now installs a database without performance_schema tables.
------------------------------------------------------------
revno: 6094
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 13:11:33 +0530
message:
  - WL#6501: To make InnoDB truncate table atomic
  
    - Fixed compilation issue for 32 bits ubuntu system.
      Not sure why the same issue is not present in el6-x86-32bit enviornment
      on pb2/mysql-trunk-stage.
------------------------------------------------------------
revno: 6093 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk4
timestamp: Mon 2013-07-08 15:19:06 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.173 [merge]
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-08 15:08:33 +0800
    message:
      merge mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.76
        committer: Jimmy Yang <jimmy.yang@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-07-08 15:03:02 +0800
        message:
          Fix Bug #16710923 - FALSE REPORTS OF DB_FOREIGN_EXCEED_MAX_CASCADE
                
          rb://2582 approved by Inaam
------------------------------------------------------------
revno: 6092 [merge]
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-07-08 11:33:36 +0530
message:
  - WL#6501: To make InnoDB truncate table atomic
  
    In 5.1 TRUNCATE was implemented as a DROP TABLE followed by a CREATE TABLE.
    The idea was that by assigning a new table space id we could get around the
    issues during recovery because REDO log entries for the old tablespace would
    be discarded. This scheme however was not atomic and caused a new set of
    problems during recovery. e.g., it could leave the new tablespace in an
    unusable state.
  
    The new scheme reuses the tablespace ID and writes a REDO TRUNCATE log record
    so that the truncate can be redone during the recovery phase.
  
    The solution is to:
    - Use the same tablespace ID.
    - Drop existing indexes
    - Initialise the tablespace only if it is not the system tablespace
    - Recreate the indexes
    - Updated SYS_XXXX tables to reflect new metadata, set the new table-id and
      index root_page_no.
    - Before the truncate operation starts, write a REDO log entry.
      This entry contains all the data required to do the operation.
    - During the REDO log parsing phase the data in the redo log entry is cached
      for doing a final fix up after redo completes.
    - After normal recovery is complete, cached info is used to fix-up truncate of
      table and restoring table back to state as if truncate completed
      successfully.
    - In case of error during truncate, table is marked as corrupted
      (unless error is before any major db state change activity is done).
       Existing indexes are dropped when the table is marked as corrupt.
       Note: In this boundary condition the user is advised to drop the table
       and re-create it.
  
    Approved by: Sunny + Jimmy (rb#2447)
    ------------------------------------------------------------
    revno: 4411.1.205 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-07-08 10:30:02 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.204
    committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-07-05 19:14:35 +0530
    message:
      Add testcase for missing tablespace.
    ------------------------------------------------------------
    revno: 4411.1.203
    committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-07-05 17:58:55 +0530
    message:
      Add testcase with lock/unlock tables with truncate.
    ------------------------------------------------------------
    revno: 4411.1.202 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-07-02 14:43:48 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.201
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-07-02 14:42:54 +0530
    message:
      - WL#6501: fixed tcs to restart server in order to get rid of orphaned fts tables
    ------------------------------------------------------------
    revno: 4411.1.200 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-07-02 08:44:28 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.199
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-07-02 08:43:14 +0530
    message:
      - WL#6501: addressed review comments
    ------------------------------------------------------------
    revno: 4411.1.198 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-07-02 08:11:41 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.197 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-07-01 09:22:34 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.196 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-07-01 09:21:01 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.195 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-28 14:15:50 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.194
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-28 14:09:14 +0530
    message:
      - WL#6501: addressed review comments
    ------------------------------------------------------------
    revno: 4411.1.193 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-28 09:22:21 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.192
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-28 09:21:23 +0530
    message:
      - WL#6501: enabled FTS-truncate test-cases
    ------------------------------------------------------------
    revno: 4411.1.191 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-27 17:33:48 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.190
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-27 17:16:20 +0530
    message:
      - WL#6501: addressed review comment. Handled failure of creating index during fixup
    ------------------------------------------------------------
    revno: 4411.1.189 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-27 13:20:58 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.188
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-27 13:20:24 +0530
    message:
      - WL#6501: fixed FIXME mainly OOM handling + documentation
    ------------------------------------------------------------
    revno: 4411.1.187
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6501
    timestamp: Thu 2013-06-27 15:39:11 +1000
    message:
      WL#6501 - Minor code format and add some FIXMEs.
    ------------------------------------------------------------
    revno: 4411.1.186
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6501
    timestamp: Thu 2013-06-27 14:48:59 +1000
    message:
      WL#6501 - Refactor the code. Fix a memory leak.
    ------------------------------------------------------------
    revno: 4411.1.185 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-27 07:57:15 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.184 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-26 12:59:43 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.183
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-26 12:10:29 +0530
    message:
      - WL#6501: addressed review comment to handle OOM error while allocating memory for encoded buffer for redo logging
    ------------------------------------------------------------
    revno: 4411.1.182
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-26 11:29:14 +0530
    message:
      - WL#6501: removed block that were added for code reading clarity
    ------------------------------------------------------------
    revno: 4411.1.181
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-26 11:09:30 +0530
    message:
      - WL#6501: another set of review comments. Move global variable as static variable inside class
    ------------------------------------------------------------
    revno: 4411.1.180
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-26 10:39:26 +0530
    message:
      - WL#6501: next set of review comments
    ------------------------------------------------------------
    revno: 4411.1.179
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-26 10:25:42 +0530
    message:
      - WL#6501: addressed review comments
    ------------------------------------------------------------
    revno: 4411.1.178 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-06-25 12:45:43 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.177
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-06-25 12:32:27 +0530
    message:
      - WL#6501: addressed review comments
    ------------------------------------------------------------
    revno: 4411.1.176 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-06-25 10:53:49 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.175 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-21 09:14:09 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.174 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-20 13:40:04 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.173
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-20 13:35:45 +0530
    message:
      - WL#6501: removed redundant code
    ------------------------------------------------------------
    revno: 4411.1.172
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-20 11:30:17 +0530
    message:
      - WL#6501: fixed trailing spaces
    ------------------------------------------------------------
    revno: 4411.1.171 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-20 11:16:27 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.170 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-20 11:14:28 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.169 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-19 13:43:29 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.168
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-06-18 12:30:47 +0530
    message:
      - WL#6501: added some info level message to track truncate lifetime
    ------------------------------------------------------------
    revno: 4411.1.167 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-06-18 08:06:37 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.166
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-17 17:57:38 +0530
    message:
      - WL#6501:
        - Avoid deleteting ibuf entries while recovery of tablespace
          that is being truncated. (except if tablespace = system-tablespace)
    ------------------------------------------------------------
    revno: 4411.1.165
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-17 14:11:57 +0530
    message:
      - WL#6501: updated comment (added use-case for better understanding)
    ------------------------------------------------------------
    revno: 4411.1.164 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-17 12:54:27 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.163
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-17 11:27:50 +0530
    message:
      - WL#6501:
        - Fixed issue of freeing stale index pages.
        - We should free only those pages that has page-lsn <= lsn
          of REDO log record that we write.
          If page-lsn > lsn that suggest page that some other
          action has already taken place.
          This other action could be drop of index or even allocation
          of this page to some other object.
    ------------------------------------------------------------
    revno: 4411.1.162 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-14 20:06:35 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.161
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-14 18:25:23 +0530
    message:
      - WL#6501:
        - Fixed issue of using stale table-id during truncate fix-up
          if truncate crash post trx commit.
    ------------------------------------------------------------
    revno: 4411.1.160
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-06-14 15:24:31 +0530
    message:
      - WL#6501:
        - Few action are avoided for table that is being truncated on crash
          recovery (including application of some redo log records).
        - Though the code was there, flag the skip it was not set causing
          half-cooked page creation which had all 0s that lead to the 
          assert eventually.
      
       - Also, made sure that action are disabled only for space-id that is
         being truncated and not for all space-id.
    ------------------------------------------------------------
    revno: 4411.1.159 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-06-13 08:04:55 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.158 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-06-12 15:24:01 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.157
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-10 10:45:04 +0530
    message:
      - WL#6501: expanded test-coverage
    ------------------------------------------------------------
    revno: 4411.1.156 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-10 10:15:38 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.155
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-10 08:49:06 +0530
    message:
      - WL#6501:
        - Encoded data that was used for re-creating index on truncate
          crash (during recovery) had a fautly length calculation.
    ------------------------------------------------------------
    revno: 4411.1.154 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-06-04 09:13:36 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.153 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-06-03 11:02:15 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.152 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-28 14:54:09 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.151
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-28 14:52:32 +0530
    message:
      - WL#6501: reintroducing big-test given the time it takes on pb2
    ------------------------------------------------------------
    revno: 4411.1.150
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-28 11:37:14 +0530
    message:
      - WL#6501: temporarily disable big-test for pb2 run validation
    ------------------------------------------------------------
    revno: 4411.1.149 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-28 11:34:25 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.148 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-27 16:55:33 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.147 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-27 15:09:58 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.146
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-27 11:11:35 +0530
    message:
      - WL#6501:
        - fixed issue of removing fts tables incase of error.
          this scenario was handled only when sys-table update use to fail
          and not in other cases leaving stale tables if error happens
          from other places.
    ------------------------------------------------------------
    revno: 4411.1.145 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-27 08:39:32 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.144
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-27 08:38:14 +0530
    message:
      - WL#6501: fixed compilation issue of using #if instead of #ifdef
    ------------------------------------------------------------
    revno: 4411.1.143 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-05-24 18:31:55 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.142 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-05-24 10:42:25 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.141 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-21 17:18:00 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.140
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-21 16:04:54 +0530
    message:
      - WL#6501:
        - removed some redundant testing scenarios.
    ------------------------------------------------------------
    revno: 4411.1.139 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-21 12:20:11 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.138
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-21 12:18:04 +0530
    message:
      - WL#6501:
        - commented tcs that needs FTS to be atomic. WL#6501 doesn't address this
          requirement and result of the TCs is not deterministic.
    ------------------------------------------------------------
    revno: 4411.1.137
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-21 12:07:08 +0530
    message:
      - WL#6501:
        - improved on crash point to ensure it works consistently under all
          test enviornment
    ------------------------------------------------------------
    revno: 4411.1.136
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-21 11:00:17 +0530
    message:
      - WL#6501:
        - restart server on completing error tcs to avoid propogation of errors
          if any to other TCs
    ------------------------------------------------------------
    revno: 4411.1.135 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-20 13:22:36 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.134 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-20 08:13:43 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.133 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-16 17:54:46 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.132 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-16 17:53:11 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.131
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-16 14:37:05 +0530
    message:
      - WL#6501:
        - in case any operation fails while truncating table that would cause
          marking of table as corrupted we need to ensure that this info
          is persisted in form of dict_type (existing mechanism) + tablespace
          fil-ops are re-enabled.
    ------------------------------------------------------------
    revno: 4411.1.130 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-16 09:05:37 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.129
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 13:25:06 +0530
    message:
      - WL#6501:
        - fixed trailing spaces
    ------------------------------------------------------------
    revno: 4411.1.128 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 12:21:41 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.127
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 12:21:04 +0530
    message:
      - WL#6501: revert accidental commit of debug script
    ------------------------------------------------------------
    revno: 4411.1.126 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 11:52:08 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.125
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 11:49:01 +0530
    message:
      - WL#6501:
        - added error path exercising truncate temp table scenario.
    ------------------------------------------------------------
    revno: 4411.1.124
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 10:52:46 +0530
    message:
      - WL#6501:
        - corrected logging mode to redo (from none) when fixing up truncate table.
        - use of iterator instead of operator[] referecing in case of vector.
    ------------------------------------------------------------
    revno: 4411.1.123 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 09:20:21 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.122
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-15 09:19:13 +0530
    message:
      - WL#6501: fixed release build issue. Debug variable was enabled in general.
    ------------------------------------------------------------
    revno: 4411.1.121 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-14 16:41:10 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.120 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-14 15:25:19 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.119 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-14 14:46:00 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.118
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-14 14:17:50 +0530
    message:
      - WL#6501: revert accidental debug tc added
    ------------------------------------------------------------
    revno: 4411.1.117
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-14 14:09:29 +0530
    message:
      - WL#6501:
        - corrected case where-in crash post truncate should maintain the state the
          table before it crash and not post truncate status.
    ------------------------------------------------------------
    revno: 4411.1.116
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-14 13:05:13 +0530
    message:
      - WL#6501:
        - during fix up of truncate table ensure that redo logging is off
          but not the complete logging as we intend to change the data
          and changes needs to be persisted to disk.
    ------------------------------------------------------------
    revno: 4411.1.115
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-09 09:42:58 +0530
    message:
      - WL#6501:
        - fixed pb2 failures mainly to avoid printing of warnings with key_block_size
          as the value varies based on how server is started. pb2 normally
          run all tcs with key_block_size of 4/16.
    ------------------------------------------------------------
    revno: 4411.1.114
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 16:20:21 +0530
    message:
      - WL#6501:
        - replaced a heavy set with simple boolean given that we don't need 
          to track all the space-ids being truncated at same time now.
    ------------------------------------------------------------
    revno: 4411.1.113 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 15:08:25 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.112
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 15:07:12 +0530
    message:
      - WL#6501:
        - removed redundant structure use for maintaining new root page number.
    ------------------------------------------------------------
    revno: 4411.1.111
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 14:18:42 +0530
    message:
      - WL#6501: another level of code cleanup
    ------------------------------------------------------------
    revno: 4411.1.110
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 11:42:02 +0530
    message:
      - WL#6501:
        - added debug tc which is stripped version of crash tcs so as to ensure
          it runs in regular pb2 (w/o big test option) and also covers code
          needed for code-coverage.
    ------------------------------------------------------------
    revno: 4411.1.109
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 11:29:46 +0530
    message:
      - WL#6501: code cleanup
    ------------------------------------------------------------
    revno: 4411.1.108
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 08:49:47 +0530
    message:
      - WL#6501: fixed linking issue with optimize build
    ------------------------------------------------------------
    revno: 4411.1.107 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-08 08:32:56 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.106
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 17:30:56 +0530
    message:
      - WL#6501: fixed merge conflicts
    ------------------------------------------------------------
    revno: 4411.1.105 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 17:27:08 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.104
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 16:40:08 +0530
    message:
      - WL#6501:
        - disable redo logging for table with fts to make it on par with mysql-trunk
        - making table with fts atomic is being solved as different wl.
    ------------------------------------------------------------
    revno: 4411.1.103
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 12:46:01 +0530
    message:
      - WL#6501: updated name of crash point
    ------------------------------------------------------------
    revno: 4411.1.102
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 11:50:27 +0530
    message:
      - WL#6501:
        - added TCs to ensure that truncate of referenced table is blocked.
    ------------------------------------------------------------
    revno: 4411.1.101
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 11:43:17 +0530
    message:
      - WL#6501:
        - updated name of truncate crash point to prefix trunc for better
          differentiation.
    ------------------------------------------------------------
    revno: 4411.1.100
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 10:35:42 +0530
    message:
      - WL#6501:
        - added scalability TCs that can execute on pb2.
    ------------------------------------------------------------
    revno: 4411.1.99
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 10:00:08 +0530
    message:
      - WL#6501: improved error path TCs to have table with multiple indexes
    ------------------------------------------------------------
    revno: 4411.1.98
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 09:53:19 +0530
    message:
      - WL#6501: corrected freeing of trx (that is used for dropping fts table) when truncate of table with fts fails
    ------------------------------------------------------------
    revno: 4411.1.97
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 08:54:25 +0530
    message:
      - WL#6501:
        - added TCs to cover compressed tables truncate exercising error path.
    ------------------------------------------------------------
    revno: 4411.1.96 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 08:41:20 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.95
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-05-07 08:40:25 +0530
    message:
      - WL#6501:
        - fixed behavior of truncate incase of error path.
        - if table is being marked as corrupted then code now ensures
          that all indexes of the table are dropped before it return error
          so that sequence of drop/create would succeed.
    ------------------------------------------------------------
    revno: 4411.1.94
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-06 16:03:59 +0530
    message:
      - WL#6501:
        - added few more error points. fixed stats update
    ------------------------------------------------------------
    revno: 4411.1.93
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-06 13:33:25 +0530
    message:
      - WL#6501:
        - added error debug point that forces uses of error path during
          truncate of table.
          fixed issues of trx rollback in case following cases:
          - preparing for truncate
          - sanity check for fk.
      
       - added TCs to cover this scenario.
    ------------------------------------------------------------
    revno: 4411.1.92
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-06 11:48:41 +0530
    message:
      - WL#6501:
        - added crash point + TCs for temp-table truncate scenarios
    ------------------------------------------------------------
    revno: 4411.1.91
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-06 11:06:48 +0530
    message:
      - WL#6501:
        - added TCs for temp-table truncate scenario
    ------------------------------------------------------------
    revno: 4411.1.90 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-05-06 09:43:17 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.89
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-02 17:08:35 +0530
    message:
      - WL#6501: removed redundant TC on compact table
    ------------------------------------------------------------
    revno: 4411.1.88
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-02 17:07:33 +0530
    message:
      - WL#6501: updated QA TC to reflect updated name for crash points
    ------------------------------------------------------------
    revno: 4411.1.87
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-02 16:41:14 +0530
    message:
      - WL#6501: improved on data-directory TCs for truncate
    ------------------------------------------------------------
    revno: 4411.1.86
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-02 14:15:27 +0530
    message:
      - WL#6501: removed redundant tcs
    ------------------------------------------------------------
    revno: 4411.1.85
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-02 08:54:52 +0530
    message:
      - WL#6501: folded truncate size tc to main tc also improved the tc
    ------------------------------------------------------------
    revno: 4411.1.84 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-05-02 08:07:42 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.83
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 17:03:16 +0530
    message:
      - WL#6501: added TCs for row_format=redundant
    ------------------------------------------------------------
    revno: 4411.1.82
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 16:23:49 +0530
    message:
      - WL#6501: removed redundant compressed table truncate TCs
    ------------------------------------------------------------
    revno: 4411.1.81
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 16:22:17 +0530
    message:
      - WL#6501: Compressed table truncate tc with page-size=4/8/16
    ------------------------------------------------------------
    revno: 4411.1.80
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 15:50:07 +0530
    message:
      - WL#6501:
        - added TCs that hits crash point while truncating compressed table.
    ------------------------------------------------------------
    revno: 4411.1.79
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 15:20:59 +0530
    message:
      - WL#6501: added file_format to introduce compression tc
    ------------------------------------------------------------
    revno: 4411.1.78
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 14:52:48 +0530
    message:
      - WL#6501: made the test-case more generic. We will now have single base tc with outer tc controlling compression/tempness using options
    ------------------------------------------------------------
    revno: 4411.1.77
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 14:19:01 +0530
    message:
      - WL#6501: revamped tc to remove duplication
    ------------------------------------------------------------
    revno: 4411.1.76 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-05-01 12:55:41 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.75
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-30 15:57:50 +0530
    message:
      - WL#6501: expanded test coverage
    ------------------------------------------------------------
    revno: 4411.1.74
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-30 15:41:37 +0530
    message:
      - WL#6501: fixed info messages
    ------------------------------------------------------------
    revno: 4411.1.73
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-30 15:29:24 +0530
    message:
      - WL#6501: fixed truncation to default size while re-initializing single tablespace file
    ------------------------------------------------------------
    revno: 4411.1.72
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-30 15:08:52 +0530
    message:
      - WL#6501:
        Enabling REDO even for system-tablespace tables (except temp-table).
        flow is following:
        - REDO parse (including truncate redo .... cache truncate redo).
        - REDO apply (skip applying truncate redo)
        - DDL REDO
        - UNDO parse and apply.
        - fix up truncate for table using the cached data.
    ------------------------------------------------------------
    revno: 4411.1.71 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-30 09:39:46 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.70
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-30 09:21:28 +0530
    message:
      - WL#6501: persist root_page_no as part of redo log so that it can be used to drop index on recovery
    ------------------------------------------------------------
    revno: 4411.1.69 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-04-26 08:45:41 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.68
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-25 15:42:04 +0530
    message:
      - WL#6501: added missing comment
    ------------------------------------------------------------
    revno: 4411.1.67
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-25 15:40:33 +0530
    message:
      - WL#6501:
        During REDO apply phase root_page_no of newly created indexes were
        not updated to SYS_XXXX tables.
        Fixed.
    ------------------------------------------------------------
    revno: 4411.1.66
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-25 14:20:46 +0530
    message:
      - WL#6501:
        Revamped SysIndexIterator to make it more generic so that it can be
        used from different level not restricting to truncate function only.
    ------------------------------------------------------------
    revno: 4411.1.65
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-25 11:51:11 +0530
    message:
      - WL#6501: added TCs especially to cover system-tablespace truncate case
    ------------------------------------------------------------
    revno: 4411.1.64
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-25 08:46:45 +0530
    message:
      - WL#6501: removed stale messages
    ------------------------------------------------------------
    revno: 4411.1.63 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-25 08:27:19 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.62
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-04-24 17:19:41 +0530
    message:
      - WL#6501:
        Based on today's discussion we are moving back to what I suggested
        before. Cache the table-id that are being truncated during REDO parsing,
        let REDO complete as is and while applying UNDO avoid removing the index
        for the table that has been truncated during REDO parsing.
    ------------------------------------------------------------
    revno: 4411.1.61 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-04-24 10:49:46 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.60
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-04-24 10:43:04 +0530
    message:
      - WL#6501: corrected handling of fts index creation
    ------------------------------------------------------------
    revno: 4411.1.59
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-04-24 09:52:21 +0530
    message:
      - WL#6501: assign new table-id while we roll forward truncate redo log
    ------------------------------------------------------------
    revno: 4411.1.58 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-23 09:41:01 +0530
    message:
      - WL#6501: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.57
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-04-22 16:13:11 +0530
    message:
      - WL#6501: removed dead-code. fixed mem-allocation isuse
    ------------------------------------------------------------
    revno: 4411.1.56
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-04-22 14:51:17 +0530
    message:
      - WL#6915: fixed tc after error message was expanded
    ------------------------------------------------------------
    revno: 4411.1.55 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-04-22 14:42:19 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.54
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-04-22 14:36:47 +0530
    message:
      - WL#6501:
        Problem: truncate is special case. On restart we want to restore state of
        table to truncated state even if crash happen during truncate.
        Given this existing flow was following
        parse redo - apply redo - parse undo - apply undo.
        undo log use to remove changed done to sys-xxxx tables which in turn
        use to result in dropping of indexes created while applying redo.
        
        Solution: New flow
        parse redo (cache it) - parse undo - apply undo - complete recovery.
        apply redo.
        Next checkin will also change the table id that will avoid purge issue too.
      
       
    ------------------------------------------------------------
    revno: 4411.1.53
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-04-19 09:16:21 +0530
    message:
      - WL#6501:
        - with this atomic change we avoid changing space-id of the table
          and so avoid updating it as part of sys-table update.
       
    ------------------------------------------------------------
    revno: 4411.1.52
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-04-19 09:05:26 +0530
    message:
      - WL#6501: few more crash points post create
    ------------------------------------------------------------
    revno: 4411.1.51
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-04-19 08:18:35 +0530
    message:
      - WL#6501:
        - replaced logic of secondary index crash with more generic logic
          instead of current one that expect sec-index to be the 3rd index of
          the table.
        - also introduce crash point to crash on drop of uniq/clust index.
        - added relevant tcs.
      
        - same is being repeated for create. will add tc next.
       
    ------------------------------------------------------------
    revno: 4411.1.50
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-18 14:42:51 +0530
    message:
      - WL#6915: fixed coding guideline violation
    ------------------------------------------------------------
    revno: 4411.1.49
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-18 14:36:00 +0530
    message:
      - WL#6915: fixed few more tcs
    ------------------------------------------------------------
    revno: 4411.1.48
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-04-18 13:49:37 +0530
    message:
      - WL#6501:
        - added tc to cover basic operation involving truncate.
        - revamp comments.
        - corrected bug. table->id was being passed instead of table->space
          to detect if table reside in shared or per-table space.
       
    ------------------------------------------------------------
    revno: 4411.1.47 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Wed 2013-04-17 08:25:54 +1000
    message:
      WL#6501 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.46
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-16 17:14:27 +0530
    message:
      - WL#6501:
        - fixed TC innodb_wl6560_1 for warning.
          Restart on crash will not restore temp-tables but if there are frm
          file MySQl will issue warning message. Supressed such warning message.
        - formatted TC to for easy readbility.
    ------------------------------------------------------------
    revno: 4411.1.45
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-04-16 12:01:41 +0530
    message:
      - WL#6501: corrected compilation issue to work on all compiler
    ------------------------------------------------------------
    revno: 4411.1.44 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Tue 2013-04-16 08:46:35 +1000
    message:
      WL#6501 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4411.1.43
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Mon 2013-04-15 20:38:03 +1000
    message:
      WL#6501 - Change fprintf() to ib_logf().
    ------------------------------------------------------------
    revno: 4411.1.42
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Mon 2013-04-15 09:43:07 +1000
    message:
      WL#6501 - Add comment.
    ------------------------------------------------------------
    revno: 4411.1.41 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Mon 2013-04-15 07:17:07 +1000
    message:
      WL#6501 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4411.1.40
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Mon 2013-04-15 07:12:13 +1000
    message:
      WL#6501 - Fix error log messages, use the new interface.
    ------------------------------------------------------------
    revno: 4411.1.39
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Mon 2013-04-15 07:01:13 +1000
    message:
      WL#6501 - Rename debug variable.
    ------------------------------------------------------------
    revno: 4411.1.38
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Mon 2013-04-15 06:58:43 +1000
    message:
      WL#6501 - Clean up the code, add coments.
    ------------------------------------------------------------
    revno: 4411.1.37
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Sun 2013-04-14 23:09:29 +1000
    message:
      WL#6501 - If the table can't be TRUNCATED and we are in an unknown state
      mark the table as corrupted.
    ------------------------------------------------------------
    revno: 4411.1.36
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Sun 2013-04-14 22:55:56 +1000
    message:
      WL#6915 - Clean up and refactor the code. Get rid of duplicate code. Get rid
      of all gotos. Add comments describing the high level algorithm. The following
      test: innodb.innodb_wl6501_1 fails with some warnings and needs to be
      investigated.
    ------------------------------------------------------------
    revno: 4411.1.35
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Sun 2013-04-14 17:03:52 +1000
    message:
      WL#6501 - Rename Collect to Logger. Rename row_truncate_start() to
      row_truncate_log(). Move index locking out of row_truncate_log().
    ------------------------------------------------------------
    revno: 4411.1.34
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Sun 2013-04-14 16:54:46 +1000
    message:
      WL#6501 - Refactor the code and fix bugs.
      
        1. Refactor the code to use the same iterator in row0trunc.cc
        2. Change the hard coded arrays into STL containers
        3. Fix a bug where mini-transactions weren't committed if there was an
           error half way through processing.
        4. Isolate the truncate specific code to the (new) truncate_t class.
    ------------------------------------------------------------
    revno: 4411.1.33 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Sat 2013-04-13 00:48:45 +1000
    message:
      WL#6501 - Merge from mysql-trunk. This merge has resulted in close to a rewrite
      of this worklog. Too many changes to list here, the most important change
      is that the truncate code has been split into a new file row0trunc.cc and the
      code refactored into separate functions. This is a first cut and it can be
      made even more simple and easier to read.
    ------------------------------------------------------------
    revno: 4411.1.32
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Sat 2013-04-13 00:39:49 +1000
    message:
      WL#6501 - Fix a bug in row_truncate_create_log_record(), a pointer to a local
      variable was being passed to the caller.
    ------------------------------------------------------------
    revno: 4411.1.31
    committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-04-12 16:41:43 +0530
    message:
      Add test to cover all debug sync points and reported issues.
    ------------------------------------------------------------
    revno: 4411.1.30
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6501
    timestamp: Thu 2013-04-11 23:20:41 +1000
    message:
      WL#6501 - Do not init for rewriting the empty pages when recreating a
      compressed truncated tablespace during recovery. Do some code cleanup.
    ------------------------------------------------------------
    revno: 4411.1.29
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-04-05 21:21:11 +0800
    message:
      wl#6501 Addressed innodb_wl6501_tablespace_missing failure and review comments.
    ------------------------------------------------------------
    revno: 4411.1.28
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-03-11 10:35:33 +0800
    message:
      wl#6501 Addressed failing assertion problem.
    ------------------------------------------------------------
    revno: 4411.1.27
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-02-15 23:13:07 +0800
    message:
      wl#6501 split test cases for avoiding big test
    ------------------------------------------------------------
    revno: 4411.1.26 [merge]
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-02-14 21:35:00 +0800
    message:
      wl#6501 Fively merge mysql-trunk to mysql-trunk-wl6501
    ------------------------------------------------------------
    revno: 4411.1.25
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-02-13 09:20:58 +0800
    message:
      wl#6501  Add a test case to verify the truncate statement works fine if tablespace is missing
    ------------------------------------------------------------
    revno: 4411.1.24
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-01-28 13:44:26 +0800
    message:
      wl#6501  Resolved assertion failure recv_sys->n_addrs > 0 in file buf0rea.cc
    ------------------------------------------------------------
    revno: 4411.1.23
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-01-23 08:23:37 +0800
    message:
      wl#6501 Added comment to make checkpoint during truncation and use log_buffer_flush_to_disk() instead of sleep() for DBUG_EXECUTE_IF test
    ------------------------------------------------------------
    revno: 4411.1.22
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-01-22 21:16:18 +0800
    message:
      wl#6501 Release the dict sys mutex before log the checkpoint
    ------------------------------------------------------------
    revno: 4411.1.21 [merge]
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-01-21 18:13:00 +0800
    message:
      wl#6501 Fourthly merge mysql-trunk to mysql-trunk-wl6501
    ------------------------------------------------------------
    revno: 4411.1.20
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-01-21 17:49:28 +0800
    message:
      Wl#6501 Addressed review comments from Jimmy
    ------------------------------------------------------------
    revno: 4411.1.19
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Sun 2013-01-20 19:18:25 +0800
    message:
      wl#6501 Increase the time of waiting for redo record is written into redo log
    ------------------------------------------------------------
    revno: 4411.1.18
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Sat 2013-01-19 18:06:04 +0800
    message:
      wl#6501 Fix page extend error for compressed table
    ------------------------------------------------------------
    revno: 4411.1.17 [merge]
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-01-17 09:18:36 +0800
    message:
      wl#6501 Thirdly merge mysql-trunk to mysql-trunk-wl6501
    ------------------------------------------------------------
    revno: 4411.1.16
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-01-16 17:07:11 +0800
    message:
      wl#6501 fil_system->mutex protect
    ------------------------------------------------------------
    revno: 4411.1.15
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2013-01-16 11:36:50 +0800
    message:
      wl#6501 The second hit to the page outside bounds error
    ------------------------------------------------------------
    revno: 4411.1.14
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-01-15 18:18:46 +0800
    message:
      wl#6501 fix error of page outside the truncated tablespace bounds
    ------------------------------------------------------------
    revno: 4411.1.13
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Tue 2013-01-15 08:06:34 +0800
    message:
      wl#6501 Addressed review comments from Jimmy
    ------------------------------------------------------------
    revno: 4411.1.12 [merge]
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2013-01-14 15:44:29 +0800
    message:
      wl#6501 Secondly merge mysql-trunk to mysql-trunk-wl6501
    ------------------------------------------------------------
    revno: 4411.1.11
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Sun 2013-01-13 13:11:18 +0800
    message:
      wl#6501 create truncate log record in a separate function
    ------------------------------------------------------------
    revno: 4411.1.10
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Sat 2013-01-12 18:35:50 +0800
    message:
      wl#6501 create a new tablespace if the tablespace was not found.
    ------------------------------------------------------------
    revno: 4411.1.9
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Sat 2013-01-12 16:29:30 +0800
    message:
      wl#6501 using c++ code style cast
    ------------------------------------------------------------
    revno: 4411.1.8
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Sat 2013-01-12 10:50:15 +0800
    message:
      wl#6501 Move code block into fil_truncate_write_log()
    ------------------------------------------------------------
    revno: 4411.1.7
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-01-11 22:49:43 +0800
    message:
      wl#6501 Handle crash when applying MLOG_FILE_TRUNCATE log record during recovery
    ------------------------------------------------------------
    revno: 4411.1.6
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-01-11 20:19:17 +0800
    message:
      WL#6501 addressed review comments part1
    ------------------------------------------------------------
    revno: 4411.1.5
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Fri 2013-01-11 12:44:15 +0800
    message:
      wl#6501 Add test case for simulating idb file is missing.
    ------------------------------------------------------------
    revno: 4411.1.4
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-01-10 22:57:28 +0800
    message:
      wl#6501  Handled missing ibd file.
      	 Added assertions and comments.
    ------------------------------------------------------------
    revno: 4411.1.3
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Thu 2013-01-10 16:38:57 +0800
    message:
      wl#6501 Addressed review comments
      	Added test cases for all above row formats, except fixed format.
      	Added test cases to support 2k, 4k and 8k compressed page sizes.
      	Resolved remote data dir miss error after recovery from crash
      	during truncation for a table with remote dir.
      	Reorganized struct.
    ------------------------------------------------------------
    revno: 4411.1.2 [merge]
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Wed 2012-12-26 10:27:17 +0800
    message:
      WL6501 Merge mysql-trunk to mysql-trunk-wl6501
    ------------------------------------------------------------
    revno: 4411.1.1
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-trunk-wl6501
    timestamp: Mon 2012-12-10 15:59:16 +0800
    message:
      WL6501 Push the patch to stage PB2 for test.
------------------------------------------------------------
revno: 6091
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: trunk1
timestamp: Sat 2013-07-06 07:24:52 +0530
message:
  Post fixed of timeout failure in pb2 for innodb-wl6045.test
  --Added not_embedded.inc as include/restart_mysqld.inc does not work in embedded mode
------------------------------------------------------------
revno: 6090
committer: Tarique Saleem <tarique.saleem@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 18:38:14 +0530
message:
  updated the test with sync point before_reset_query_plan to after_join_optimize for Range checked queries. since at the moment plan is ready it set to ALL, but when explain for connection hits the query, the query is being executed and at that moment executor uses range. 
------------------------------------------------------------
revno: 6089
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 16:22:45 +0400
message:
  Test cases adjusted after pushing WL#6369.
  explain_other test doesn't run with query cache enabled due to
  a problem with ACL check. To be enabled later.
  innodb_mysql and binlog_stm_blackhole - recorded correct result.
------------------------------------------------------------
revno: 6088
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: trunk1
timestamp: Fri 2013-07-05 16:14:26 +0530
message:
  Fixed timeout failure in pb2 for innodb-wl6045.test
  --Divided the original innodb-wl6045.test into smaller test cases:
    innodb-wl6045.test, innodb-wl6045-1.test and innodb-wl6045-3.test
------------------------------------------------------------
revno: 6087
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 14:48:20 +0530
message:
  BUG#16415978 - UNABLE TO ADD ELEMENT IN DEBUG LIST IF NAME
                 IS SUBSET OF EXISTING ELEMENT
  DESCRIPTION AND FIX:
  Debug keywords which are prefixes of  already existing
  keywords in the debug list are not enabled.
  The fix would be to match the keywords exactly in the
  function ListAddDel in dbug/dbug.c and allow space as
  to separate keyword in addition to comma. 
------------------------------------------------------------
revno: 6086 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 14:40:32 +0530
message:
  Bug#17033706 SINCE 5.5.32 & 5.6.12, INNODB CANT START WITH OWN
               MULTI-FILE TABLESPACE
  [ Merge from 5.6 ]
    ------------------------------------------------------------
    revno: 3902.242.172 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-07-05 14:37:37 +0530
    message:
      Bug#17033706 SINCE 5.5.32 & 5.6.12, INNODB CANT START WITH OWN
                   MULTI-FILE TABLESPACE
      [ Merge from 5.5 ]
        ------------------------------------------------------------
        revno: 2875.525.75
        tags: clone-5.5.33-build
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-07-05 14:30:15 +0530
        message:
          Bug#17033706 SINCE 5.5.32 & 5.6.12, INNODB CANT START WITH OWN
                       MULTI-FILE TABLESPACE
          
          ANALYSIS
          --------
          
          When a tablespace has multiple data files, InnoDB fails to 
          open the tablespace.  This is because for each ibd file, 
          the first page is checked.But the first page of all ibd file
          need not be the first page of the tablespace.  Only the first
          page of the tablespace contains the tablespace header. When 
          we check the first page of an ibd file that is not the first
          page of the tablespace, then the "tablespace flags" is not
          really available.This was wrongly used to check if a page is
          corrupt or not.
          
          FIX
          ---
          Use the tablespace flags only if the page number is 0 
          in a tablespace.  
          
          [Approved by Inaam rb#2836 ]
------------------------------------------------------------
revno: 6085
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 10:28:24 +0300
message:
  post-merging from bug16594095_16931177 fixes to trunk.
------------------------------------------------------------
revno: 6084 [merge]
committer: Andrei Elkin <andrei.elkin@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 10:23:26 +0300
message:
  merging bug16594095_16931177 fixes from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.242.171
    committer: Andrei Elkin <andrei.elkin@oracle.com>
    branch nick: 5.6-fixes
    timestamp: Fri 2013-07-05 10:20:19 +0300
    message:
      bug#16931177 BGC and slave binlog rotate causes slave sql_thread to stop
      bug#16594095 NOT VERBOSE ENOUGH ERROR REPORTING BY MTS WORKER
      
      A slave applier thread stops with an error when it is about to rotate binlog but
      finds it's already done by a thread before it in the committing group.
      
      Notice that it's the slave applier that reacts to such situation
      even though the regular use session also senses it in MBL::commit().
      But unlike the slave applier the "master" user session does not propagate
      any error to the top level (which is actually an issue being addressed by Bug16579083).
      
      It appears that the reason of this trouble is actual overreaction.
      About to rotate session should not raise any error when it's merely beaten to by
      some other.
      And that is fixed.
      ******
      bug#16594095 NOT VERBOSE ENOUGH ERROR REPORTING BY MTS WORKER
      
      In case a Worker fails to apply an event the Slave applier (SQL thread +
      Workers) stops. An error that the Worker faced is displayed in
      Show-Slave-Status. However unlike the sequential execution there's 
      no event coordinates that makes the failed event identification rather difficult.
      
      Fixed with adding a new prefix part to Last_SQL_Error message that
      carries the physical (master binlog) coordinates and GTID_NEXT when one is set.
      In case of simultaneous multiple Worker failures the error log must be consulted
      as well.
      
      ******
      merge from 5.6 repo.
------------------------------------------------------------
revno: 6083 [merge]
committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 12:34:08 +0530
message:
  Merging from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.242.170
    committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
    branch nick: mysql_5_6
    timestamp: Fri 2013-07-05 12:30:12 +0530
    message:
      Bug#16983143 - CRASH WITH STORED ROUTINE, SELECT FROM CURSOR,
                     UNION 
      
      Analysis:
      -----------
      The problem was that fetching rows from CURSOR of SELECT 
      having UNION was crashing. The column meta-data stored
      with cursor had a dangling pointer "orig_table". Accessing
      this member was resulting in crash.
      
      The SELECT query of CURSOR used a intermediate table for
      the UNION. Then, Select_materialize::send_result_set_metadata
      created a temporary table for storing the query result. The
      column meta-data for the query is obtained by calling function
      get_field_list. get_field_list returns "st_select_lex_unit::
      item_list" for UNION, which is a list of fields which 
      pointing to intermediate temporary table of union query. So, while
      creating the temporary table to store query result for cursor,
      the orig_table was set as intermediate temporary table of the
      union. "Materialized_cursor:item_list" was also populated
      with Materialized tables field meta-data. But at the end of
      open cursor statement execution, intermediate temporary
      table created for union is dropped. Because of this "orig_table"
      became dangling.
      
      Fix:
      ------
      The problem is solved by using the column meta-data list
      "st_select_lex_unit::types" when creating the Materialized table
      of cursor instead of the column meta-data of the intermediate
      table created for union query. 
------------------------------------------------------------
revno: 6082
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 12:00:56 +0530
message:
  Bug#12817590 - THREAD_POOL_PRIO_KICKUP_TIMER=4294967295 IS NOT
  	       ACCEPTED, PLUGIN LOAD ABORTS 
  DESCRIPTION AND FIX:
  As per documentation, value of the system parameter thread_pool_prio_
  kickup_timer should be in range 0 .. 4294967294.
  Fix the error messsage in consistent with documentation as requested
  in the bug. 
------------------------------------------------------------
revno: 6081 [merge]
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-07-05 01:19:12 -0400
message:
  merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.169
    committer: Inaam Rana <inaam.rana@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-07-05 01:04:41 -0400
    message:
      Bug#16864741 DROP/ALTER TABLE TAKES MUCH LONGER TIME IN 5.6 THAN 5.5
      
      rb://2841
      approved by:
      
      Fixes a regression in 5.6 where we search for AHI entries to be dropped
      when we are DROPping a table. AHI entries need not to be searched
      because they are already dropped during fseg_free_step().
------------------------------------------------------------
revno: 6080
committer: Serge Kozlov <serge.kozlov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-04 20:46:51 +0400
message:
  BUG#16743913. Removed breaking test execution for wait_condition.inc for timeout. Added wait_condition_or_abort.inc for rpl/binlog suites
------------------------------------------------------------
revno: 6079 [merge]
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-04 15:02:39 +0200
message:
  Fixing build break from bug#16817453 - null merge
    ------------------------------------------------------------
    revno: 3902.242.168
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-07-04 14:58:56 +0200
    message:
      Fixing build break from bug#16817453
------------------------------------------------------------
revno: 6078
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-devpoll
timestamp: Thu 2013-07-04 14:43:45 +0200
message:
  Bug#17053941: CMAKE SEARCHES FOR SYS/DEVPOLL.H TWICE
  
  Remove duplicate check for sys/devpoll.h.
  Set HAVE_SYS_DEVPOLL_H based on HAVE_DEVPOLL to
  avoid changing libevent code.
------------------------------------------------------------
revno: 6077
committer: Tarique Saleem <tarique.saleem@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-04 17:19:43 +0530
message:
  Changed the sync point from before_query_reset_plan to after_join_optimize. At the moment plan is ready it set to ALL, but when explain for connection hits the query, the query is being executed and at that moment executor uses range. 
------------------------------------------------------------
revno: 6076 [merge]
committer: Venkata Sidagam <venkata.sidagam@oracle.com>
branch nick: trunk
timestamp: Thu 2013-07-04 17:03:44 +0530
message:
  Bug #16567381 	DATETIME FIELD COMPARISONS DO NOT WORK PROPERLY WITH
                  UTF8_UNICODE_CI COLLATION
  
  Null merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.167 [merge]
    committer: Venkata Sidagam <venkata.sidagam@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-07-04 17:00:45 +0530
    message:
      Bug #16567381 	DATETIME FIELD COMPARISONS DO NOT WORK PROPERLY 
                      WITH UTF8_UNICODE_CI COLLATION.
      
      Null merge from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.525.74
        committer: Venkata Sidagam <venkata.sidagam@oracle.com>
        branch nick: 5.5
        timestamp: Thu 2013-07-04 16:59:09 +0530
        message:
          Bug #16567381 	DATETIME FIELD COMPARISONS DO NOT WORK PROPERLY 
                          WITH UTF8_UNICODE_CI COLLATION
          Problem Description:
          When comparing datetime values with strings, the utf8_unicode_ci collation 
          prevents correct comparisons. Consider the below set of queries, it is not 
          showing any results on a table which has tuples that satisfies the query. 
          But for collation utf8_general_ci it shows one tuple.
          set names utf8 collate utf8_unicode_ci;;
          select * from lang where dt='1979-12-09';
          
          Analysis:
          The comparison function is not chosen in case of collation utf8_unicode_ci.
          In agg_item_set_converter() because the collation state is having 
          "MY_CS_NONASCII" for collation type "utf8_unicode_ci". The conversion 
          of the collation is happening for the date field. And because of that 
          it is unable to pickup proper compare function(i.e CMP_DATE_WITH_STR).
          
          Actually the bug is accidentally introduced by the WL#3759 in 5.5. 
          And in 5.6 it is been fixed by the WL#3664.
          
          Fix:
          I have backported the changes from the file strings/ctype-uca.c which 
          are related to "utf8" introduced by the WL#3664.
          This change helps in choosing the correct comparison function for all 
          the collations of utf8 charset.
------------------------------------------------------------
revno: 6075
committer: Igor Solodovnikov <igor.solodovnikov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-07-04 14:00:34 +0300
message:
  Bug #17037022	MYSQL_CLIENT_TEST FAILS WHEN RUN AGAINST PREVIOUS VERSIONS OF THE SERVER
  
  test_wl5928: Tests of new features are skipped when mysql_client_test run against older versions of server.
  test_datetime_ranges: conditionalized to mirror behavior changes introduced by wl5928
  test_bug36004: conditionalized to mirror behavior changes introduced by wl5928
------------------------------------------------------------
revno: 6074 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug16856735_mysql-trunk
timestamp: Thu 2013-07-04 12:05:11 +0530
message:
  merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.166
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug16856735_mysql-5.6
    timestamp: Thu 2013-07-04 11:54:53 +0530
    message:
      Addressing post push warning on PB2 machines.
------------------------------------------------------------
revno: 6073 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk2
timestamp: Thu 2013-07-04 10:31:47 +0800
message:
  Merge with mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.165
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-07-04 10:14:20 +0800
    message:
      Fix Bug #16896647 WASTED WORK IN METHOD ROW_CHECK_INDEX_FOR_MYSQL()
      
      rb://2740 approved by Sunny Bains
------------------------------------------------------------
revno: 6072 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Wed 2013-07-03 16:24:53 +0200
message:
  Merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.164
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Wed 2013-07-03 15:42:55 +0200
    message:
      Bug#17003702 ADDRESSSANITIZER BUG IN RUN_PLUGIN_AUTH
      
      Do not access the message buffer of a closed connection.
------------------------------------------------------------
revno: 6071 [merge]
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 16:56:25 +0400
message:
  Fix failing test after pushing WL#6369.
    ------------------------------------------------------------
    revno: 6064.1.1
    committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
    branch nick: mysql-trunk
    timestamp: Wed 2013-07-03 16:29:09 +0400
    message:
      Fix failing test after pushing WL#6369.
      A test case with big number of nests subselects might fail due to limited stack
      space on 64bit sparc solaris platform.
      Test result log is disabled as query might fail with expected error thus not
      producing correct result.
------------------------------------------------------------
revno: 6070
committer: Harin Vadodaria <harin.vadodaria@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 17:44:50 +0530
message:
  Bug#16957721: VALIDATE_PASSWORD_LENGTH ALLOWED TO HAVE
                BELOW VALIDATE_PASSWORD PARAMETER VALUE
  
  Description: Value of validate_password_length variable
               is set in following manner:
               max(validate_password_length,
                 (validate_password_number_count +
                   validate_password_special_char_count +
                   (2*validate_password_mixed_case_count)))
  
               While this is done each time value of
               any of the above mentioned variable is
               changed, same check should be performed at
               the time of plugin installation which was
               missing and hence it was possible to set
               validate_password_length to a value which
               does not satisfy above mentioned criteria.
  
               This patch fixes the issue by introducing a
               check at plugin installation time as well.
------------------------------------------------------------
revno: 6069 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug16856735_mysql-trunk
timestamp: Wed 2013-07-03 17:00:56 +0530
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.163
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug16856735_mysql-5.6
    timestamp: Wed 2013-07-03 16:44:14 +0530
    message:
      Bug#16856735: SLAVE DEADLOCK CAUSED BY STOP SLAVE,
      SHOW SLAVE STATUS AND GLOBAL READ LOCK.
      
      Problem:
      =======
      SLAVE DEADLOCK CAUSED BY STOP SLAVE, SHOW SLAVE STATUS AND
      GLOBAL READ LOCK
      
      Analysis:
      ========
      "FLUSH TABLES WITH READ LOCK" command blocks all DML and
      DDL operations by taking "global read lock".  Hence when a
      DML or DDL statement is received at slave, post "global read
      lock" acquisition this operation will be blocked.  This 
      causes slave sql thread to be blocked.
      
      At this time when  STOP SLAVE command is issued in new slave
      connection this command will acquire "LOCK_active_mi" and it
      waits till the "sql thread" terminates.
      
      Now in the first connection issue SHOW SLAVE STATUS command
      which needs 'LOCK_active_mi' will be blocked till the above
      lock is released by "STOP SLAVE".  Since "UNLOCK TABLES" can
      only be done in first connection which is not possible any 
      more, which causes a deadlock.
      
      Fix:
      ===
      Provide a new option to make the "STOP SLAVE" command to
      timeout after specified number of seconds rather than
      waiting for an year.
      
      During testing the fix another deadlock issue was identified
      with "STOP SLAVE" + "MTS" + "FLUSH TABLES WITH READ LOCK".
      This was caused as "rli->run_lock" was moved as par of
      BUG#13635612 fix to eliminate false suspects.  But since
      this change is not necessary the "rli->run_lock" is moved
      back to the appropriate place.
------------------------------------------------------------
revno: 6068 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 19:06:19 +0800
message:
  Null merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.162
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6-bug16817453
    timestamp: Wed 2013-07-03 19:03:21 +0800
    message:
      Bug#16817453 PLEASE BACKPORT BUG #14834698 TO 5.6
      
      Backport the patch for Bug#14834698 to 5.6
------------------------------------------------------------
revno: 6067
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 15:44:01 +0530
message:
  Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT
  WORKING AS EXPECTED
  
  Merging fix from mysql-5.6
------------------------------------------------------------
revno: 6066 [merge]
committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 14:16:31 +0530
message:
  Merge from 5.6 to 5.7
  
  
  Bug #16436567:REGRESSION: CRASH AFTER JOIN::MAKE_TMP_TABLES_INFO()
  
  Problem:
  While creating temporary table, server crashes checking if
  optimizer is using loose_index_scan.
  
  Analysis:
  In get_best_combination(), join_tab structures are created
  based on the number of primary tables, semi-join nests and
  temp_tables. While calculating the number of temp_tables,
  optimizer estimates it to be 'one' for the query
  "select ( select distinct q.a+ variance(g.a) from g q ) from g; "
  as there is only distinct in it.  As a result space for only
  two join_tab structures is allocated(one for the primary
  table and one for the tmp table).
  
  In make_tmp_tables_info(), we see that
  "using_indirect_summary_function" is enabled and as a result
  optimizer has to create the second tmp table. Here, its presumed
  that the join_tab structure for the second tmp table is
  already allocated and hence it tries to write on to this memory
  while creating the intermediate temp table.
  In doing so, it over-writes some of the  memory allocated for
  "select" and later leads to crash.
  
  Solution:
  Calculate the number of outer aggregation functions while
  counting field types and use the same to allocate the second
  join_tab structure in get_best_combination.
    ------------------------------------------------------------
    revno: 3902.242.161
    committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-07-03 13:43:51 +0530
    message:
      Bug #16436567:REGRESSION: CRASH AFTER JOIN::MAKE_TMP_TABLES_INFO()
            
      Problem:
      While creating temporary table, server crashes checking if
      optimizer is using loose_index_scan.
           
      Analysis:
      In get_best_combination(), join_tab structures are created
      based on the number of primary tables, semi-join nests and
      temp_tables. While calculating the number of temp_tables,
      optimizer estimates it to be 'one' for the query
      "select ( select distinct q.a+ variance(g.a) from g q ) from g; "
      as there is only distinct in it.  As a result space for only
      two join_tab structures is allocated(one for the primary
      table and one for the tmp table).
          
      In make_tmp_tables_info(), we see that
      "using_indirect_summary_function" is enabled and as a result
      optimizer has to create the second tmp table. Here, its presumed
      that the join_tab structure for the second tmp table is
      already allocated and hence it tries to write on to this memory
      while creating the intermediate temp table.
      In doing so, it over-writes some of the  memory allocated for
      "select" and later leads to crash.
         
      Solution:
      Calculate the number of outer aggregation functions while
      counting field types and use the same to allocate the second
      join_tab structure in get_best_combination.
------------------------------------------------------------
revno: 6065
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 13:40:09 +0530
message:
  Bug#16945722 INTRODUCE --LOG OPTION FOR INNOCHECKSUM 
  Problem Statement:
  The Innochecksum tool generates the trace file under the
  --debug option, which contains the useful information like checksum and LSN
  value etc. for each page.
  The --debug option is available only for debug build and we ship on 'release'
  version of innochecksum to external users. So for non-debug innochecksum build
  (release build), this feature is not available to user.
  Fixed:
  New feature request for --log option for innochecksum.
  a) Replace the DBUG_PRINT() to fprintf(<log_file>,...).
  b) Re-adjusted the innochecksum related test case with addition of test
  case specific to --log option.
  
  Approved by: Kevin(rb#2619)
------------------------------------------------------------
revno: 6064
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-07-03 10:46:57 +0400
message:
  Fix failing test after pushing WL#6369.
  A test case with big number of nests subselects might fail due to limited stack
  space on 64bit sparc solaris platform.
------------------------------------------------------------
revno: 6063
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: tmp
timestamp: Tue 2013-07-02 18:48:24 +0400
message:
  WL#6369: EXPLAIN for other thread.
  Implementation and fixed assiciated bugs.
------------------------------------------------------------
revno: 6062 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Tue 2013-07-02 14:05:26 +0200
message:
  Merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.160
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Tue 2013-07-02 13:55:12 +0200
    message:
      Address sanitizer fix for unit test: different error message for segfault.
------------------------------------------------------------
revno: 6061 [merge]
committer: Tiago Jorge <tiago.jorge@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-02 12:13:09 +0100
message:
  BUG#16742886-GTID_NEXT_LIST SESSION VARIABLE IS NOT VISIBLE
  
  merge from mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.159
    committer: Tiago Jorge <tiago.jorge@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-02 12:09:08 +0100
    message:
      Problem: 
      An error message shows a variable that is not available 
      to change.
                  
      Analysis: 
      
      Several error messages have an explicit reference to 
      @@SESSION.GTID_NEXT_LIST. 
      The issue is that SESSION.GTID_NEXT_LIST is not 
      available to be changed and nor it should be, since it is a
      future feature to be integrated in NDB, thus not being 
      available in the server mainline. The error messages are 
      misleading to a user.
      
      Fix: 
      Change the error messages in order to state the only 
      possible source of error. Also corrected the binlog
      tests that were expecting that specific message.
------------------------------------------------------------
revno: 6060
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Tue 2013-07-02 12:24:08 +0530
message:
  Bug#16361170 - assertion failed: join->best_read < 1.7976931348623158e+308,
  file sql_planner.cc
  
  Problem:-
  In Optimize_table_order::greedy_search, When 'best_read < DBL_MAX'   
  means that optimizer managed to find some join order, but when 
  we are not able to choose any order, it assert.
  
  Analisys:
  In Item_sum::update_used_tables(), we are setting used_tables_cache. 
  But it is correct as long as aggregation is done within the same 
  query block. But in case when it is refering to outer query block. 
  We are setting to according to outer query tables.
  That's why we can't able to choose the order in 
  Optimize_table_order::best_extension_by_limited_search() and 
  had assert.
  
  Solution:-
  In case, when we refering to outer_query block, we need to set it 
  to OUTER_REF_TABLE_BIT.
------------------------------------------------------------
revno: 6059
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-02 12:01:04 +0530
message:
  Bug#11759578 ERROR MESSAGE REFERENCES INTERNAL VARIABLE NAME INNOBASE_BUFFER_POOL_SIZE
  Problem: For 32 bit machine, when the value of innodb_buffer_pool_size
  provided is too big ,then the error refers to the
  internal variable(innobase_buffer_pool_size), instead of the server startup
  variable(innodb_buffer_pool_size).
  Fixed: change error message from "innobase_buffer_pool_size can't be
  over 4GB" to "innodb_buffer_pool_size can't be over 4GB"
  Approved by: Marko(rb#1341)
------------------------------------------------------------
revno: 6058
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-02 11:09:58 +0800
message:
  BUG#16988017 *GROUP_COMMIT_DEADLOCK* TESTCASES ARE FAILING SPORADICLY
               ON FREEBSD9-X86-64BIT
  
  Slave IO thread stopped sporadically with an error. The error was caused by an
  unexpected heartbeat. The heartbeat event was between Rotate_log_event and
  Format_description_log_event. But slave IO thread doesn't accept any event
  immediately after receivng a Rotate_log_event,
  except Format_description_log_event.
  
  Binlog rotation has two steps. First, it appends a Rotate_log_event into
  current binlog and close it. Second, it creates a new binlog and appends
  a Format_description_log_event. Immediately after the Rotate_log_event was
  appended, binlog_end_log_pos was updated and dump threads were notified to
  send the event. After the event was sent, dump threads began to wait
  for new events coming until the new binlog file was created. Dump threads
  could get timeout and send heart beat events to slaves if the new
  binlog was not created so fast.
  
  To solve the problem, the code updating binlog_end_log_pos immediately after
  Rotate_log_event is appended is removed. So dump threads will not know the
  Rotate_log_event is appended until active binlog is switched. Because active
  binlog is switched, dump threads will switch to next binlog file directly
  without any heartbeat after sending Rotate_log_event.
------------------------------------------------------------
revno: 6057 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-07-02 10:25:21 +0800
message:
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.158
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-07-02 10:07:30 +0800
    message:
      BUG#17035359 - BACKPORT BUG#16429688 - FTS: SYNTAX ERROR, UNEXPECTED '*', EXPECTING $END
      
      rb://2223 approved by Sunny.Bains.
------------------------------------------------------------
revno: 6056
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 13:26:46 -0500
message:
  Fix some line endings from CRLF to LF
------------------------------------------------------------
revno: 6055 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Mon 2013-07-01 15:55:25 +0200
message:
  Merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.157 [merge]
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Mon 2013-07-01 15:44:50 +0200
    message:
      Merge 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.525.73 [merge]
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: 5.5-merge
        timestamp: Mon 2013-07-01 15:38:16 +0200
        message:
          merge 5.1 => 5.5
            ------------------------------------------------------------
            revno: 2661.880.26
            tags: clone-5.1.71-build, mysql-5.1.71
            committer: Tor Didriksen <tor.didriksen@oracle.com>
            branch nick: 5.1
            timestamp: Mon 2013-07-01 15:30:55 +0200
            message:
              Bug#58165: "my_empty_string" gets modified and causes LOAD DATA to fail and
              Cleanup test case (left outfile in data dir)
------------------------------------------------------------
revno: 6054 [merge]
committer: Bharathy Satish <bharathy.x.satish@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 18:12:49 +0530
message:
  Bug #16971432 MYSQL CLIENT WASTE TIME IN SPRINTF MAKING INFO MESSAGES THAT
                ARE NOT PRINTED
  
  Null merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.242.156
    committer: Bharathy Satish <bharathy.x.satish@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-01 18:06:24 +0530
    message:
      Bug #16971432 MYSQL CLIENT WASTE TIME IN SPRINTF MAKING INFO MESSAGES THAT
                    ARE NOT PRINTED
      
      Problem: When the client program is in batch mode by default the message
      like  "Query OK, 1 row affected" are not shown, but instead the buffer is
      prepared using sprintf call which takes some cpu time when the import file
      is too large.
      
      Fix: Fix is to check if the client is running in batch mode then skip the
      sprintf statement in /client/mysql.cc in com_go(). put_info ignores the 
      buffer built by prepare only when in batch mode and verbose < 2. Hence 
      skip the sprintf in com_go() only in this case.
------------------------------------------------------------
revno: 6053 [merge]
committer: Bharathy Satish <bharathy.x.satish@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 17:23:58 +0530
message:
  Bug #16971432 MYSQL CLIENT WASTE TIME IN SPRINTF MAKING INFO MESSAGES THAT
                ARE NOT PRINTED
  
  Merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.256.1
    committer: Bharathy Satish <bharathy.x.satish@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-01 16:32:04 +0530
    message:
      Bug #16971432 MYSQL CLIENT WASTE TIME IN SPRINTF MAKING INFO MESSAGES THAT
                    ARE NOT PRINTED
      
      Problem: When the client program is in batch mode by default the message
      like  "Query OK, 1 row affected" are not shown, but instead the buffer is
      prepared using sprintf call which takes some cpu time when the import file
      is too large.
      
      Fix: Fix is to check if the client is running in batch mode then skip the
      sprintf statement in /client/mysql.cc in com_go(). put_info ignores the 
      buffer built by prepare only when in batch mode and verbose < 2. Hence 
      skip the sprintf in com_go() only in this case.
------------------------------------------------------------
revno: 6052 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 16:56:01 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.155 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-01 16:54:17 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.72
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-07-01 16:53:30 +0530
        message:
          I have added --innodb_file_per_table=1 InnoDB config option to run
          i_innodb.innodb_bug16417635 test case.
------------------------------------------------------------
revno: 6051
committer: Bharathy Satish <bharathy.x.satish@oracle.com>
branch nick: mysqltrunk
timestamp: Mon 2013-07-01 16:22:53 +0530
message:
  Bug #16751784 WASTED WORK IN METHOD MYISAMCHK
  Bug #17001703 WASTED WORK IN METHOD MI_TEST_IF_SORT_REP()
  Bug #17007268 WASTED WORK IN METHOD RECREATE_TABLE()
        
  Problem: Unwanted execution are happening in the following functions
  MYISAMCHK(), MI_TEST_IF_SORT_REP(), RECREATE_TABLE() within a loop
  which is consuming some cpu cycles.
        
  Fix: For bug#16751784 fix is to break out of loop when variable 
  update_index is set to 0. For bug#17001703 fix is to break out 
  of loop when variable force is set to 0. For bug#17001703 fix
  is to break out of loop when variable "pack" is FALSE.
  Fix was contributed by  Po-Chun Chang.
------------------------------------------------------------
revno: 6050
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: fix-trunk
timestamp: Mon 2013-07-01 13:12:04 +0300
message:
  Addendum to bug #16996656 :
  - re-recorded tests to use full option names
  - removed the reference to the falcon SE from the test driver
------------------------------------------------------------
revno: 6049
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 14:47:18 +0530
message:
  Bug#16521741 INCLUDE FILE INCLUDES ITSELF (ROW0PURGE.H) 
  Fixed: Removed the self-included header file and check for any other
         self-inclusion file.
  Approved by: Jimmy(rb#2348)
------------------------------------------------------------
revno: 6048
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 13:35:15 +0530
message:
  Bug#16586697 NO NEED TO CALL UT_PRINT_TIMESTAMP BEFORE IB_LOGF
  Fixed: Remove the ut_print_timestamp() call if it is followed by the
         ib_logf()
  Approved by: Jimmy (rb#2759)
------------------------------------------------------------
revno: 6047
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 14:06:54 +0800
message:
  Fix test failures of innodb_fts.innodb_fts_misc_1 and innodb_fts.innodb_fts_misc.
  
  Approved by Jimmy.Yang in IM.
------------------------------------------------------------
revno: 6046 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-07-01 11:17:05 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.154
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-07-01 10:49:55 +0800
    message:
      BUG#16660607 - INNODB TABLE FULLTEXT INDEX IN BOOLEAN MODE IGNORES LEADING *
      
      InnoDB returns syntax error when MyISAM ignores the leading '*'.
      In order to make transferring from MyISAM to InnoDB smooth for old users,
      we follow MyISAM's behavior by a simple modification of syntax file.
      
      rb://2717 approved by Jimmy.
------------------------------------------------------------
revno: 6045
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-06-29 11:52:50 +0200
message:
  Bug#17007529: REMOVE MYSQL SERVER SUPPORT FOR LINUXTHREADS
  
  Follow-up patch:
  Again remove unused ld_assume_kernel_is_set
  reintroduced by the patch for Bug#16750433
------------------------------------------------------------
revno: 6044
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk-bug16750433
timestamp: Fri 2013-06-28 21:46:52 +0200
message:
  Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL
                 THREAD STATEMENTS
  
  Updated MTR test results
------------------------------------------------------------
revno: 6043
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk-bug16750433
timestamp: Fri 2013-06-28 14:16:13 -0500
message:
  Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL
                 THREAD STATEMENTS
  
  1) New instrumentation to capture replicated statements
  
     The new instrument "statement/rpl/relay_log" controls
     instrumentation for statements executed from the relay log.
  
  2) New test rpl_statements.test verifies new instrumentation
  
  3) Renamed instrument "statement/com/(stmt_info_new_packet)"
     to "statement/com/new_packet".
  
  4) Updated tests affected by the new instrumentation
------------------------------------------------------------
revno: 6042
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-smem
timestamp: Fri 2013-06-28 20:09:42 +0200
message:
  Bug#16792349: YET MORE UNUSED #IFDEFS
  
  Additional patch #3:
  Remove HAVE_NAMED_PIPE and _CUSTOMCONFIG_
  
  Also remove HAVE_SMEM by converting it into
  _WIN32 && !EMBEDDED_LIBRARY (rather than
  having serveral #define and #undef).
------------------------------------------------------------
revno: 6041 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B16996656-trunk
timestamp: Fri 2013-06-28 17:43:44 +0300
message:
  merge 5.6->trunk
    ------------------------------------------------------------
    revno: 3902.242.153 [merge]
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16996656-5.6
    timestamp: Fri 2013-06-28 17:42:20 +0300
    message:
      merge
------------------------------------------------------------
revno: 6040 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B16996656-trunk
timestamp: Fri 2013-06-28 17:42:42 +0300
message:
  merge
    ------------------------------------------------------------
    revno: 6038.1.2 [merge]
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16996656-trunk
    timestamp: Fri 2013-06-28 17:27:36 +0300
    message:
      addendum to the fix for bug #16996656 for trunk :
      - remove an unused variable
      - fix a typo in the test file comments
      - fix the findopt() comments to reflect the updated 
      functionality
        ------------------------------------------------------------
        revno: 3902.255.2 [merge]
        committer: Georgi Kodinov <georgi.kodinov@oracle.com>
        branch nick: B16996656-5.6
        timestamp: Fri 2013-06-28 17:16:25 +0300
        message:
          merge 5.5->5.6
            ------------------------------------------------------------
            revno: 2875.525.71 [merge]
            committer: Georgi Kodinov <georgi.kodinov@oracle.com>
            branch nick: B16996656-5.5
            timestamp: Fri 2013-06-28 17:13:44 +0300
            message:
              merge back to the 5.5 tree and fix indentation
        ------------------------------------------------------------
        revno: 3902.255.1 [merge]
        committer: Georgi Kodinov <georgi.kodinov@oracle.com>
        branch nick: B16996656-5.6
        timestamp: Fri 2013-06-28 17:15:27 +0300
        message:
          merged back the 5.6 tree
    ------------------------------------------------------------
    revno: 6038.1.1 [merge]
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16996656-trunk
    timestamp: Fri 2013-06-28 17:20:38 +0300
    message:
      merge of the main tree to the working trunk tree
        ------------------------------------------------------------
        revno: 6027.1.1 [merge]
        committer: Georgi Kodinov <georgi.kodinov@oracle.com>
        branch nick: B16996656-trunk
        timestamp: Thu 2013-06-27 12:23:19 +0300
        message:
          Bug #16996656: UNIQUE OPTION PREFIXES NOT DEPRECATED IN 5.5+\
          
          trunk version : stop accepting long command line option prefixes.
          Test cases updated to specify the full command line option names.
          performance schema test on amibguous options prefixes shortened
          the wl6978 test on deprecation warning shortened to remove 
          server side test and test only client side.
            ------------------------------------------------------------
            revno: 3902.254.1 [merge]
            committer: Georgi Kodinov <georgi.kodinov@oracle.com>
            branch nick: B16996656-5.6
            timestamp: Wed 2013-06-26 13:58:23 +0300
            message:
              merge
                ------------------------------------------------------------
                revno: 2875.534.1
                committer: Georgi Kodinov <georgi.kodinov@oracle.com>
                branch nick: B16996656-5.5
                timestamp: Wed 2013-06-26 12:19:02 +0300
                message:
                  Bug #16996656: UNIQUE OPTION PREFIXES NOT DEPRECATED IN 5.5+
                  
                  Backported the deprecation warnings from WL#6978 to 5.5
------------------------------------------------------------
revno: 6039 [merge]
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-28 16:24:49 +0200
message:
  Null-merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.152
    committer: Christopher Powers <chris.powers@oracle.com>
    branch nick: mysql-5.6-bug16750433
    timestamp: Fri 2013-06-28 07:48:12 -0500
    message:
      Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL
                     THREAD STATEMENTS
      
      1) New instrumentation to capture replicated statements
      
         The new instrument "statement/rpl/relay_log" controls
         instrumentation for statements executed from the relay log.
      
      2) New test rpl_statements.test verifies new instrumentation
      
      3) Renamed instrument "statement/com/(stmt_info_new_packet)"
         to "statement/com/new_packet".
      
      4) Updated tests affected by the new instrumentation
      
      
      ******
      Bug#16750433 - THE STATEMENT DIGEST DOES NOT SHOW THE SLAVE SQL
                     THREAD STATEMENTS
            
      1) New instrumentation to capture replicated statements.
            
         The new instrument "statement/rpl/relay_log" controls
         instrumentation for statements executed from the relay log.
            
      2) New test rpl_statements.test verifies new instrumentation.
            
      3) Renamed instrument "statement/com/(stmt_info_new_packet)"
         to "statement/com/new_packet".
           
      4) Updated tests affected by the new instrumentation.
------------------------------------------------------------
revno: 6038
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-28 15:06:45 +0200
message:
  Bug#16764131: Bug#69138: Wasted work in method
                           Item_in_subselect::single_value_transformer
  
  Patch that aborts loop when criterion is first met, and removes a redundant
  comparison. Based on a community contribution by Po-Chun Chang.
------------------------------------------------------------
revno: 6037
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Fri 2013-06-28 14:07:14 +0200
message:
  Whitespace cleanup in partitioning files,
  requested by reviewer of bug#16589511.
  
  space at end of line removal,
  tab -> space conversion.
------------------------------------------------------------
revno: 6036 [merge]
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Fri 2013-06-28 13:52:06 +0200
message:
  merge of bug#16589511 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.151 [merge]
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: topush-5.6
    timestamp: Fri 2013-06-28 13:40:52 +0200
    message:
      Manual merge of bug#16589511 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.70
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Fri 2013-06-28 13:18:16 +0200
        message:
          Bug#16589511: MYSQL_UPGRADE FAILS TO WRITE OUT ENTIRE
          ALTER TABLE ... ALGORITHM= ... STATEMENT
          
          The problem was an intermediate buffer of smaller size,
          which truncated the alter statement.
          
          Solved by providing the size of the buffer to be allocated through
          the function call, instead of using an one-size-fits-all stack buffer
          inside the function.
------------------------------------------------------------
revno: 6035 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Fri 2013-06-28 10:56:14 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.150
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-bug16988012valgrind
    timestamp: Fri 2013-06-28 10:24:31 +0200
    message:
      Bug#16988012 RQG_OPT_SUBQUERY_VALGRIND DETECTED UNINITIALIZED VAR ITEM_FIELD::VAL_STR
      
      Do not mark_as_null_row() for const tables in JOIN::clear()
      
      This is a regression from
      Bug#16620047 INCORRECT QUERY RESULT (AFTER SERVER UPGRADE)
------------------------------------------------------------
revno: 6034 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-16960800
timestamp: Fri 2013-06-28 09:29:07 +0200
message:
  Automerge 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.242.149
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-28 09:27:11 +0200
    message:
      Bug#16960800: RANGE OPTIMIZER BELIEVES THAT GEOM FUNCTIONS 
                          RETURN ROWID ORDERED RESULTS
            
      The range optimizer needs to know if the rows returned from a 
      range scan are ordered on ROWID. Multiple indexes that have 
      this property can be intersected or union'ed.
            
      However, the range optimizer believes that any GEOM function 
      on a spatial index returns rows in ROWID order. This is not 
      correct. The result is that the range optimizer may choose to 
      do index merge intersect or index merge union involving a 
      spatial index. This may in turn result in missing rows.
      
      The fix is to let ha_myisam::index_flags() return the 
      HA_KEY_SCAN_NOT_ROR bit for spatial indexes.
------------------------------------------------------------
revno: 6033
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-28 04:54:22 +0200
message:
  Bug#17022890 : Skip tests in valgrind runs without big-test. Remove this once the bug is fixed
------------------------------------------------------------
revno: 6032 [merge]
committer: Guilhem Bichot <guilhem.bichot@oracle.com>
branch nick: trunk5
timestamp: Thu 2013-06-27 21:39:19 +0200
message:
  merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.148
    committer: Guilhem Bichot <guilhem.bichot@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-06-27 21:37:12 +0200
    message:
      fix for pb2
------------------------------------------------------------
revno: 6031 [merge]
committer: Guilhem Bichot <guilhem.bichot@oracle.com>
branch nick: trunk5
timestamp: Thu 2013-06-27 16:57:34 +0200
message:
  merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.147
    committer: Guilhem Bichot <guilhem.bichot@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-06-27 10:47:41 +0200
    message:
      Fix for Bug#16961803 UNION OF DERIVED TABLES RETURNS WRONG RESULTS WITH "1=0/FALSE"-CLAUSES
      (almost a copy of Roy's suggestion - thanks!).
      Bug introduced by revid:guilhem.bichot@oracle.com-20121124143402-g8wueuzfm4hm8br1 .
      There already existed some logic so that if we are optimizing SELECT2
      in SELECT1 ... FROM (SELECT2)
      we never set best_rowcount to zero or one unless we are sure that this
      count is exact.
      Indeed a count of zero or one has the consequence that SELECT1 treats
      the derived table as constant, a decision which cannot be rolled back,
      and which leads to catastrophic consequences if, when we later
      materialize, the derived table turns out to not have the anticipated
      row count.
      The logic in question forgot to apply itself to this case:
      SELECT1 ... FROM (SELECT2 UNION SELECT3 etc.)
------------------------------------------------------------
revno: 6030 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-review
timestamp: Thu 2013-06-27 16:48:58 +0200
message:
  Automerge 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.242.146
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-27 16:46:44 +0200
    message:
      BUG#16916596 Post push fix
------------------------------------------------------------
revno: 6029
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-offsetof
timestamp: Thu 2013-06-27 13:18:10 +0200
message:
  Bug#16748528: CMAKE: ASSUME C STANDARD LIBRARY HEADER FILES EXIST
  
  Additional patch #2:
  Remove offsetof macro, offsetof is part of stddef.h and thus
  available on all supported platforms.
------------------------------------------------------------
revno: 6028 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk2
timestamp: Thu 2013-06-27 17:12:02 +0800
message:
  Merge mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.145
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-27 16:30:15 +0800
    message:
      Need have_debug.inc for i_innodb/innodb_fts_misc.test
------------------------------------------------------------
revno: 6027 [merge]
committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-27 10:14:59 +0200
message:
   - null merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.242.144 [merge]
    committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-27 10:11:06 +0200
    message:
      - null merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.69
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-06-27 10:08:30 +0200
        message:
          Updated copyright year in the spec file
------------------------------------------------------------
revno: 6026 [merge]
committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-27 10:00:26 +0200
message:
    Null merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.253.1 [merge]
    committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-27 09:37:59 +0200
    message:
       - Null merge from 5.5 to 5.6, updated the spec file for 5.6.13 release
    ------------------------------------------------------------
    revno: 3902.252.1 [merge]
    committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-27 09:48:31 +0200
    message:
      Null merge from 5.5 to 5.6, updated the spec file for 5.6.13 release
    ------------------------------------------------------------
    revno: 3902.242.143 [merge]
    committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-27 09:55:56 +0200
    message:
       Null merge from 5.5 to 5.6, updated the spec file for 5.6.13 release
       - Added changelog entries
        ------------------------------------------------------------
        revno: 2875.525.68
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-06-27 09:18:48 +0200
        message:
          - Spec file cleanup for 5.5.33 release to resolve rpm dependencies bugs
          
          Bug16785036 - RPM REQUIRES: MISSING PACKAGES ON RHEL 6 (AND PROBABLY 5)
          Bug 16878042 - CANNOT KEEP SEVERAL MAJOR VERSIONS OF MYSQL IN THE SAME YUM REPOSITORY
        ------------------------------------------------------------
        revno: 2875.525.67
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-06-26 11:43:44 +0200
        message:
          Cleaned up spec file for 5.5.33 release
------------------------------------------------------------
revno: 6025
committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-27 12:53:43 +0530
message:
  Removing unwanted comment (these test are already ported to run with innodb default engine.)
  Comment:
  "# The include statement below is a temp one for tests that are yet to
   #be ported to run with InnoDB,
   #but needs to be kept for tests that would need MyISAM in future."
------------------------------------------------------------
revno: 6024 [merge]
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-27 08:54:13 +0200
message:
  Merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.142
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-sb2
    timestamp: Thu 2013-06-27 08:50:06 +0200
    message:
      Bug#16369522: Assertion failed: !tables || thd->lex->is_query_tables_locked()
      
      The server exits when presented with a query like the following
      
      SELECT (SELECT 1 FROM t1) IN (SELECT a FROM t1);
      
      when attempting to evaluate the constant left-hand argument to the
      IN subquery predicate. This constant evaluation occurs already in
      Item_in_subselect::fix_fields(), through the call convert_constant_item().
      
      Even though the subquery is const, we do not allow execution of subqueries
      before tables have been locked.
      
      The problem is the Item_cache object that is used to wrap the left-hand
      argument to the IN predicate. It does not propagate the correct const-ness
      attributes, and hence the resolver thinks it is safe to evaluate the
      subquery. This happens because the Item_cache is not a first class
      Item object. Among other things, it does not have a fix_fields()
      function. Instead, it relies on ad-hoc code to assign values to
      attributes such as used_tables() and const_item().
      
      In this particular use of Item_cache, it also adjusts used_tables
      information for the left-hand expression: During subquery transformation,
      the left-hand expression and the expressions selected from the subquery
      are converted to an equality that is attached to the subquery's query
      block. Originally, the LHE is resolved in scope of the outer query block
      and thus has used_tables information relative to this, but this
      information has to be replaced with an OUTER_REF indicator when being
      attached to the inner query block. The Item_cache object took care of
      this by explicitly setting the OUTER_REF bit when a table was referenced
      in the LHE.
      
      However, when building the equality predicate, an Item_direct_ref
      object is always used to wrap the included expressions. This object
      can naturally handle the OUTER_REF by setting depended_from for the
      object to the outer query block (together with select_lex->context
      pointing to the inner query block).
      
      The implementation of Item_ref::const_item() returns FALSE for all
      objects that have non-zero used_tables() which is true because the
      OUTER_REF indicator is set, and hence early evaluation is prevented.
      
      Notice also that const items need not be designated as outer.
      Ignoring those occurrences was required to preserve multiple equality
      handling for equalities involving constant values.
      
      We have a change in EXPLAIN for the following type of query:
      
      SELECT col_varchar_key
      FROM t1
      WHERE ((SELECT i1 FROM t0 WHERE i1 = 7),
             (SELECT i1 FROM t0 WHERE i1 = 2)) NOT IN
          (SELECT col_int_key, col_int_nokey FROM t2);
      
      When transforming the NOT IN subquery using IN-TO-EXISTS, the subqueries in
      the left hand side are tested for const-ness. The tests fail because tables are not yet locked at this point. Hence, left->depended_from is set to the outer
      query block.
      
      As a result, in get_store_key(), a store_key_item is created instead of a
      store_key_const_item, which causes explain_ref_key() to print "func" for
      the key reference instread of "const".
      
      A similar query is causing change in
      mysql-test/suite/opt_trace/r/bugs_no_prot_none.result.
      
      sql/item.h
        Class Item_cache needed a specific implementation of
        resolved_used_tables() that forwarded the call to the example member.
      
      sql/item_cmpfunc.cc
        In Item_in_optimizer::fix_left(), used tables setting for cache object
        could be simplified.
      
      sql/item_subselect.cc
        In Item_in_subselect::single_value_transformer() and
        Item_in_subselect::row_value_in_to_exists_transformer, when wrapping
        the left-hand expressions in an Item_direct_ref object, set the
        depended_from field of the Item_direct_ref to point to the query block
        where the subquery predicate is located, unless the expression is const.
------------------------------------------------------------
revno: 6023
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-27 14:25:05 +0800
message:
  Fix Bug#16466664 MEMCACHED.MEMC280_MISC KILLS THE SERVER ON SOME
  PLATFORMS
  
  File descriptor leak in memcached cause this bug.
  When InnoDB Memcached plugin is initializing, it'll call libevent
  function event_init to initialize the event subsystem. In this function,
  it'll create file and sockets for handling event. These sockets and
  files should be freed by call event_base_free.
  We found 3 leak places:
  1: Worker thread sockets that created in event_init are not freed.
  2: Main thread sockets that created in event_init are not freed.
  3: Sockets for dispatcher are not freed.
  
  rb#2755 Approved by Jimmy.
------------------------------------------------------------
revno: 6022
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-27 07:43:11 +0200
message:
  Added smaller test suite for tier2 platforms. Improved comments in default.weekly
------------------------------------------------------------
revno: 6021
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-06-26 14:45:05 -0500
message:
  bug#16802288 - FAILING ASSERTION: PREBUILT->SQL_STAT_START ||
  TRX->STATE == TRX_STATE_ACTIVE
  
  Add error handling for DB_DEADLOCK and DB_LOCK_TABLE_FULL to
  handler::records() for COUNT(*).  Also rollback transaction when
  handler::records receive DB_DEADLOCK, DB_LOCK_TABLE_FULL or
  DB_LOCK_WAIT_TIMEOUT.
  
  Approved by Sunny at rb#2714
------------------------------------------------------------
revno: 6020 [merge]
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-26 16:16:31 +0200
message:
  Merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.141
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-sb3
    timestamp: Wed 2013-06-26 16:15:01 +0200
    message:
      Bug#16436383: Crash in Item_ident::fix_after_pullout
      
      The problem occurs because an Item_aggregate_ref object contains
      something that I thought was illegal:
      
        depended_from != NULL && context->select_lex == depended_from
      
      Usually, if depended_from is non-NULL, it points to a query block that
      is different from context->select_lex, but in this case they are equal.
      
      Because of this, the loop in Item_ident::fix_after_pullout() that
      iterates over all nested query blocks from context->select_lex
      to depended_from will never find the end criterion and is thus likely
      to fail.
      
      However, the reason for this is that the aggregation of set
      functions in a subquery, where the set function is placed more than 2
      levels from the qualifying query, is wrong. This query with the
      outer query as the qualifying query and the inner-most subquery
      containing the set operation is OK (the query blocks are 2 levels apart):
      
      SELECT (SELECT (SELECT COUNT(ot.a) FROM t1) ) FROM t1 AS ot;
      
      The SQL standard tells that the aggregation of COUNT(ot.a) should be
      performed in the "inner-most qualifying query" of the set function,
      and the qualifying query for the column reference ot.a is the
      outer-most query.
      
      However, if we extend the statement with another subquery, so that the
      inner query is at level 3 (the outer-most query is at level 0), then
      the code in Item_sum::register_sum_func() will attach the query to
      the second inner-most query block instead of the outer-most block.
      
      Item_sum::register_sum_func() is modified so that it will attach the
      set function to the outer-most query block where the function can be
      aggregated. (If there are more than one outer reference in such set
      function, the set function should be aggregated on the inner-most level,
      where each level is calculated as described above).
      
      I am not convinced that the current identification of aggregation query
      block is correct - I think that sometimes we accept invalid queries.
      However, this bug fix must be pushed now because of BPS. I will follow
      up with a new bug report that spots invalid aggregation queries
      (if I find them).
      
      include/my_global.h
        Changed nesting_map to always be a 64-bit data type. Thus, there will
        be no platform issues concerning this type.
        Validated on mysql-5.6-itch.
      
      mysql-test/r/select_all.result
      mysql-test/r/select_all_bka.result
      mysql-test/r/select_all_bka_nixbnl.result
      mysql-test/r/select_icp_mrr.result
      mysql-test/r/select_icp_mrr_bka.result
      mysql-test/r/select_icp_mrr_bka_nixbnl.result
      mysql-test/r/select_none.result
      mysql-test/r/select_none_bka.result
      mysql-test/r/select_none_bka_nixbnl.result
        Updated earlier wrong plans because of the aggregation placement bug.
      
      sql/item_sum.cc
        In Item_sum::register_sum_func(), update the way that query block
        for an Item_sum object is calculated.
        Also added some simple refactoring:
        - master_unit()->outer_select() replaced with synonym outer_select()
        - logic simplified so if statement is made redundant.
------------------------------------------------------------
revno: 6019
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-review
timestamp: Wed 2013-06-26 14:57:47 +0200
message:
  Bug#14554639 ADD CMAKE OPTIONS TO FORCE BUILDING CERTAIN PLUGINS
  
  If cmake was invoked with -DWITH_AUTHENTICATION_PAM=1
  then fail if we are unable to build the PAM plugin.
------------------------------------------------------------
revno: 6018
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-review
timestamp: Wed 2013-06-26 14:32:41 +0200
message:
  Bug#16999777 MYSQLD.EXE CRASHES WHEN SPECIFYING --LOCAL-SERVICE ON THE COMMAND LINE
  
  Do not dereference a null pointer.
------------------------------------------------------------
revno: 6017 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-26 17:18:52 +0530
message:
  BUG#16904035 SHOW STATUS-EXCESSIVE LOCKING ON
  LOCK_ACTIVE_MI AND ACTIVE_MI->RLI->DATA_LOCK
  
  Merging post push fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.140
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-26 17:16:48 +0530
    message:
      BUG#16904035 SHOW STATUS - EXCESSIVE LOCKING ON
      LOCK_ACTIVE_MI AND ACTIVE_MI->RLI->DATA_LOCK
      
      Fixing a post push issue in test script
------------------------------------------------------------
revno: 6016 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-review
timestamp: Wed 2013-06-26 13:14:28 +0200
message:
  Automerge 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.242.139
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-26 13:09:49 +0200
    message:
      BUG#16916596: Post-push fix
------------------------------------------------------------
revno: 6015
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-bug17010950
timestamp: Wed 2013-06-26 10:33:00 +0200
message:
  Bug#17010950 ROBUSTNESS OF PERFSCHEMA TEST SUITE
  
  No server code affected, this fix affects only test scripts.
  
  Before this fix, some tests scripts could fail when executed with --repeat=2
  
  This fix improves the test robustness, to prevent spurious failures.
  
  Tests sizing_*
  
  Problem:
  spurious failures in the output of SHOW ENGINE PERFORMANCE_SCHEMA STATUS,
  with the sizes on internal LF_HASH tables.
  
  Solution:
  The size of internal tables is not predictable,
  enforce a clean server restart to have a known intitial state.
  
  Test dml_setup_instruments
  
  Problem:
  Some instruments were changed to TIMED=NO,
  affecting later tests.
  
  Solution:
  Restore the content of setup_instruments to the initial state.
------------------------------------------------------------
revno: 6014 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk2
timestamp: Wed 2013-06-26 15:16:28 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.138
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-26 15:08:04 +0800
    message:
      Fix Bug#16834860 - FTS: CRASH AFTER RENAMING TABLE TO DIFFERENT DATABASE 
      
      rb://2480 approved by Inaam
------------------------------------------------------------
revno: 6013
committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
branch nick: migration
timestamp: Wed 2013-06-26 11:42:11 +0530
message:
  WL#7112 Migrate federated test suite to run with innodb storage engine
------------------------------------------------------------
revno: 6012
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: trunk2
timestamp: Wed 2013-06-26 11:38:02 +0530
message:
  Bug #16971203 TEST INNODB-WL6045-LINUX TEST FAILS AT END ON SOLARIS
                WITH DEBUG BUILD
  Fix: In perl script, flock requires FILEHANDLE to be opened with write intent
       to use LOCK_EX.
------------------------------------------------------------
revno: 6011 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-26 10:06:53 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.137 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-26 10:04:33 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.66
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-06-26 10:02:42 +0530
        message:
          Bug #16994338 PARSING TAP OUTPUT OF UNIT TEST EXPLAIN_FILENAME-T FAILS
          
          Problem:
          
          The problem is that explain_filename-t is not printing a test plan as
          required by the TAP protocol. The test invokes plan(NO_PLAN) but does not
          invoke exit_status() at the end, where the plan would be printed.
          
          Solution:
          
          Invoke exit_status() at the end.
------------------------------------------------------------
revno: 6010
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-26 11:38:00 +0900
message:
  Fix Bug#16817823 : ASSETION IN UT_ABORT() AT /STORAGE/INNOBASE/UT/UT0DBG.CC:47
  
  lock_rec_convert_impl_to_expl_for_trx() had race condition
  
  rb#2728 approved by Sunny
------------------------------------------------------------
revno: 6009
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-linuxthreads
timestamp: Tue 2013-06-25 15:02:46 +0200
message:
  Bug#17007529: REMOVE MYSQL SERVER SUPPORT FOR LINUXTHREADS
  
  This patch removes support for LinuxThreads.
  It was superseded by NPTL in Linux 2.6 (2003).
  
  The patch also removes a workaround for an ancient glibc bug.
------------------------------------------------------------
revno: 6008
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Tue 2013-06-25 11:14:49 +0200
message:
  Bug#17008453 COMPLIATION ERROR WHEN COMPILING PAGE0ZIP.CC ON SOLARIS 10/X86
  
  The fix is to include "univ.i" which includes "my_global.h"
  before including std::map
------------------------------------------------------------
revno: 6007 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Tue 2013-06-25 08:55:54 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.136
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2013-06-25 08:54:02 +0200
    message:
      Bug#16809055 MYSQL 5.6 AND 5.7 STILL USE LIBMYSQLCLIENT.SO.18
      
      Post-push fix: remove some debug output.
------------------------------------------------------------
revno: 6006 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-16916596
timestamp: Tue 2013-06-25 08:43:28 +0200
message:
  Merge BUG#16916596: 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.242.135
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-25 08:34:10 +0200
    message:
      Bug#16916596: "ORDER BY...LIMIT" OPTIMIZATION CHOSE 
                    NON-ORDERING INDEX
      
      Consider a table with a compound index "idx (kp1, kp2, kp3)"
      and the query "SELECT ... ORDER BY kp3 LIMIT x".
      
      For this query, the optimizer may decide that although index 'idx'
      did not seem like the best way to access the table in the first 
      place, it may still be a good index when LIMIT is taken into 
      account iff index 'idx' gives correct ordering. The reason is
      that even an expensive index (index that produces too many 
      rows) like 'idx' may be cheap if execution is allowed to exit
      early due to the LIMIT.
      
      However, for index 'idx' to provide sorted rows, the query
      must have equality predicates on kp1 and kp2. In this bug, 
      the query only had equality predicate on kp1. Even so, the 
      ORDER BY... LIMIT optimization was used to switch to index 
      'idx', effecively chosing a much worse index without achieving 
      the intention.
      
      The fix is to only consider indexes that provide correct 
      ordering. This previously worked for single keypart indexes but
      not multiple keypart indexes. However, instead of adding yet 
      another if() block, all the tests for applicable ORDER BY...
      LIMIT indexes in make_join_select() are replaced by a call to
      test_if_order_by_key() which exists for the very same 
      purpose - to answer the question "does this index provide 
      ordered output".
------------------------------------------------------------
revno: 6005 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-25 07:56:02 +0200
message:
  Merge up from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.134
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-25 07:26:42 +0200
    message:
      Removed running in embedded mode with 4k and 8k page size as agreed in discussion with developer. 
      Removed debug-server runs with embedded since we do not build debug version of embedded server
      Fixed a typo
------------------------------------------------------------
revno: 6004 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-06-25 11:52:11 +0800
message:
  Null merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.133 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-25 11:50:18 +0800
    message:
      Null merge from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.525.65
        committer: bin.x.su@oracle.com
        branch nick: mysql-5.5-bug16876388
        timestamp: Tue 2013-06-25 09:42:54 +0800
        message:
          Bug 16876388 - PLEASE BACKPORT BUG#16208542 TO 5.5
          
          Straight forward backport.
          
          Approved by Jimmy, rb#2656
------------------------------------------------------------
revno: 6003 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-06-25 10:04:52 +0800
message:
  Null merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.132
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-25 10:03:56 +0800
    message:
      Null merge from 5.5
------------------------------------------------------------
revno: 6002 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Mon 2013-06-24 17:26:39 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.131
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-06-24 17:15:35 +0200
    message:
      Bug#16809055 MYSQL 5.6 AND 5.7 STILL USE LIBMYSQLCLIENT.SO.18
      
      With this patch, the libmysql/ directory contains:
      libmysqlclient.a
      libmysqlclient_r.a -> libmysqlclient.a
      libmysqlclient_r.so -> libmysqlclient.so*
      libmysqlclient_r.so.18 -> libmysqlclient.so.18*
      libmysqlclient_r.so.18.1.0 -> libmysqlclient.so.18.1.0*
      libmysqlclient.so -> libmysqlclient.so.18*
      libmysqlclient.so.18 -> libmysqlclient.so.18.1.0*
      libmysqlclient.so.18.1.0*
------------------------------------------------------------
revno: 6001 [merge]
committer: Oystein Grovlen <oystein.grovlen@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 14:13:35 +0200
message:
  Automerge mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.130
    committer: Oystein Grovlen <oystein.grovlen@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 14:11:43 +0200
    message:
      Bug#16434374 - INCORRECT RESULTS FOR FULL TEXT USING IN BOOLEAN 
                     MODE ( INNODB ONLY )
      
      Addendum:  Hardcode engine when creating tables for InnoDB.
      Including have_innodb.inc does not change default engine 
      in embedded mode.
------------------------------------------------------------
revno: 6000 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 16:49:51 +0530
message:
  Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT
  WORKING AS EXPECTED
  Null merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.129
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 16:47:38 +0530
    message:
      Bug#15831300 SLAVE_TYPE_CONVERSIONS=ALL_NON_LOSSY NOT
      WORKING AS EXPECTED
      
      Problem: In RBR format, slave_type_conversions='ALL_NON_LOSSY'
      was not working properly in some cases like 'int unsigned'
      column at master was altered directly on slave into
      'bigint signed/bigint unsigned'.
      
      Analysis: In RBR format, when there is a datatype mismatch
      and it is smaller datatype->larger datatype, slave
      checks whether `slave_type_conversions` set contains
      'ALL_NON_LOSSY' or not. If it contains 'ALL_NON_LOSSY', it
      allows the conversion. In the process of converting the data
      from smaller datatype value to larger datatype value,
      slave prepares a conversion temporary table for all the
      mismatched columns. The column signedness information is not
      transferred from master to slave. Hence for this temporary
      table columns, slave treated signedness of the column as
      'signed' for all the columns. Due to this treatment, any data
      for unsigned column at master was creating issues at slave
      (correct data was not getting inserted).
      
      Fix: Introduced two values in slave_type_conversions set
      'ALL_SIGNED' and 'ALL_UNSIGNED'. This value tells the slave
      how to treat the values which are coming from master
      If 'ALL_SIGNED' is set, then treat all integer type column
      data as signed values (default behaviour). If 'ALL_UNSIGNED'
      is set, then treat all integer type column data as unsigned
      values. If both 'ALL_SIGNED','ALL_UNSIGNED' are specified,
      then 'ALL_SIGNED' will take higher priority than 'ALL_UNSIGNED'.
      Eg: SET slave_type_conversions='ALL_NON_LOSSY,ALL_UNSIGNED'.
------------------------------------------------------------
revno: 5999 [merge]
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 14:08:06 +0300
message:
  Merge mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.128 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 14:02:21 +0300
    message:
      Merge mysql-5.5 -> mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.64
        committer: Vasil Dimov <vasil.dimov@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-06-24 13:56:11 +0300
        message:
          Fix nondeterminism in innodb_bug16417635.test
------------------------------------------------------------
revno: 5998
committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 15:03:02 +0530
message:
  BUG#16988017: adding a skip command for those, failing sporadically on freedbsd platform
------------------------------------------------------------
revno: 5997
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef8
timestamp: Mon 2013-06-24 09:17:52 +0200
message:
  Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS
  
  Additional patch #3:
  
  1:Remove HAVE_SIGWAIT. sigwait() is part of POSIX and
    is available on all non-Windows supported platforms.
    Also remove replacement sigwait() implementation.
  2:Remove HAVE_SIGTHREADMASK. Not available on any
    supported platform.
  3:Remove HAVE_PTHREAD_KILL. Only one usage of
    pthread_kill() is protected by HAVE_PTHREAD_KILL.
    All other usages are protected by _WIN32.
  4:Remove HAVE_PTHREAD_ATTR_CREATE. Not needed as a
    consequence of 1.
  5:Remove HAVE_PTHREAD_ATTR_SETSCOPE. Similar to 1,
    this is part of POSIX and available on all non-Windows
    supported platforms.
------------------------------------------------------------
revno: 5996 [merge]
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 11:51:07 +0530
message:
  - Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.127
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 11:50:36 +0530
    message:
      - bug#16066351: valgrind: uninitialized value when parsing weird table names
        - Restart the server to ensure clearing of stale entries introduce due to
          failure of create table statement.
------------------------------------------------------------
revno: 5995 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug16753869_mysql-trunk
timestamp: Mon 2013-06-24 11:40:04 +0530
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.126 [merge]
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug16753869_mysql-5.6
    timestamp: Mon 2013-06-24 11:30:42 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.63
        committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
        branch nick: Bug16753869_mysql-5.5
        timestamp: Mon 2013-06-24 11:11:55 +0530
        message:
          Bug#16753869:INCORRECT TRUNCATION OF LONG SET EXPRESSION IN
          LOAD DATA CAN CAUSE SQL INJECTION
          
          Problem:
          =======
          A long SET expression in LOAD DATA is incorrectly truncated
          when written to the binary log.
          
          Analysis:
          ========
          LOAD DATA statements are reconstructed once again before
          they are written to the binary log. When SET clauses are
          specified as part of LOAD DATA statement, these SET clause
          user command strings need to be stored as it is inorder to
          reconstruct the original user command.  At present these
          strings are stored as part of SET clause item tree's
          top most Item node's name itself which is incorrect. As an
          Item::name can be of MAX_ALIAS_NAME (256) size. Hence the
          name will get truncated to "255".
          
          Because of this the rewritten LOAD DATA statement will be
          terminated incorrectly.  When this statment is read back by
          the mysqlbinlog tool it reads a starting single quote and
          continuos to read till it finds an ending quote. Hence any
          statement written post ending quote will be considered as
          a new statement.
          
          Fix:
          ===
          As name field has length restriction the string value
          should not be stored in Item::name.  A new String list is
          maintained to store the SET expression values and this list
          is read during reconstrution.
------------------------------------------------------------
revno: 5994 [merge]
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 11:16:33 +0530
message:
  - Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.125
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 11:15:22 +0530
    message:
      - bug#16066351: valgrind: uninitialized value when parsing weird table names
        Test case needs debug variable setting. Added prerequisite for the same.
------------------------------------------------------------
revno: 5993 [merge]
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 10:57:59 +0530
message:
  Bug#169900529 :Move nist suite to internal
    ------------------------------------------------------------
    revno: 3902.242.124 [merge]
    committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 10:49:21 +0530
    message:
      Bug#169900529 :Move nist suite to internal
        ------------------------------------------------------------
        revno: 2875.525.62
        committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-06-24 10:42:40 +0530
        message:
          Bug#169900529 :Move nist suite to internal
------------------------------------------------------------
revno: 5992
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 13:10:07 +0800
message:
  Bug#16878043 SEMI-SYNC REPLICATION IS VERY SLOW WITH MANY CLIENTS
  
  Postfix, corrected the micro name from __WIN__ to _WIN32
------------------------------------------------------------
revno: 5991
committer: prabakaran thirumalai <prabakaran.thirumalai@oracle.com>
branch nick: mysql-trunk-qc
timestamp: Mon 2013-06-24 10:25:36 +0530
message:
  Bug#13553905 : OUT OF MEMORY IN OPEN_NORMAL_AND_DERIVED_TABLES
  NOT HANDLED
  
  Cause : Uninitialized TABLE_SHARE pointer variable is 
  returned from alloc_table_share() function in case of memory 
  allocation failure.
  
  Fix : Initialize TABLE_SHARE pointer to NULL
------------------------------------------------------------
revno: 5990 [merge]
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-06-24 09:54:38 +0530
message:
  - Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.123
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-24 09:53:13 +0530
    message:
      - bug#16066351: valgrind: uninitialized value when parsing weird table names
      
        Initial checkin corrected the fix but failed to remove stale entries/files
        causing issues while these files are listed using list_files command.
        Corrected TCs to remove the stale table entries/files.
------------------------------------------------------------
revno: 5989 [merge]
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-06-23 11:32:59 +0800
message:
  Manual Merge
    ------------------------------------------------------------
    revno: 3902.242.122
    committer: Libing Song <libing.song@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sun 2013-06-23 09:55:39 +0800
    message:
      Bug#16878043 SEMI-SYNC REPLICATION IS VERY SLOW WITH MANY CLIENTS
      
      if rpl_semi_sync_master_timeout is set to a huge value,
      semi-synchronous replication becomes very slow, especially when
      many sessions are working parallel. semisync code uses a loop method
      to calculate woken time, before it starts to wait. Bigger
      rpl_semi_sync_master_timeout value causes more interations.
      
      In the patch, an effective method is used instead of the original
      method to calculate woken time. And the code is moved out the wait loop,
      so it is executed only once before starting the wait loop.
------------------------------------------------------------
revno: 5988 [merge]
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Sat 2013-06-22 16:43:24 +0200
message:
  Upmerge 16990423 5.6 => trunk, undo old fix
    ------------------------------------------------------------
    revno: 3902.242.121
    committer: Bjorn Munch <bjorn.munch@oracle.com>
    branch nick: openfile-56
    timestamp: Sat 2013-06-22 14:54:16 +0200
    message:
      Bug #16990423 SOME TESTS FOR TABLE CACHE VARIABLES FAIL IF OPEN FILES LIMIT IS TOO LOW
      
        Make affected tests skip if open_files_limit < 5000
        Modified backport from trunk
------------------------------------------------------------
revno: 5987 [merge]
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Fri 2013-06-21 20:34:54 +0200
message:
  Emergency fix: test i_innodb.innodb_bug16066351 freezes windows tests
    ------------------------------------------------------------
    revno: 3902.242.120
    committer: Bjorn Munch <bjorn.munch@oracle.com>
    branch nick: main-56
    timestamp: Fri 2013-06-21 20:33:48 +0200
    message:
      Emergency fix: test i_innodb.innodb_bug16066351 freezes windows tests
------------------------------------------------------------
revno: 5986 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Fri 2013-06-21 16:33:57 +0200
message:
  merge 5.6 => 5.7
    ------------------------------------------------------------
    revno: 3902.242.119
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Fri 2013-06-21 15:51:28 +0200
    message:
      Sql_condition::set_subclass_origin() did
      memcmp("MySQL", STRING_WITH_LEN("ISO 9075"))
      which is undefined behaviour
      
      Solution: refactor set_class_origin() and set_subclass_origin()
      into one function set_class_origins()
    ------------------------------------------------------------
    revno: 3902.242.118 [merge]
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Fri 2013-06-21 15:31:44 +0200
    message:
      merge 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.525.61
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: 5.5
        timestamp: Fri 2013-06-21 14:18:01 +0200
        message:
          Bug#16945503 ADDRESSSANITIZER BUG IN SYS_VARS
          Sys_var_keycache inherits from some variant of Sys_var_integer
          
          Instances of Sys_var_keycache are initialized using the KEYCACHE_VAR macro,
          which takes an offset within st_key_cache.
          However, the Sys_var_integer CTOR treats the offset as if it was within
          global_system_variables (hidden within some layers of macros and fuction
          pointers)
          
          The result is that we write arbitrary data to arbitrary locations in memory.
          This all happens during static initialization of global objects,
          i.e. before we have even entered the main() function.
          
          
          Bug#12325449 TYPO IN CMAKE/DTRACE.CMAKE
          Fix typo in dtrace.cmake
------------------------------------------------------------
revno: 5985 [merge]
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-21 16:38:06 +0530
message:
  - Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.117
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-21 16:37:05 +0530
    message:
      - bug#16066351: valgrind: uninitialized value when parsing weird table names
      
        While printing UTF-8 table name, innodb was truncating the table-name
        then lead to half-cooked buffer causing valgrind issue.
        Infact with newly introduce debug error point we also see issue of improper
        error message.
      
        Buffer allocation constant needed update to new constant defined in univ.i
      
        Added test-case to cover the same.
      
        Approved by: Jimmy (rb#2691)
------------------------------------------------------------
revno: 5984 [merge]
committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Fri 2013-06-21 10:59:47 +0200
message:
  Merge 5.6->trunk.
    ------------------------------------------------------------
    revno: 3902.242.116
    committer: Norvald H. Ryeng <norvald.ryeng@oracle.com>
    branch nick: mysql-5.6-16319671
    timestamp: Fri 2013-06-21 10:33:06 +0200
    message:
      Bug#16319671 RE-EXECUTE PROCEDURE, CRASH IN ITEM_FIELD::USED_TABLES
      
      Problem: Transforming some subqueries that select date/time types or
      BIGINT to semijoin crashes the server on second execution of prepared
      statements or stored programs.
      
      In JOIN::flatten_subqueries() during the first execution, the server
      switches to the statement mem root.
      
      The semijoin transformation in convert_subquery_to_semijoin() creates
      an Item_func_eq with an Item_singlerow_subselect on the right hand
      side. For this Item_func_eq, Item_func::fix_fields() calls
      Item_bool_func2::fix_length_and_dec(), which calls
      Item_bool_func2::convert_constant_arg(). If the field given as
      parameter is a date or time type or BIGINT, convert_constant_item() is
      called to replace the item with an integer. This conversion results in
      execution of the subquery to evaluate is_null().
      
      During this subquery execution, JOIN::optimize() switches to the
      statement mem root before converting outer joins to inner joins. The
      statement mem root is already the current mem root, so this is a
      switch from the statement mem root to the statement mem root. The mem
      root switch takes a backup copy of the current thd->free_list and
      copies thd->stmt_arena->free_list to thd->free_list. JOIN::optimize()
      then calls conds->real_item()->copy_andor_structure(thd), which
      creates a new set of Item_cond_and and Item_cond_or objects, and these
      are added to thd->free_list. JOIN::optimize() then switches back to
      the old mem root, so thd->free_list is copied to
      thd->stmt_arena->free_list and the old thd->free_list is restored from
      the backup copy.
      
      When JOIN::flatten_subqueries() is done, it switches back from the
      statement mem root to the execution mem root, so thd->free_list is
      copied to thd->stmt_arena->free_list. This means that the
      Item_cond_and and Item_cond_or objects created during subquery
      optimization are lost from the free_list.
      
      After the first execution, cleanup_items() is called to reset
      Item::fixed of all items in the statement free_list. The Item_cond_and
      and Item_cond_or objects that were lost from the free_list are not
      reset.
      
      During preparation for the second execution, fix_fields() will not be
      called on already fixed items. Item_fields that are descendants of
      lost Item_cond_and or Item_cond_or objects are therefore not
      resolved. Later, the server crashes when trying to dereference a null
      pointer of an unresolved Item_field,
      
      Fix: In JOIN::optimize(), replace manual mem root switching with
      Prepared_stmt_arena_holder. The Prepared_stmt_arena_holder will test
      if the statement mem root is already active before switching.
------------------------------------------------------------
revno: 5983
committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-21 11:44:33 +0530
message:
  Bug#16436014: CRASH ITEM::SAVE_IN_FIELD, WITH ROLLUP, DEFAULT
  
  Problem:
  If table has been marked as containing only NULL values
  for all fields if it is a NULL-complemented row of an OUTER JOIN
  then rollup on the field which cannot be nullable results in crash.
  
  Analysis:
  In the query presented, as the join results in only NULL rows,
  table->null_row is set and as a result, we do not evaluate the result.
  But while checking the result of rollup_field, we check the
  null value of rollup field. As this was not updated, we try to
  access the result and crash.
  
  Fix:
  Update the null value of the rollup_field after evaluting the result.
------------------------------------------------------------
revno: 5982
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-21 11:34:28 +0530
message:
  - bug#16752546: Hitting assert
    (trx)->in_ro_trx_list == ((trx)->read_only || !(trx)->rsegs.m_redo.rseg)
    Follow-up fix. Test case turns off purge and turn it on before specific
    action. This purge concept if not enabled in embedded mode so the failure.
    Disable run of the TC for embedded mode.
------------------------------------------------------------
revno: 5981 [merge]
committer: Oystein Grovlen <oystein.grovlen@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-20 15:33:28 +0200
message:
  Merge mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.115
    committer: Oystein Grovlen <oystein.grovlen@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-20 15:31:42 +0200
    message:
      Bug#16434374 - INCORRECT RESULTS FOR FULL TEXT USING IN BOOLEAN 
                     MODE ( INNODB ONLY )
      
      Fix parameter name that gave warning with Sun compiler
------------------------------------------------------------
revno: 5980
committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-20 13:00:01 +0530
message:
  BUG#16988017: disbaled due to slow machine
------------------------------------------------------------
revno: 5979 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-20 13:17:55 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.114
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-20 12:03:40 +0800
    message:
      BUG#16927092 - ASSERT RANKING->WORDS, FTS SELECT BOOLEAN MODE
      
      Analysis & Solution:
      Regression of bug#16516193:LITERAL PHRASES CANNOT BE COMBINED WITH + OR - OPERATOR
      
      We should not assert(ranking->words != NULL) in fts_query_intersect_doc_id,
      because we can check the same doc id here more than once.
      
      rb#2680 approved by Jimmy Yang.
------------------------------------------------------------
revno: 5978
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-06-20 10:15:53 +0530
message:
  - bug#16752546: Hitting assert
    (trx)->in_ro_trx_list == ((trx)->read_only || !(trx)->rsegs.m_redo.rseg)
  
    Purge thread is trying to associate a lock with an existing trx that is
    owned by parallel running INSERT .... SELECT stmt.
    Debug assert validate state of trx before placing the lock even though
    purge thread don't plan to use member variables that it is trying to validate.
  
    Fixed by making the debug validation conditional. 
  
    --------------
    trx_set_rw_mode() promotes ro trx to rw trx. For this it acquires
    trx_sys->mutex as it needs to move trx from ro list to rw list.
    API as of now doesn't acquire trx->mutex but in future if there is other
    thread that is trying to access the trx that is being promoted then
    these 2 threads should be synced using trx->mutex.
  
    Approved by: Sunny (rb#2617)
------------------------------------------------------------
revno: 5977 [merge]
committer: Oystein Grovlen <oystein.grovlen@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-19 15:42:16 +0200
message:
  Bug#16434374 - INCORRECT RESULTS FOR FULL TEXT USING IN BOOLEAN 
                 MODE ( INNODB ONLY )
  
  Merge mysql-5.6 -> mysql-trunk
        
    ------------------------------------------------------------
    revno: 3902.242.113
    committer: Oystein Grovlen <oystein.grovlen@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-19 15:06:32 +0200
    message:
      Bug#16434374 - INCORRECT RESULTS FOR FULL TEXT USING IN BOOLEAN 
                     MODE ( INNODB ONLY )
      
      Unlike, MyISAM, InnoDB does not support Boolean full text search (FTS) on
      non-indexed columns.  Before this fix, code allowed non-indexed columns
      in MATCH expression for BOOLEAN mode, but not for NATURAL LANGUAGE mode.
      This patch fixes this issue by restricting the exception for BOOLEAN mode to 
      only apply to MyISAM and not to InnoDB.
      
      This is patch is a bit ad-hoc in the way it determines whether to allow
      non-indexed columns or not.  It exploits the fact that InnoDB supports
      an extended FTS API, while MyISAM does not.  In other words, non-indexed
      columns are only allowed if the storage engine does NOT support the 
      extended FTS API.
      
      A side effect of this patch is that when reporting an error due to 
      non-indexed columns in MATCH expression, we will no longer distinguish
      between tables without any fulltext indexes and tables with no applicable
      fulltext indexes.  In the first case, the error used to be
      ER_TABLE_HAS_NO_FT.  Now, one will get ER_FT_MATCHING_KEY_NOT_FOUND in 
      both cases.  This matches the existing behavior of NATURAL LANGUAGE mode 
      for both InnoDB and MyISAM.
------------------------------------------------------------
revno: 5976
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-cmake
timestamp: Wed 2013-06-19 13:54:46 +0200
message:
  Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS 
  
  Additional patch #2:
  Remove HAVE_TIMESPEC_TS_SEC CMake check.
  None of our supported platforms pass this check.
  According to the POSIX standard, the timespec struct 
  contains tv_sec and tv_nsec, not ts_sec and ts_nsec.
------------------------------------------------------------
revno: 5975 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Wed 2013-06-19 12:55:00 +0200
message:
  Merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.112
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Wed 2013-06-19 12:41:31 +0200
    message:
      Fix valgrind errors in unit tests.
      
      How to repeat:
      valgrind --leak-check=full <executable> --gtest_filter="-*DeathTest*" > foo
------------------------------------------------------------
revno: 5974 [merge]
committer: Sergey Glukhov <sergey.glukhov@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-19 14:26:10 +0400
message:
  5.6 -> trunk merge
    ------------------------------------------------------------
    revno: 3902.242.111
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-19 14:24:08 +0400
    message:
      Bug#16620047 INCORRECT QUERY RESULT (AFTER SERVER UPGRADE)
      Regression is introduced in Bug11760517. According to the
      comment for the Bug11760517 fix, there is an additional cleanup
      in field.h(Field::is_null() function):
      Field::is_null() now checks table->null_row before checking
      the NULL bits.
      
      Order of NULLity checking is changed, firts it checks table->null_row
      and then null_ptr[row_offset]. In our case when we evaluate first
      result record, evaluate_null_complemented_join_record() function
      is called for outer table and it sets table->null_row to true.
      Then second result record field uses table->null_row to check
      if the field is null and result is NULL instead of real value.
      
      The fix is partial reversion of the field.h change
      (return original order of NULL check). Unfortunately this
      is not sufficient. A lot of test fails in the main suite
      after reversion. It happens because of another additional
      cleanup introduced Bug11760517 fix(see the comment):
         @ sql/table.h
           mark_as_null_row() no longer sets the NULL bits of the buffer
            
      Reversion of this change fixes all the problems except one, test case
      for Bug13541761 which is actually another regression of Bug11760517 fix.
      The fix of this problem is to not touch TABLE::null_flags during
      JOIN::cleanup.
------------------------------------------------------------
revno: 5973 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-19 15:04:03 +0530
message:
  Bug#11829813  UNUSED MUTEX COMMIT_THREADS_M
  
  [Merge from 5.6]
    ------------------------------------------------------------
    revno: 3902.242.110 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-19 15:01:20 +0530
    message:
      Bug#11829813  UNUSED MUTEX COMMIT_THREADS_M
      
      [Merge from 5.5]
        ------------------------------------------------------------
        revno: 2875.525.60 [merge]
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-06-19 14:55:46 +0530
        message:
          Bug#11829813  UNUSED MUTEX COMMIT_THREADS_M
          
          [Merge from 5.1]
            ------------------------------------------------------------
            revno: 2661.880.25
            committer: Aditya A <aditya.a@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-06-19 14:43:15 +0530
            message:
              Bug#11829813  UNUSED MUTEX COMMIT_THREADS_M
              
              Analysis
              --------
              The pthread_mutex commit_threads_m was initiliazed but never
              used. 
              
              Fix
              ---
              Removing the commit_threads_m mutex from the code base.
              
              [ Approved by Marko rb#2475]
------------------------------------------------------------
revno: 5972
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef7
timestamp: Wed 2013-06-19 10:55:13 +0200
message:
  Bug#16792349: YET MORE UNUSED #IFDEFS
  
  Additional patch #2, remove the following #ifdefs:
  __bsdi__
  __EMX__
  __IBMC__
  __IBMCPP__
  __LCC__
  __OpenBSD__
  __STDC_EXT__
  _CUSTOMSTARTUPCONFIG_
  CANT_OPEN_FILES_TWICE
  CHECK_KEYS
  COMPILE_STOPWORDS_IN
  DEAD_CODE
  DONT_USE_RW_LOCKS
  FAST
  FORCE_PRIMARY_KEY
  N_MAXKEY
  NEW_HASH_FUNCTION
  NOT_ANYMORE
  NOT_REALLY_USED_YET
  NOT_YET_READY_FOR_8_BYTE_POINTERS
  UNSAFE_LOCKING
  USE_RELOC
  USING_SECOND_APPROACH
  XXX_SUPERCEDED_BY_WL2952
------------------------------------------------------------
revno: 5971
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Wed 2013-06-19 09:52:37 +0200
message:
  Re-added files to sync with 5.6
------------------------------------------------------------
revno: 5970
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Wed 2013-06-19 09:48:00 +0200
message:
  remove files to sync with 5.6
------------------------------------------------------------
revno: 5969
committer: Kristofer Pettersson <kristofer.pettersson@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-19 09:01:22 +0200
message:
  Failure to initialize salt_len variable caused warnings.
------------------------------------------------------------
revno: 5968
committer: Tanjot Uppal <tanjot.uppal@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-19 10:57:03 +0530
message:
  Removing and recreatinmg the following tests in mysql-trunk to match the corresponding file IDS from mysql-5.6
  mysql-test/r/host_cache_size_functionality.result 
  mysql-test/r/table_definition_cache_functionality.result 
  mysql-test/t/host_cache_size_functionality.test 
  mysql-test/t/sort_buffer_size_functionality.test 
  mysql-test/t/table_definition_cache_functionality.test 
  mysql-test/r/sort_buffer_size_functionality.result 
  mysql-test/t/query_cache_size_functionality.test 
  mysql-test/t/query_cache_type_functionality.test 
  mysql-test/r/query_cache_size_functionality.result 
  mysql-test/r/query_cache_type_functionality.result 
  mysql-test/t/table_open_cache_functionality.test 
  mysql-test/r/table_open_cache_functionality.result
------------------------------------------------------------
revno: 5967
committer: Tanjot Uppal <tanjot.uppal@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-19 10:49:41 +0530
message:
  Removing and recreatinmg the following tests in mysql-trunk to match the corresponding file IDS from mysql-5.6
  mysql-test/r/host_cache_size_functionality.result 
  mysql-test/r/table_definition_cache_functionality.result 
  mysql-test/t/host_cache_size_functionality.test 
  mysql-test/t/sort_buffer_size_functionality.test 
  mysql-test/t/table_definition_cache_functionality.test 
  mysql-test/r/sort_buffer_size_functionality.result 
  mysql-test/t/query_cache_size_functionality.test 
  mysql-test/t/query_cache_type_functionality.test 
  mysql-test/r/query_cache_size_functionality.result 
  mysql-test/r/query_cache_type_functionality.result 
  mysql-test/t/table_open_cache_functionality.test 
  mysql-test/r/table_open_cache_functionality.result
------------------------------------------------------------
revno: 5966 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-push
timestamp: Tue 2013-06-18 22:12:31 +0200
message:
  Merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.109 [merge]
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Tue 2013-06-18 22:00:19 +0200
    message:
      Local merge
        ------------------------------------------------------------
        revno: 3902.251.1
        committer: Marc Alff <marc.alff@oracle.com>
        branch nick: mysql-5.6-bug16939689
        timestamp: Fri 2013-06-14 13:48:10 +0200
        message:
          Bug#16939689 VALGRIND ERROR IN PFS_SPAWN_THREAD
          
          Before this fix, valgrind errors could be reported under stress tests.
          
          In particular, the following line in pfs_spawn_thread()
            memcpy(pfs->m_username, parent->m_username, sizeof(pfs->m_username));
          
          could cause memcpy to be called for the same source and destination,
          which should not happen.
          
          The root cause, by analysis, is that the code is reading attributes 
          from the parent thread, while the parent thread instrumentation is already 
          destroyed (and was reused for the child, triggering valgrind complaints).
          
          The fix is to capture all the parent attributes needed:
          - the thread internal id
          - the thread user name
          - the thread host name
          in the parent thread, before spawning a child,
          and use that to initialize the child instrumentation,
          instead of pasing a pointer that might become invalid.
------------------------------------------------------------
revno: 5965
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef6
timestamp: Tue 2013-06-18 16:25:48 +0200
message:
  Bug#16945343: ADDRESSSANITIZER BUG IN DBUG.C
  
  Additional cleanup patch for trunk only:
  - Remove additional unneeded 'undef SAFE_MUTEX'
  - Remove unneeded 'undef pthread_*'
  - Remove unused ifdef SAFE_MUTEX_DETECT_DESTROY
  - Remove unused ifdef DONT_REMAP_PTHREAD_FUNCTIONS
------------------------------------------------------------
revno: 5964 [merge]
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 17:16:35 +0300
message:
  Merge mysql-5.6 -> mysql-trunk (empty)
    ------------------------------------------------------------
    revno: 3902.242.108 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-18 17:14:27 +0300
    message:
      Null merge mysql-5.5 -> mysql-5.6 (Bug#16907783 does not exist in 5.6)
        ------------------------------------------------------------
        revno: 2875.525.59
        committer: Vasil Dimov <vasil.dimov@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-06-18 17:12:28 +0300
        message:
          Fix Bug#16907783 5.5 STILL CRASHES IN DICT_UPDATE_STATISTICS WITH CONCURRENT
          DDL AND I_S QUERIES
          
          Skip partially created indexes (ones whose name starts with TEMP_INDEX_PREFIX)
          from stats gathering.
          
          Because InnoDB reports HA_INPLACE_ADD_INDEX_NO_WRITE to MySQL, the latter
          allows parallel execution of ha_innobase::add_index() and ha_innobase::info().
          
          Reviewed by:	Inaam (rb:2613)
------------------------------------------------------------
revno: 5963
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-bug16362246setnull
timestamp: Tue 2013-06-18 15:06:10 +0200
message:
  Bug#16362246 ASSERTION FAILED: 0 IN SET_FIELD_TO_NULL
  
  set_field_to_null() became stricter as a result of WL#6030
  and will assert (in dbug mode) if we try to insert NULL
  into a non-nullable column.
  
  When creating derived tables, create_tmp_field_from_item()
  will take nullability of the new Field from the corresponding Item.
  
  Item_func_benchmark::fix_length_and_dec set nullability false.
  It should be set to true, since benchmark(count, expression)
  will be NULL if <count> is null, or <count> is negative.
------------------------------------------------------------
revno: 5962 [merge]
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 15:37:39 +0300
message:
  Null merge mysql-5.6 -> mysql-trunk (the change is already in mysql-trunk)
    ------------------------------------------------------------
    revno: 3902.242.107
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-18 15:35:25 +0300
    message:
      Backport vasil.dimov@oracle.com-20130611080934-zr5a0d41aucsyvs5 from
      mysql-trunk into mysql-5.6:
      
        * revision-id: vasil.dimov@oracle.com-20130611080934-zr5a0d41aucsyvs5
        * committer: Vasil Dimov <vasil.dimov@oracle.com>
        * branch nick: mysql-trunk
        * timestamp: Tue 2013-06-11 11:09:34 +0300
        * message:
        *   Fix Bug#16369955 MYSQL_INSTALL_DB EXITS WITH "UNKNOWN/UNSUPPORTED STORAGE
        *   ENGINE: INNODB"
        *
        *   Do not try to create mysql.innodb_table_stats and mysql.innodb_index_stats
        *   during mysql_install_db time if InnoDB is not present (not compiled in).
------------------------------------------------------------
revno: 5961 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 15:52:37 +0530
message:
  Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
               TO INCONSISTENCY 
  
  [ Disabling the test for valgrind ]
    ------------------------------------------------------------
    revno: 3902.242.106 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-18 15:50:30 +0530
    message:
      Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
                   TO INCONSISTENCY 
      
      [ Disabling the test for valgrind ]
        ------------------------------------------------------------
        revno: 2875.525.58 [merge]
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-06-18 15:49:13 +0530
        message:
          Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
                       TO INCONSISTENCY 
          
          [ Disabling the test for valgrind ]
            ------------------------------------------------------------
            revno: 2661.880.24
            committer: Aditya A <aditya.a@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2013-06-18 15:48:00 +0530
            message:
              Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
                           TO INCONSISTENCY 
              
              [ Disabling the test for valgrind ]
------------------------------------------------------------
revno: 5960 [merge]
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 11:31:16 +0200
message:
  Merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.105
    committer: Roy Lyseng <roy.lyseng@oracle.com>
    branch nick: mysql-5.6-sb2
    timestamp: Tue 2013-06-18 11:18:04 +0200
    message:
      Bug#16316564: Crash in do_copy_not_null()
      
      The problem here is a failure in do_copy_not_null() because the pointer
      copy->from_null_ptr is NULL, and hence accessing its contents fails.
      If we look at the similar function do_copy_null(), it has been enhanced
      with a NULL pointer check for the same pointer.
      The pointer is NULL for any field that is originally not nullable, but
      we may still have a NULL value because of the table->null_row
      technique, used for outer-joined tables. The table t2 is semi-joined
      to the table t1 (alias z), which is outer-joined, hence it also gets
      the outer-join capability, and do_copy_null() has to be used even though
      the field is originally not nullable.
      
      I expect the missing NULL pointer check in do_copy_not_null() to be
      an oversight, and adding it indeed fixes the problem.
      
      sql/field_conv.cc
        In do_copy_not_null(), add NULL pointer check for copy->from_null_ptr.
------------------------------------------------------------
revno: 5959
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-cleanup
timestamp: Tue 2013-06-18 10:41:20 +0200
message:
  Code cleanup after previous change
------------------------------------------------------------
revno: 5958
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 13:00:13 +0530
message:
  Bug#16917425 : added check to skip tests where few tests were failing in absence of plugin
------------------------------------------------------------
revno: 5957 [merge]
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 12:09:22 +0530
message:
  Bug#16917425 : added check to skip tests where few tests were failing in absence of plugin
    ------------------------------------------------------------
    revno: 3902.242.104
    committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-18 11:42:49 +0530
    message:
      Bug#16917425 : added check to skip tests where few tests were failing in absence of plugin
------------------------------------------------------------
revno: 5956
committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 11:18:07 +0530
message:
  wl-7122 : FIX CTYPE_* TEST SO AS TO RUN WITH DEFAULT ENGINE INNODB
  Modifying test/result files to run ctype test with innodb as default engine. 
  Fixed result difference in "show create " and suppressed warning.
------------------------------------------------------------
revno: 5955 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-18 10:26:19 +0530
message:
  Null merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.242.103 [merge]
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-18 10:22:47 +0530
    message:
      Merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.57
        committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-06-18 10:20:30 +0530
        message:
           BUG#14081240 - THREAD POOL BASED CONNECTIONS CAUSE
                          ABORTED_CLIENTS TO BE INCREMENTED.
          PROBLEM AND FIX:
          The global status indicate Aborted_clients increment
          when thread pool connections are gracefully terminated.
          The thd killed flag is set for all connection cleanup. The
          fix is not to set thd killed in tp_full_cleanup so that
          Aborted_clients doesn't increment for normal client disconnects.
------------------------------------------------------------
revno: 5954
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-06-17 10:50:23 -0500
message:
  Fix two PB2 test failures
------------------------------------------------------------
revno: 5953
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-17 20:42:01 +0700
message:
  It's a follow-up patch for WL#3253.
  
  The Sun Studio compiler warning was fixed.
------------------------------------------------------------
revno: 5952
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-17 17:41:54 +0530
message:
  Bug#16917425 : added check to skip tests where few tests were failing in absence of plugin
------------------------------------------------------------
revno: 5951 [merge]
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Mon 2013-06-17 14:00:26 +0200
message:
  merge of bug#16657588 into mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.102
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: b16657588-56
    timestamp: Fri 2013-06-14 12:46:41 +0200
    message:
      Bug#16657588: VARIABLE OPEN_FILES_LIMIT DOES NOT
      SHOW MAXIMUM NUMBER OF OPEN FILES
      
      The read-only system variable open_files_limit did not
      show maximum number of open files the mysqld process
      could have, but instead the number that was requested
      after adjusting the start-up option open_files_limit.
      
      Fixed by adding internal variable for propagating
      the requested number of files, since that was used
      for adjusting other start-up options. And set
      the read-only system variable open_files_limit
      to the real maximum value.
------------------------------------------------------------
revno: 5950 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-06-17 10:57:46 +0800
message:
  Fix for test case failure in weekly-trunk regression
  Not to assume the pages, whose page type is INDEX, with NULL index_name 
  and table_name won't exist during the test
  Approved by Jimmy in mail
    ------------------------------------------------------------
    revno: 3902.242.101 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-17 10:55:20 +0800
    message:
      Fix for test case failure in weekly-trunk regression
      Not to assume the pages, whose page type is INDEX, with NULL index_name 
      and table_name won't exist during the test
      Approved by Jimmy in mail
        ------------------------------------------------------------
        revno: 2875.525.56
        committer: bin.x.su@oracle.com
        branch nick: mysql-5.5
        timestamp: Mon 2013-06-17 10:49:53 +0800
        message:
          Fix for test case failure in weekly-trunk regression
          Not to assume the pages, whose page type is INDEX, with NULL index_name
          and table_name won't exist during the test
          Approved by Jimmy in mail
------------------------------------------------------------
revno: 5949 [merge]
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 13:54:42 -0500
message:
  Merge Buf#16914007 from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.100 [merge]
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-14 13:47:22 -0500
    message:
      Merge of Bug#16914007 from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.525.55
        committer: kevin.lewis@oracle.com
        branch nick: mysql-5.5
        timestamp: Fri 2013-06-14 13:33:37 -0500
        message:
          Bug#16914007-INNODB: CHECK TABLE SHOULD MARK AN INDEX AS CORRUPTED
          IF IT HAS A WRONG COUNT
          
          If CHECK TABLE finds that a secondary index contains the wrong
          number of entries, it used to report an error but not mark the
          index as corrupt. The error means that the index should be rebuilt,
          which can be done with ALTER TABLE DROP INDEX and ALTER TABLE ADD
          INDEX.  But just in case the DBA does not pay any attention to the
          output of CHECK TABLE, the secondary index should be marked as
          corrupted so that it is not used again.
          
          Approved by Inaam in RB:2607
------------------------------------------------------------
revno: 5948 [merge]
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 12:52:42 -0500
message:
  Merge Bug#16914007 from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.99 [merge]
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-14 12:33:31 -0500
    message:
      Merge Bug#16914007 from mysql-5.5.
      The testcase for innodb_bug14707452 was changed to also test
      this scenario since the ability to introduce this kind of corruption
      existed in mysql-5.6+.
        ------------------------------------------------------------
        revno: 2875.533.1
        committer: kevin.lewis@oracle.com
        branch nick: mysql-5.5
        timestamp: Fri 2013-06-14 09:29:04 -0500
        message:
          Bug#16914007-INNODB: CHECK TABLE SHOULD MARK AN INDEX AS CORRUPTED
          IF IT HAS A WRONG COUNT
          
          If CHECK TABLE finds that a secondary index contains the wrong
          number of entries, it used to report an error but not mark the
          index as corrupt. The error means that the index should be rebuilt,
          which can be done with ALTER TABLE DROP INDEX and ALTER TABLE ADD
          INDEX.  But just in case the DBA does not pay any attention to the
          output of CHECK TABLE, the secondary index should be marked as
          corrupted so that it is not used again.
          
          Approved by Inaam in RB:2607
------------------------------------------------------------
revno: 5947 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Fri 2013-06-14 18:23:24 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.98
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Fri 2013-06-14 17:37:44 +0200
    message:
      Bug#16945343 ADDRESSSANITIZER BUG IN DBUG.C
      
      Remove the #undef SAFE_MUTEX
      With the undef, debug.o and thread utilitis in mysys
      have different ideas about the size and contents of a mutex.
      
      We were writing out-of-bounds in my_rw_init() here:
      #ifdef SAFE_MUTEX
        rwp->write_thread   = 0;
      #endif
    ------------------------------------------------------------
    revno: 3902.242.97 [merge]
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6-merge
    timestamp: Fri 2013-06-14 16:57:08 +0200
    message:
      merge 5.5 -> 5.6
        ------------------------------------------------------------
        revno: 2875.525.54
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: 5.5
        timestamp: Fri 2013-06-14 16:38:27 +0200
        message:
          Bug#14834378 ADDRESSSANITIZER BUG IN FILENAME_TO_TABLENAME
          Backport to 5.5
        ------------------------------------------------------------
        revno: 2875.525.53
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: 5.5
        timestamp: Fri 2013-06-14 10:52:23 +0200
        message:
          Bug#16729109: FIX COMPILATION WARNINGS WITH GCC 4.8
          Backport to 5.5
          (external Bug#69407 Build warnings with mysql)
------------------------------------------------------------
revno: 5946
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 11:03:50 -0500
message:
  Previous patch for Bug#16932439 missed a few testcases
  that used the changed warning message.
------------------------------------------------------------
revno: 5945
committer: Kristofer Pettersson <kristofer.pettersson@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 17:47:36 +0200
message:
  Bug# 16513435  USER ENUMERATION
  
  find_mpvio_user() interrupted authentication from underneth
  the authentication plugin instead of letting the plugin deal with
  bad credentials.
  
  This patch introduces a dummy user account which lacks authentication
  capabilities that is used when authentication is attempted with an
  unknown user.
------------------------------------------------------------
revno: 5944
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-clibfunk
timestamp: Fri 2013-06-14 15:31:01 +0200
message:
  Bug#16748528: CMAKE: ASSUME C STANDARD LIBRARY HEADER FILES EXIST
  
  Additional patch:
  
  Remove 11 CMake checks for C standard library functions.
  Since all supported platforms have the C standard library, these
  checks are pointless.
------------------------------------------------------------
revno: 5943
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-memmove
timestamp: Fri 2013-06-14 15:05:04 +0200
message:
  Bug#16839824: ASSUME MEMMOVE/MEMCPY EXIST AND REPLACE BMOVE_UPP
  
  This patch does the following:
  - Assume memmove() and memcpy() exist as they are standard C
    library functions. This means removing CMake checks + ifdefs
  - Remove macros that define bmove to memmove
  - Replace bmove usage with memmove
  - Remove bmove_upp() and use memmove instead
  - Remove unneeded HAVE_MEMORY_H check + usage
------------------------------------------------------------
revno: 5942
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug16959103
timestamp: Fri 2013-06-14 14:42:54 +0200
message:
  Bug#16959103: REMOVE SUPPORT FOR APPLE UNIVERSAL BINARY
  
  This patch removes the remains of Apple universal binary support.
  The last OSX version supporting universal binary was 10.5 and this
  version is no longer supported as of MySQL 5.6. (OSX 10.5 is also
  no longer supported by Apple.)
------------------------------------------------------------
revno: 5941 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 16:58:48 +0530
message:
  Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
  
  [ Disabling the test for embedded server ]
    ------------------------------------------------------------
    revno: 3902.242.96 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-14 16:56:55 +0530
    message:
      Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
      
      [ Disabling the test for embedded server ]
        ------------------------------------------------------------
        revno: 2875.525.52 [merge]
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-06-14 16:55:37 +0530
        message:
          Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
          
          [ Disabling the test for embedded server ]
            ------------------------------------------------------------
            revno: 2661.880.23
            committer: Aditya A <aditya.a@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2013-06-14 16:44:49 +0530
            message:
              Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
              
              [ Disabling the test for embedded server ]
------------------------------------------------------------
revno: 5940
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Fri 2013-06-14 12:23:28 +0200
message:
  WL#3253 Triggers: multiple triggers per table
  
  Post-push fix: Fix broken NDB build.
------------------------------------------------------------
revno: 5939
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 16:51:52 +0700
message:
  Main patch for WL#3253 (Triggers: multiple triggers per table).
  
  The patch adds support for multiple triggers per one (action, timing),
  where action is one of INSERT, UPDATE, DELETE and timing is one of AFTER,
  BEFORE.
------------------------------------------------------------
revno: 5938
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 16:35:49 +0700
message:
  Prerequisite patch for WL#3253 (Triggers: multiple triggers per table):
  
    - rename Table_triggers_list to Table_trigger_dispatcher;
  
    - refactor out trigger_loader{.h,.cc} -- the files contain all the
       functions to work with TRN/TRG files (current trigger Data Dictionary);
  
    - introduce Trigger class -- an instance of it stores all information
       about one trigger object;
  
    - move Trigger_creation_ctx into a separate file trigger_creation_ctx.
------------------------------------------------------------
revno: 5937 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-push
timestamp: Fri 2013-06-14 11:48:47 +0200
message:
  Merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.95 [merge]
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Fri 2013-06-14 11:44:02 +0200
    message:
      Push to mysql-5.6
        ------------------------------------------------------------
        revno: 3902.250.2 [merge]
        committer: Marc Alff <marc.alff@oracle.com>
        branch nick: mysql-5.6-bug16945618
        timestamp: Fri 2013-06-14 11:42:16 +0200
        message:
          Local merge
        ------------------------------------------------------------
        revno: 3902.250.1
        committer: Marc Alff <marc.alff@oracle.com>
        branch nick: mysql-5.6-bug16945618
        timestamp: Thu 2013-06-13 10:59:26 +0200
        message:
          Bug#16945618 PERFORMANCE SCHEMA, DEGRADATION UNDER STRESS WHEN INTERNAL
          BUFFERS ARE FULL
          
          The performance schema uses internal buffers of a fixed size.
          The size comes from configuration options.
          
          When the sizing is adequate for the workload, things work properly.
          
          When the sizing is too tight for the workload, the performance schema
          spends a lot of time in an internal spin loop to attempt to allocate a memory
          buffer, and fails.
          
          Before this bug, this spin loop would happen for each call to instrument an
          object, which can be a very frequent operation.
          
          With this fix, when a failure to allocate memory is noticed, a flag is set 
          that indicates the corresponding buffer is full.
          
          Subsequent call to allocate memory from the same buffer will fail 
          immediately, avoiding the need for a spin loop that fill fail anyway.
          
          When an object is released, the corresponding buffer is not flagged as full
          any more, indicating that memory allocation can be attempted again.
          
          With this fix, when running the performance schema with undersized buffers,
          the functional result is unchanged: some events are lost and reported as 
          such. What is changed is that the performance degradation in this mode, 
          which could be catastrophic in some cases, is now avoided.
------------------------------------------------------------
revno: 5936 [merge]
committer: Aditya A <aditya.a@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 11:49:47 +0530
message:
  Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
               TO INCONSISTENCY 
  [Merge from 5.6]
    ------------------------------------------------------------
    revno: 3902.242.94 [merge]
    committer: Aditya A <aditya.a@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-14 11:41:32 +0530
    message:
      Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
                   TO INCONSISTENCY 
      [Merge from 5.5]
        ------------------------------------------------------------
        revno: 2875.525.51 [merge]
        committer: Aditya A <aditya.a@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-06-14 11:28:29 +0530
        message:
          Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
                       TO INCONSISTENCY 
          [Merge from 5.1]
            ------------------------------------------------------------
            revno: 2661.880.22
            committer: Aditya A <aditya.a@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2013-06-14 11:22:05 +0530
            message:
              Bug#13548704 ALGORITHM USED FOR DROPPING PARTITIONED TABLE CAN LEAD
                           TO INCONSISTENCY 
              
              PROBLEM
              --------
              When we drop a partitoned table , we first gather the
              information about partitions in the table from the 
              table_name.par file and store it in an internal data 
              structure.Then we delete this file and the data in 
              the table. If the server crashes  after deleting the
              file,then after recovering we cannot access the table
              .Even we cannot drop the table ,because drop algorithm
              requires par file to read the partition information.
              
              
              FIX
              ---
              1. We move the part of deleting par file after deleting 
                 all the table data from the storage egine.
              2. During drop operation if we detect that the par 
                 file is missing then we delete the .frm file,since 
                 there is no way of recovering without par file.
                
              [Approved by Mattias rb#2576 ]   
------------------------------------------------------------
revno: 5935 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-14 10:08:18 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.93
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-14 10:03:53 +0530
    message:
      The test case i_innodb.innodb_bug16417635 must run only for
      innodb page size of 16k.  For other page sizes, the inspected
      buffer pool pages will vary.  So including have_innodb_16k.inc
      to this test case.
------------------------------------------------------------
revno: 5934
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-06-13 12:44:40 -0500
message:
  Bug#16932439-INNODB.INNODB-WL5980-DISCARD FAILED WITH UNEXPECTED
  WARNINGS IN MYSQL.ERR
  
  Some times the following warning will be logged when running
  INNODB.INNODB-WL5980-DISCARD in PB2;
  
  2013-06-09 19:10:48 5126 [Warning] InnoDB: Tablespace 'test/t5980'
  exists in the cache with id 598 != 604
  2013-06-09 19:10:48 5126 [Warning] InnoDB: Freeing existing tablespace
  'test/t5980' entry from the cache with id 604
  
  This patch adds those warnings to that test and fixes a few places
  where there was extra quotes aound a pre-formatted table name.
------------------------------------------------------------
revno: 5933 [merge]
committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
branch nick: trunk
timestamp: Thu 2013-06-13 18:40:43 +0530
message:
  Mergeing from 5.6 to TRUNK
    ------------------------------------------------------------
    revno: 3902.242.92
    committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
    branch nick: mysql_5_6
    timestamp: Thu 2013-06-13 18:36:30 +0530
    message:
      Bug#16078943: ZERO DATE CAN BE INSERTED IN STRICT NO-ZERO MODE 
                    THROUGH A DEFAULT VALUE.
      
      Analysis:
      -------------
      The problem was that the default values for a table were
      checked for consistency only at CREATE TABLE time. The
      consistency checks very much depend on the sql_mode value.
      The default values were not checked at the INSERT/UPDATE
      time. Thus, if sql_mode became strict in the middle between
      CREATE TABLE and INSERT/UPDATE, inconsistent data can be put
      into the table.
      
      So here, when sql_mode='NO_ZERO_DATE,NO_ZERO_IN_DATE,
      STRICT_ALL_TABLE'(strict mode) then creating table with
      default "value 0" or default "value having 0 in date" for
      field types DATE/DATETIME/TIMESTAMP" is not allowed. But when
      sql_mode is "NO_ZERO_IN_DATE,NO_ZERO_DATE" or "" (non-strict mode),
      tables can be created.
      
      If table with default "value 0" or default "value having 0 in
      date" for field DATE/DATETIME/TIMESTAMP is created in non-strict
      mode and tuple for the table is inserted with default for
      DATE/DATETIME/TIMESTAMP fields in strict mode then no error or
      warning is generated.
      
      While inserting/updating tuple(s), we are not validating the
      default values. While creating the table the default value set 
      might be correct but same values might not be correct while
      inserting/updating the tuple (one of the reason is sql_mode).
      
      Fix:
      -------------
      Added a logic to verify the default values while inserting
      or updating a tuple. 
      
      Currently the TIMESTAMP data type differs in nonstandard
      ways from other data types. But this behavior can be
      turned off using "explicit_defaults_for_timestamp" system
      variable at server startup. With this patch, old behavior
      of TIMESTAMP data type is not changed. But with 
      "explicit_defaults_for_timestamp", logic is added to 
      verify the default value while inserting or updating
      a tuple.
      
      With this, behavior of insert or update with default values
      for DATE/DATETIME/TIMESTAMP is as below,
      
      +---------------+------------+----------------+-------------+
      |               |            |                |             |
      |TYPE/sql_mode  | ""         |NO_ZERO_DATE/   |strict_mode  |
      |        value  |            |NO_ZERO_IN_DATE |             |
      |---------------+------------+----------------+-------------|
      |DATE           | Success    | Warning        | Error       |
      |---------------|------------|----------------|-------------|
      |DATETIME       | Success    | Warning        | Error       |
      |---------------|------------|----------------|-------------|
      |TIMESTAMP      |            |                |             |
      |+ explicit_-   |            |                |             |
      |  defaults_-   |            |                |             |
      |  for_-        | Success    | Success        | Success     |
      |  timestamp    |            |                |             |
      |  = false      |            |                |             |
      |(for           |            |                |             |
      | backward      |            |                |             |
      | compatibility)|            |                |             |
      |---------------|------------|----------------|-------------|
      |TIMESTAMP      |            |                |             |
      |+ explicit_-   |            |                |             |
      |  defaults_-   | Success    | Warning        | Error       |
      |  for_-        |            |                |             |
      |  timestamp    |            |                |             |
      |  = true       |            |                |             |
      |               |            |                |             |
      +-----------------------------------------------------------+
      
      
      Summary of discussion on impact on Replication:
      -----------------------------------------------
      
      *. Found following impact on replication if this issue is 
         fixed,
      
         Older master (bug is there) --> Newer slave (bug is fixed)
      
         Let's assume sql_mode is propagated properly between the
         master and slaves. I.e. at any point in time the master 
         and slaves have the same sql_mode value.
      
         The following sequence is permitted on the master:
           - sql_mode = ''
           - CREATE TABLE t1 (f1 int,
                              f2 DATE DEFAULT 0,
                              f3 DATETIME DEFAULT 0,
                              f4 TIMESTAMP DEFAULT 0);
           - set sql_mode='NO_ZERO_DATE,NO_ZERO_IN_DATE,
                           STRICT_ALL_TABLES';
           - INSERT INTO t1(f1) VALUES (10);
      
         The result of this sequence on the master is a new record:
            { 0, 0, 0, 0 }
         (that is the bug, because of effective NO_ZERO_DATE &
          NO_ZERO_IN_DATE).
      
         On the slave, the INSERT statement will fail (because the
         bug is fixed on the slave), thus the replication will stop. 
      
      *. Approaches identified after discussing with Replication team,
         Runtime team and support are,
      
        1. Introduce a switch to relax the sql_mode during an
           upgrade on the slave. But:
      
           - This switch is effectively overriding the SQL_MODE from
             the master, thence all sorts of different things can
             go wrong.
           - This switch is only necessary for upgrades, which have
             a solid workarounds: using RBR or relaxing the SQL_MODE
             on the master.
           - Introducing another switch requires double testing and
             is error prone, since users may use it for other cases
             than upgrades and then we will get all sort of weird
             bug reports...
           - This approach does not scale in terms of development
             and maintenance. The use case does not seem to be worth
             it this kind of approach.
      
        2. Introduce another switch as in suggestion #1, that makes
           the slave behave as the master just for the sole purpose
           of a set of SQL_MODE combinations. Same problems as
           suggestion #1.
      
        3. Document that during upgrades, the master needs to relax
           the sql_mode or switch to RBR, but note the following
           restrictions:
      
           - user needs to wait for the old binary logs to be consumed
             before actually be able to upgrade the slaves (so that
             there is no slave still replicating "old" binlogs after
             it is upgraded)
           - user needs to cope with side effects of relaxing the
             sql_mode or use RBR during the upgrade period. 
      
      After considering the risk involved in the approach 1 and 2, its
      decided to go with approach 3.
      
      Attached discussion mails in the bug report.
------------------------------------------------------------
revno: 5932
committer: Raghav Kapoor <raghav.kapoor@oracle.com>
branch nick: mysql-trunk-bug-16906827
timestamp: Thu 2013-06-13 18:29:20 +0530
message:
  BUG#16906827-CAN'T SET QUERY_CACHE_TYPE TO 0 WHEN IT IS ALREADY 0 
  
  BACKGROUND:
  The crux of the problem reported in the bug report is User 
  does not want to see the error message when the server is 
  started with query cache disabled and User is disabling the
  query cache by setting query_cache_type to 0 during runtime 
  (in client session).
  
  ANALYSIS:
  The check in check_query_cache_type() function was throwing
  error for all three values 0, 1 or 2 when query cache is disabled.
  According to the bug or user requirement, User wants to bypass 
  this error check when we are setting query_cache_type to 0 (or OFF)
  during runtime when it is already disabled 0 (or OFF) during startup.
  
  FIX:
  As a fix for this bug, the check in check_query_cache_type() 
  function is modified to take into account to *NOT* throw the 
  error when we are setting it 0 (or OFF) when query cache is 
  already disabled.
------------------------------------------------------------
revno: 5931 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-13 16:01:34 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.91 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-13 15:59:33 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
------------------------------------------------------------
revno: 5930 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-13 15:56:57 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.249.1 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-13 14:40:12 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.50
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-06-13 11:14:13 +0530
        message:
          Bug #16417635 INNODB FAILS TO MERGE UNDER-FILLED PAGES DEPENDING
          ON DELETION ORDER
          
          Problem:
          
          When a InnoDB index page is under-filled, we will merge it with either
          the left sibling node or the right sibling node.  But this checking is
          incorrect.  When the left sibling node is available, even if merging
          is not possible with left sibling node, we do not check for the 
          possibility of merging with the right sibling node.  
          
          Solution:
          
          If left sibling node is available, and merging with left sibling node
          is not possible, then check if merge with right sibling node is
          possible.
          
          rb#2506 approved by jimmy & ima.
------------------------------------------------------------
revno: 5929 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-13 17:45:01 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.90
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-13 17:40:13 +0800
    message:
      Exclude test innodb_bug16072440.test from embedded platform, since
      the server restart does not work well on the platform
------------------------------------------------------------
revno: 5928
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-13 12:25:12 +0300
message:
  Whitespace and doxygen style fixup.
------------------------------------------------------------
revno: 5927
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-13 10:46:06 +0300
message:
  Update MySQL version and remove trailing whitespace in README.
------------------------------------------------------------
revno: 5926
committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
branch nick: mysql-trunk-11754116
timestamp: Thu 2013-06-13 09:33:57 +0530
message:
  BUG#11754116: COLUMN DEFAULT VALUE NOT REFLECTED IN SHOW CREATE
                OUTPUT
  
  Analysis:
  --------
  New default value set for a column using
  ALTER TABLE:ALTER COLUMN:SET DEFAULT command is not reflected:
  a) If the column is of type TIMESTAMP or DATETIME and
  b) Has CURRENT_TIMESTAMP as its default value when it was created.
  
  In this case, when the default value is altered for the
  TIMESTAMP/DATETIME column, the default value for the
  TIMESTAMP/DATETIME is updated correctly in the table
  definition. But since the 'unireg_check" was set to
  "TIMESTAMP_DN_FIELD/TIMESTAMP_DNUN_FIELD", while inserting
  a tuple, the default value for the field uses 'NOW()' instead of
  reading the default value from the table definition.
  While displaying table definition also, 'CURRENT_TIMESTAMP' is
  displayed because of the 'unireg_check' value.
  
  This means that the bug affected not only SHOW CREATE, but
  also could cause wrong values to be inserted in a TIMESTAMP/DATETIME
  column if the default value was changed.
  
  Fix:
  ---
  In the current code, flag for unireg_check was always set to
  'TIMESTAMP_DN_FIELD/TIMESTAMP_DNUN_FIELD' when current
  default value for field is CURRENT_TIMESTAMP. Value
  of the 'unireg_check' was not getting updated while
  changing the default value of TIMESTAMP/DATETIME field.
  As a fix for this patch, added a logic to set the
  unireg_check field to proper value while updating the
  default value.
------------------------------------------------------------
revno: 5925 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-12 22:40:07 +0530
message:
  Bug#16904035-SHOW STATUS-EXCESSIVE LOCKING ON LOCK_ACTIVE_MI AND
  ACTIVE_MI->RLI->DATA_LOCK
  Merging fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.89
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-12 21:41:05 +0530
    message:
      BUG#16904035-SHOW STATUS - EXCESSIVE LOCKING ON LOCK_ACTIVE_MI AND
      ACTIVE_MI->RLI->DATA_LOCK
      
      Problem: Excessive locking on lock_active_mi and rli->data_lock
      while executing any `show status like 'X'` command. 
      
      Analysis: SHOW_FUNCs for Slave_running, Slave_retried_transactions,
      Slave_heartbeat_period, Slave_received_heartbeats,
      Slave_last_heartbeat are acquiring lock_active_mi and rli->data_lock
      to show their variable value. It is ok to show stale data while showing
      the status variables i.e., even if they miss one update, it will
      not cause any great trouble. 
      
      Fix: Remove the locks from the above mentioned SHOW_FUNC functions.
------------------------------------------------------------
revno: 5924 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-12 18:44:49 +0800
message:
  merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.88
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-12 18:35:04 +0800
    message:
      Add a pre-emptive server restart to test innodb_bug16072440, to avoid
      spill the warning of orphan fts aux table to other tests.
------------------------------------------------------------
revno: 5923 [merge]
committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
branch nick: trunk-14227431
timestamp: Wed 2013-06-12 11:21:22 +0200
message:
  Manual merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.87 [merge]
    committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
    branch nick: 5.6-14227431
    timestamp: Wed 2013-06-12 10:02:00 +0200
    message:
      Manual merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.49
        committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
        branch nick: 5.5-14227431
        timestamp: Wed 2013-06-12 09:35:33 +0200
        message:
          Bug #14227431: CHARACTER SET MISMATCH WHEN ALTERING FOREIGN KEYS
          CAN LEAD TO MISSING TABLES
          
          Overview
          --------
          If the FOREIGN_KEY_CHECKS system variable is set to 0, it is
          possible to break a foreign key constraint by changing the type
          or character set of the foreign key column, or by dropping the
          foreign key index (without carrying out corresponding changes on
          another table in the relationship).
          
          If we subsequently set FOREIGN_KEY_CHECKS to 1 and execute ALTER
          TABLE involving the COPY algorithm on such a table, the following
          happens:
          
          1) If ALTER TABLE does not contain a RENAME clause, the attempt 
             to install the new version of the table instead of the old one
             will fail due to the fact that the inconsistency will be 
             detected. An attempt to revert the partially executed alter 
             table operation by restoring the old table definition will 
             fail as well due to FOREIGN_KEY_CHECKS == 1. As a result, the 
             table being altered will be lost.
          2) If ALTER TABLE contains the RENAME clause, the inconsistency 
             will not be detected (most probably due to other bugs). But if
             an attempt to install the new version of the table fails (for 
             example, due to a failure when updating triggers associated 
             with the table), reverting the partially executed alter table 
             by restoring the old table definition will fail too. So the 
             table being altered might be lost as well.
          
          
          Suggested fix
          -------------
          The suggested fix is to temporarily unset the option bit
          representing FOREIGN_KEY_CHECKS when the old table definition is
          restored while reverting the partially executed operation.
------------------------------------------------------------
revno: 5922
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-14615536
timestamp: Wed 2013-06-12 10:09:20 +0200
message:
  BUG#14615536 Post push patch
  
  Unstable #rows estimate from InnoDB makes optimizer trace 
  output unstable. Trying to remedy this by adding some 
  --replace_regex in the test file.
------------------------------------------------------------
revno: 5921 [merge]
committer: Saikumar V <saikumar.v@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-12 12:12:45 +0530
message:
  Null Merge
  From mysql-5.5->mysql-5.6->mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.86 [merge]
    committer: Saikumar V <saikumar.v@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-12 12:07:18 +0530
    message:
      Null Merge
      From mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.48
        committer: Saikumar V <saikumar.v@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-06-12 12:00:44 +0530
        message:
          Adding rqg grammars to internal folder
------------------------------------------------------------
revno: 5920 [merge]
committer: Saikumar V <saikumar.v@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-12 11:16:43 +0530
message:
  Updated rqg grammars files in internal folder.
    ------------------------------------------------------------
    revno: 3902.242.85
    committer: Saikumar V <saikumar.v@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-12 11:11:46 +0530
    message:
      Updated rqg grammars files in internal folder.
------------------------------------------------------------
revno: 5919
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-06-12 08:02:02 +0530
message:
  - Fixed TC configuration. TC was enabled in valgrind even though it involved crash on purpose.
------------------------------------------------------------
revno: 5918
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 23:05:42 +0530
message:
  Bug#16805643 MTR ERROR "COULD NOT FIND INNOCHECKSUM" IN "MAKE INSTALL"
               OUT-OF-SOURCE BUILD
  
  1) Change the extra/CMakeLists.txt to build the innochecksum as per user
     defined build option.
  2) Removed the --debug option for non-debug build of innochecksum.
  3) Created new test, innodb-wl6045-debug.test which will run only on
     innochecksum build in debug.
  
  Approved by Kevin, Mattiasj rb#2531
------------------------------------------------------------
revno: 5917
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 11:09:34 +0300
message:
  Fix Bug#16369955 MYSQL_INSTALL_DB EXITS WITH "UNKNOWN/UNSUPPORTED STORAGE
  ENGINE: INNODB"
  
  Do not try to create mysql.innodb_table_stats and mysql.innodb_index_stats
  during mysql_install_db time if InnoDB is not present (not compiled in).
------------------------------------------------------------
revno: 5916 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 22:01:14 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.84
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6-bug16625973
    timestamp: Tue 2013-06-11 21:59:55 +0800
    message:
      Fix innodb_fts.innodb_fts_result_cache_limit failure on daily trunk.
      
      Approved by Jimmy Yang.
------------------------------------------------------------
revno: 5915 [merge]
committer: Guilhem Bichot <guilhem.bichot@oracle.com>
branch nick: trunk3
timestamp: Tue 2013-06-11 15:43:41 +0200
message:
  merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.83
    committer: Guilhem Bichot <guilhem.bichot@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2013-06-11 13:40:24 +0200
    message:
      Bug#16314835 "WITH ROLLUP" CAUSES: DUPLICATE ENTRY 'NULL' FOR KEY '<AUTO_KEY>'
      Bad result in 5.1/5.5, strange error in 5.6
      => disable ROLLUP+DISTINCT, with meaningful error.
      DISTINCT is often useless with GROUP BY anyway.
      Of the modified testcases, most are for internally-reported bugs.
      ROLLUP+ORDER is already disabled.
    ------------------------------------------------------------
    revno: 3902.242.82
    committer: Guilhem Bichot <guilhem.bichot@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2013-06-11 13:37:20 +0200
    message:
      Fix for
      Bug#16739050 PREPARED STATEMENT: CRASH IN ITEM_REF::REAL_ITEM OR PURE
      VIRTUAL FUNCTION CALL
      and 2 duplicates:
      don't reach to real items when creating prep_having. Details:
      
      First, let's review some bugs fixed in older 5.6 versions.
      ==========================================================
      
      About the fix for 12603457 and 12603141:
      WHERE condition is "WHERE field".
      JOIN::conds is made, by change_item_tree(), to point to item_outer_ref
      which points to item_field.
      At fix_prepare_information() we do:
        prep_where= JOIN::conds
      When we rollback_item_tree_changes(), we restore conds, which does not
      modify prep_where (only JOIN::conds was registered in the "list of
      changes to roll back"...).
      When next execution starts reinit_stmt_before_use() copies prep_where
      into select_lex->where, which thus gets the now-destroyed
      item_outer_ref, later this crashes.
      Solution which was chosen: make reinit_stmt_before_use() copy
      prep_where->real_item(), to reach to the field, avoiding the
      now-destroyed item_outer_ref.
      For uniformity, the same was done for prep_having.
      
      About the fix for 12582849: (cousin of above)
      WHERE condition is OR.
      One argument of OR is made to point to item_outer_ref which points to
      item_field.
      At JOIN:: optimize:
        prep_where= copy of conds => makes a copy of OR (a new item_cond_or).
      When we rollback_item_tree_changes(), we restore one pointer argument
      of the original OR, which does not modify the pointer argument of the
      copy of this OR (do not modify prep_where); the now-destroyed
      item_outer_ref remains in prep_where. Then it crashes at next
      execution.
      Solution which was chosen: make the copy code (copy_andor_structure)
      use real_item().
      
      About the fix for Bug #16163596:
      regression caused by the fix for 12603457 and 12603141.
      In sql_yacc, "HAVING a" leads to the creation of an Item_ref named
      "a". In having->fix_fields(), we find that "a" is actually a field, so
      we make the Item_ref's ref point to this field.
      At next execution, reinit_stmt_before_use()  uses real_item() which
      makes the HAVING be item_field, not Item_ref anymore. This Item_ref
      should have staid, it's a permanent, parse-time item.
      There should never be Item_field in HAVING, see how sql_yacc creates
      Item_ref instead of Item_field if in HAVING.
      Removing this item_ref confused ROLLUP.
      Solution which was chosen: undo the HAVING part of the fix for
      12603457 and 12603141.
      
      Now the new bugs.
      =================
      
      16317817:
      HAVING condition is OR.
      We resolve GROUP BY:
      - initially order->item points to order->item_ptr which contains (per
      parser) Item_field.
      - in find_order_in_list(), *order_item (i.e. order->item_ptr) is made
      to point to item_outer_ref, this change done in fix_fields() goes
      through register_item_tree_change().
      - again in find_order_in_list(), we append this item to
      ref_pointer_array, and make order->item point to this new cell of the
      array.
      One argument of OR in HAVING is item_ref (per parser).
      We resolve HAVING: this argument of OR is made to reference
      order->item (id est: the ref_pointer_array cell which references the
      item of GROUP BY). Keep in mind that Item_ref is Item**, not Item*.
      Then we rollback_item_tree_changes(), which effectively restores
      order->item_ptr.
      reinit_stmt_before_use() restores order -> item to point to order ->
      item_ptr. So GROUP BY is fine.
      But the item_ref in HAVING still references the cell of
      ref_pointer_array which was not restored.
      reinit_stmt_before_use()  makes a copy of HAVING, which uses
      copy_andor_structure, which reaches to the real items
      (per the fix for 12582849), but as HAVING is "item_ref to destroyed
      item_outer_ref to item_field", this crashes.
      If it would not reach to the real item, the copy would stop at the
      item_ref, then the soon-coming name resolution would create a new
      item_outer_ref and point the item_ref to it, all fine.
      
      16739050: similar to above
      
      16317685:
      HAVING condition is OR.
      In HAVING, one Item_ref is made to reference COUNT;
      reinit_stmt_before_use(),  using copy_andor_structure() which uses
      real_item(), changes HAVING to COUNT, then ROLLUP crashes.
      
      PROPOSED SOLUTION
      =================
      
      Avoid using real_item() in copy_andor_structure() when copying HAVING,
      because it's only causing problems.
      Keep real_item() when copying WHERE, in 5.6. We cannot remove it,
      because of the "second copy" done in JOIN::optimize():
          sel->prep_where=
      conds ? conds->copy_andor_structure(thd, true) : NULL;
      which creates new AND/OR items which "argument pointers" will not be properly restored
      (re-read 12582849 above), thus forcing us to reach to the real items.
      In WL#7082 (5.7), the second copy will go away, so real_item() can be
      removed (done in my prototype).
------------------------------------------------------------
revno: 5914 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-14615536
timestamp: Tue 2013-06-11 14:27:58 +0200
message:
  Null-merge 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.242.81
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-11 14:26:57 +0200
    message:
      BUG#14615536 Followup. 
      
      opt_range.cc:append_range_all_keyparts() is now needed in 
      non-debug builds, so the function must be compiled in
      unconditionally.
------------------------------------------------------------
revno: 5913
committer: Guilhem Bichot <guilhem.bichot@oracle.com>
branch nick: trunk-ls-out-of-bap
timestamp: Tue 2013-06-11 13:09:20 +0200
message:
  WL#6739 semi-join: Move LooseScan out of best_access_path()
  * Class Loose_scan_opt is removed
  * its functionality is moved into a new function
  * semijoin_loosescan_fill_driving_table_position().
  * Instead of calling several member functions of the above class in
  * best_access_path (), we make best_access_path () store three numbers
  in the Key_use object
  * and after best_access_path () we call
  semijoin_loosescan_fill_driving_table_position() which uses to these
  three numbers.
  * A first benefit is that in the absence of semi-join,
  best_access_path () executes less code.
  * A second benefit is that if there is a semi-join, debugging is made
  easier (the developer only needs to follow one call to
  semijoin_loosescan_fill_driving_table_position()).
  * Other improvements done in this patch:
  ** ref access is now possible in semi-join LooseScan (it never worked
  in 5.6 and was thus disabled), see certain plan changes in result
  files
  ** in semi-join LooseScan, the discovery of bound equalities does not
  depend anymore on the existence of an index on the inner side of the
  equality; instead, multiple equalities are searched for references
  to available-in-join-prefix expressions. We thus discover more bound
  equalities.
  ** Tests are added. New and modified code is covered at 100%.
------------------------------------------------------------
revno: 5912
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: innochecksum-bug
timestamp: Tue 2013-06-11 15:59:38 +0530
message:
  Bug#16872677 DO NOT IGNORE THE RETURN VALUE OF FWRITE() IN INNOCHECKSUM
  
  a) Handle the return value of fwrite(), fgetpos() and fsetpos().
  b) Created new function write_file() to update the checksum values
     for --write option for innochecksum tool.
  
  Approved by Kevin. rb#2526
------------------------------------------------------------
revno: 5911 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-14615536
timestamp: Tue 2013-06-11 12:20:11 +0200
message:
  Manual merge BUG#14615536 MySQL 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.242.80
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-11 12:18:33 +0200
    message:
      Bug#14615536: OPTIMIZER TRACE PRINTS RANGES FOR 
                    NON-APPLICABLE KEYPARTS
      
      Before, the "ranges [...]" part of optimizer trace would include
      ranges for keyparts that were not usable by range access. Two
      such cases have been found:
      
      WHERE keypart1 < const AND keypart2 ... 
      (or any other non-equality operator for keypart1)
        => keypart2 is not applicable for range access because
           the operator on keypart1 is not equality, but optimizer
           tracing would print the range for keypart2 anyway
      
      WHERE keypart1 = const AND keypart3 ...
        => keypart3 is not applicable for range access because
           there are no predicates for keypart2, but optimizer
           tracing would print the range for keypart3 anyway
      
      Both issues are fixed by this CS.
------------------------------------------------------------
revno: 5910
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 09:55:25 +0200
message:
  Fixing the bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
------------------------------------------------------------
revno: 5909 [merge]
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 08:54:37 +0200
message:
  Null merging the changes from 5.6 for bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
    ------------------------------------------------------------
    revno: 3902.242.79
    committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
    branch nick: mysql_5.6
    timestamp: Tue 2013-06-11 08:50:33 +0200
    message:
      Fixing the bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
------------------------------------------------------------
revno: 5908
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 11:06:50 +0530
message:
  BUG#14081240 - THREAD POOL BASED CONNECTIONS CAUSE
                       ABORTED_CLIENTS TO BE INCREMENTED.
  PROBLEM AND FIX:
  The global status indicate Aborted_clients increment
  when thread pool connections are gracefully terminated.
  The thd killed flag is set for all connection cleanup. The
  fix is not to set thd killed in tp_full_cleanup so that
  Aborted_clients doesn't increment for normal client disconnects.
------------------------------------------------------------
revno: 5907 [merge]
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-10 22:50:18 +0200
message:
  Null merging the changes from 5.5 related to bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
    ------------------------------------------------------------
    revno: 3902.242.78 [merge]
    committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
    branch nick: mysql_5.6
    timestamp: Mon 2013-06-10 22:44:22 +0200
    message:
      Null merging the changes from 5.5 related to bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
        ------------------------------------------------------------
        revno: 2875.525.47
        committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-06-10 22:29:41 +0200
        message:
          Fixing the bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
------------------------------------------------------------
revno: 5906 [merge]
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-11 01:25:54 +0530
message:
  Upmerging the changes from 5.1 for the bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
    ------------------------------------------------------------
    revno: 3902.242.77 [merge]
    committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-11 01:23:02 +0530
    message:
      Upmerging the changes from 5.1 for the bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
        ------------------------------------------------------------
        revno: 2875.525.46 [merge]
        committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-06-11 01:20:25 +0530
        message:
          Upmerging the changes from 5.1 for the bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
            ------------------------------------------------------------
            revno: 2661.880.21
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2013-06-11 01:13:07 +0530
            message:
              Bug 16919882 - WRONG FSF ADDRESS IN LICENSES HEADERS
------------------------------------------------------------
revno: 5905
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-prealloc-array
timestamp: Mon 2013-06-10 17:05:25 +0200
message:
  Bug#16736776 GET RID OF DYNAMIC_ARRAY IN THE RANGE OPTIMIZER
  
  Get rid of even more malloc()/free() calls.
------------------------------------------------------------
revno: 5904
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: fix-trunk
timestamp: Mon 2013-06-10 13:14:23 +0100
message:
  Addendum to WL#6978: extend option prefixes in existing tests.
------------------------------------------------------------
revno: 5903
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug14367046
timestamp: Mon 2013-06-10 13:35:22 +0200
message:
  Bug#14367046: PROBLEM BUILDING CLIENT ONLY
  
  Building out of source with WITHOUT_SERVER set was broken as
  CMake would not find some of the sources.
  
  This patch fixes the problem by adding the missing ADD_SUBDIRECTORY()
  commands. It also disables building unit tests if WITHOUT_SERVER is set.
------------------------------------------------------------
revno: 5902
committer: Jan Wedvik <jan.wedvik@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-10 12:24:00 +0200
message:
  This commit fixes bug#16853897 'NDB_JOIN_PUSHDOWN_BKA.TEST FAILS ON 
  SOL10-SPARC'. This bug caused queries using BKA to give wrong results in 
  certain cases. This happens if all of the following are true:
  - mysqld runs on a big-endian machine.
  - the table that is buffered in the BKA join cache use a storage 
    engine with little-endian data format (e.g. InnoDB or MyISAM).
  - The next table use a storage engine with native-endian data format
    (i.e. ndb).
  
  The keys used for accessing the native-endian table is then in little-endian
  format, giving wrong results. This is caused by an optimization in the BKA
  code: when possible, it will use a pointer into the BKA chache as a key, 
  instead of running the regular code for extracting fields from a record
  and building a key. There is a method called 
  JOIN_CACHE_BKA::check_emb_key_usage() that checks if this optimization is
  possible. The fix consists in adding an extra test to this method, to check
  if both tables have the same endianness.
  
  Presumably the error would also happen if the two tables were switched, such
  that native-endian records were buffered in the BKA cahce and used for building
  keys for a little endian table. But I was not able to write a query that would
  use BKA this way.
  
  This bug breaks an exiting ndb regression test. Unfortunately there does
  not seem to be any way to reproduce this error without ndb, since this
  is the only native-endian storage engine.
------------------------------------------------------------
revno: 5901 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-06-09 17:26:49 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.76
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6-bug16625973
    timestamp: Sun 2013-06-09 16:40:57 +0800
    message:
      BUG#16625973 - RED-BLACK TREE HOLDING THE FTS RESULTS COULD CONSUME TOO MUCH MEMORY 
      
      Analysis:
      We deal with fts intermediate result and final result all in memory, 
      so if the result is hunders of millions, fts query will consumes large
      amount of memory, several GB. 300bytes for a matched doc in our experiment.
      
      Solution:
      Due to the fts framework of optimizer & innodb, we can't find a easy way to
      reduce the memory consumption. so we will create WL to address it in future.
      
      In the patch, we do the following two things:
      1. Change "words" in fts_ranking_t from "ib_rbt_t" to array. this can save 
      about 200 bytes for a matched doc.
      2. Set a cap for the memory consumption. if the query uses as much memory 
      as the cap, it will receive a error "fts query exceeds max allowed memory".
      
      rb://2387 approved by Jimmy Yang
------------------------------------------------------------
revno: 5900 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-06-09 16:26:45 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.75
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6-bug16885178
    timestamp: Sun 2013-06-09 16:19:35 +0800
    message:
      BUG#16885178 - INNODB FULLTEXT PHRASE SEARCH VALGRIND ERROR
      
      The root cause is that we copy 1 byte out of the boundary in 
      as we can see from 'fts_utf8_string_dup', because type 'byte'
      doesn't grantee its end is '0'.
      
      rb://2586 approved by Jimmy Yang.
------------------------------------------------------------
revno: 5899 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-06-09 15:05:52 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.74
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6-bug12429565
    timestamp: Sun 2013-06-09 14:44:12 +0800
    message:
      BUG#12429565 - FTS: INDEX IS MISSING FROM THE DATA DICTIONARY DURING TRUNCATE
      
      The solution is avoiding logging 'index missing' in 'dict_truncate_index_tree'
      when the index is a fts index.
      
      rb://2581 approved by Jimmy Yang.
------------------------------------------------------------
revno: 5898 [merge]
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-06-08 09:29:06 +0100
message:
  BUG#16918216: RPL.RPL_ALTER_REPOSITORY TEST FAILING FOR 5.6
  
  Merge from mysql-5.6 into mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.73
    committer: Nuno Carvalho <nuno.carvalho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sat 2013-06-08 09:26:59 +0100
    message:
      BUG#16918216: RPL.RPL_ALTER_REPOSITORY TEST FAILING FOR 5.6
      
      rpl_alter_repository was failing sporadically because a previous test,
      rpl_stm_mixed_mts_rec_crash_safe_small, didn't clean all configurations
      changes during its execution, these changes were causing result content
      mismatch on rpl_alter_repository.
      
      To ensure that all configurations are reverted, now we restart servers
      after rpl_*_mts_*_crash_safe_* tests.
------------------------------------------------------------
revno: 5897
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Sat 2013-06-08 02:11:55 -0500
message:
  Fix compillation errors when using WITH_PERFSCHEMA_STORAGE_ENGINE=0
  Fix MTR regression of 4 innodb_fts tests involving a bad change to fts_bsearch().
------------------------------------------------------------
revno: 5896 [merge]
committer: Olav Sandstaa <olav.sandstaa@oracle.com>
branch nick: trunk-merge
timestamp: Fri 2013-06-07 21:47:00 +0200
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.72 [merge]
    committer: Olav Sandstaa <olav.sandstaa@oracle.com>
    branch nick: 5.6-merge
    timestamp: Fri 2013-06-07 21:43:41 +0200
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.45
        committer: Olav Sandstaa <olav.sandstaa@oracle.com>
        branch nick: 5.5-fix
        timestamp: Fri 2013-06-07 21:34:34 +0200
        message:
          Bug #16917425  -DBUILD_CONFIG=MYSQL_RELEASE -DWITH_DEBUG=ON FAILS 4 AND SKIPS 27 MTR TESTS
          
          Revert fix since it caused mtr tests to not run in pushbuild.
------------------------------------------------------------
revno: 5895
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-07 11:10:20 -0500
message:
  One more patch to clean up a few compiler errors that occurred after
  the push for RB2422.  Those compiler error occurred with
  WITHOUT_PERFSCHEMA_STORAGE_ENGINE=1.  This switch apparrently is not
  used in all the platforms in PB2 mysql-trunk-itch.
  
  A quick fix was previously pushed in 
  revision-id: vasil.dimov@oracle.com-20130529101751-anf3z3pu8gwjw2pd
  This is an alternate change to part of that patch.  Instead of
  including <sql_class.h> in ha_prototypes.h, this patch separates
  'enum durability_properties' into its own header and includes that.
  This relaxes the stated intention of keeping other headers out of
  ha_prototypes.h to just including very simple headers.
  
  It also moves the prototype of ICP_RESULT back into ha_prototypes.h
  because my_icp.h is also a very simple header.
  
  Approved by Sunny in rb:2555
------------------------------------------------------------
revno: 5894
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Fri 2013-06-07 10:02:55 -0500
message:
  Bug#11752731 - Innodb compiler warnings on windows 64-bit
  
  Eliminate the hundreds of compiler warnings when compiling InnoDB
  of Windows 64-bit.
------------------------------------------------------------
revno: 5893 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-06-07 19:33:49 +0530
message:
  Bug 16917425 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.71 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-06-07 19:30:59 +0530
    message:
      Bug 16917425 5.5=> 5.6
        ------------------------------------------------------------
        revno: 2875.525.44
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-06-07 19:29:56 +0530
        message:
          Bug #16917425  -DBUILD_CONFIG=MYSQL_RELEASE -DWITH_DEBUG=ON FAILS 4 AND SKIPS 27 MTR TESTS
------------------------------------------------------------
revno: 5892
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: wl6951-trunk
timestamp: Thu 2013-05-23 14:40:07 +0300
message:
  WL#6978: Deprecate unique option prefixes
  
  Added a deprecation warning when an unique
  option prefix for a long option is used.
  Added a test case for both the server and the
  mysql client.
  Fixed the defaults to use full option names where
  applicable.
------------------------------------------------------------
revno: 5891
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: wl6802-trunk
timestamp: Tue 2013-05-21 17:04:53 +0300
message:
  WL#6802: Deprecate the INFORMATION_SCHEMA.PROFILING table
  
  Moved the deprecation warning for SHOW PROFILE from the yacc
  file to the codepath that's common for I_S.PROFILE and SHOW PROFILE.
  Added a new deprecation macro for when there's no replacement 
  recommended.
  Added a test case in wl6443_deprecation.test. 
  Updated affected test results to have the new deprecation warning.
------------------------------------------------------------
revno: 5890 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Fri 2013-06-07 10:56:50 +0200
message:
  Null merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.70
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Fri 2013-06-07 10:53:30 +0200
    message:
      Warning cleanup
    ------------------------------------------------------------
    revno: 3902.242.69 [merge]
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Fri 2013-06-07 10:40:32 +0200
    message:
      Merge
        ------------------------------------------------------------
        revno: 3902.248.2 [merge]
        committer: Marc Alff <marc.alff@oracle.com>
        branch nick: mysql-5.6-bug16576980
        timestamp: Fri 2013-06-07 09:52:32 +0200
        message:
          Local merge
------------------------------------------------------------
revno: 5889
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Fri 2013-06-07 10:51:27 +0200
message:
  Warning cleanup
------------------------------------------------------------
revno: 5888 [merge]
committer: Marc Alff <marc.alff@oracle.com>
branch nick: mysql-trunk-merge
timestamp: Fri 2013-06-07 10:32:42 +0200
message:
  Merge mysql-5.6 --> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.248.1
    committer: Marc Alff <marc.alff@oracle.com>
    branch nick: mysql-5.6-bug16576980
    timestamp: Thu 2013-06-06 12:02:35 +0200
    message:
      Bug#16576980 SESSION_CONNECT_ATTRS: SPORADIC PARTIAL RESULTS FOR BUSY CONNECTIONS
      
      Prior to this fix, some rows in table session_connect_attrs
      would be sporadically missing, when the session executes a workload.
      
      The root cause is due to several factors.
      
      1)
      Table session_connect_attrs ::make_row() relies on
      PFS_thread::m_lock
      to decide if the session and session attributes do exist of not.
      
      2)
      PFS_thread::m_lock is also modified during a thread execution under load,
      in particular for each statement with set_thread_command_v1()
      and set_thread_start_time_v1()
      
      As a result, setting a statement command and start time causes spurious
      failures in table session_connect_attrs.
      
      The fix is to be more strict about usage of atomic locks,
      and in particular the purpose of each lock.
      
      3)
      PFS_thread::m_lock is not only for thread creation / destruction.
      
      Any other use of this lock create similar spurious failures in every table
      that scans threads, affecting every _by_thread, _by_account, _by_host,
      and _global summary tables.
      
      4)
      For long lived (session) based attributes, such as session_connect_attrs,
      but also for PROCESSLIST_USER and PROCESSLIST_HOST, use a dedicated
      PFS_thread::m_session_lock.
      
      5)
      For short lived (statement) based attributes,
      such as PROCESSLIST_INFO and PROCESSLIST_DB,
      use a dedicated lock.
      
      This lock existed before, and has been renamed
      to PFS_thread::m_stmt_lock, now also used for PROCESSLIST_DB.
      
      6)
      For basic attributes like m_command or m_start_time,
      using a PFS_lock is overkill, the data can be sanitized instead.
      
      This fix removed the usage of PFS_lock for command and start time,
      which also is a performance improvement, reducing the overhead.
      
      Overall, with this fix, a session executing under load,
      which puts stress on m_stmt_lock.
      does not indirectly cause spurious failures in
      session_connect_attrs (using m_session_lock),
      or other tables only looking at threads (m_lock).
------------------------------------------------------------
revno: 5887
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-06-06 11:47:26 -0500
message:
  Cleanup whitespace on a few files, separating this from the patch in rb2554.
------------------------------------------------------------
revno: 5886 [merge]
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-06 16:10:56 +0200
message:
  Null merging the changes of 5.1 branch
    ------------------------------------------------------------
    revno: 3902.242.68 [merge]
    committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-06 15:59:11 +0200
    message:
      Null merging the changes of 5.1 branch
        ------------------------------------------------------------
        revno: 2875.525.43 [merge]
        committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-06-06 15:47:55 +0200
        message:
          Null merging the changes of 5.1 branch
            ------------------------------------------------------------
            revno: 2661.880.20 [merge]
            author: murthy.narkedimilli@oracle.com
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2013-06-04 18:17:58 +0200
            message:
              Merge from mysql-5.1.70-release
                ------------------------------------------------------------
                revno: 2661.883.5
                tags: mysql-5.1.70
                committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
                branch nick: mysql-5.1.70-release
                timestamp: Mon 2013-05-13 15:26:11 +0200
                message:
                  Merging the changes for Build failure issues from mysql-5.1
                ------------------------------------------------------------
                revno: 2661.883.4
                committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
                branch nick: mysql-5.1.70-release
                timestamp: Mon 2013-05-13 15:22:49 +0200
                message:
                  Merging the changes for build failures in windows.
                ------------------------------------------------------------
                revno: 2661.883.3
                committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
                branch nick: mysql-5.1.70-release
                timestamp: Fri 2013-05-10 15:27:03 +0200
                message:
                  Merging the changes which fixes the build issue for Windows Builds.
                  Description:
                   Fixing a build issue.  The function innobase_convert_to_system_charset()
                   is included only in the builtin InnoDB, and it is missed in InnoDB
                   plugin.  Adding this function in InnoDB plugin as well.
                ------------------------------------------------------------
                revno: 2661.883.2
                committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
                branch nick: mysql-5.1.70-release
                timestamp: Tue 2013-05-07 09:14:51 +0200
                message:
                  Updated spec file to ignore upgrade error message
                ------------------------------------------------------------
                revno: 2661.883.1
                committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
                branch nick: mysql-5.1.70-release
                timestamp: Tue 2013-05-07 08:10:09 +0200
                message:
                  Merging the changes from 5.1 branch to release branch.
                  Includes bug fixes for:
                  Bug #16722314 FOREIGN KEY ID MODIFIED DURING EXPORT
                  Bug #16754901 PARS_INFO_FREE NOT CALLED IN DICT_CREATE_ADD_FOREIGN_TO_DICTIONARY
        ------------------------------------------------------------
        revno: 2875.525.42 [merge]
        author: ramesh.maddali@oracle.com
        committer: Build Team <bteam@helheim>
        branch nick: mysql-5.5
        timestamp: Wed 2013-06-05 14:17:01 +0200
        message:
          Merge from mysql-5.5.32-release
            ------------------------------------------------------------
            revno: 2875.532.11
            tags: mysql-5.5.32
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Thu 2013-05-16 17:33:32 +0200
            message:
              Fix for BUG# 16812255: Removing the --random-password option
              which is supported only for MYSQL server versions 5.6 and above.
            ------------------------------------------------------------
            revno: 2875.532.10
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Thu 2013-05-16 10:24:26 +0200
            message:
              Changes to verify the solaris upgrade issue.
            ------------------------------------------------------------
            revno: 2875.532.9
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Wed 2013-05-15 16:29:31 +0200
            message:
              Fixing the RPM-ULN build issue by ignoring the postinstall_check.sh.
            ------------------------------------------------------------
            revno: 2875.532.8
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Wed 2013-05-15 15:37:20 +0200
            message:
              Bug 16812255 - 5.5.32 PKG INSTALLATION FAILED DURING MYSQL_INSTALL_DB EXECUTION
            ------------------------------------------------------------
            revno: 2875.532.7
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Mon 2013-05-13 10:21:09 +0200
            message:
              Updated copyright year information
            ------------------------------------------------------------
            revno: 2875.532.6
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Mon 2013-05-13 09:46:44 +0200
            message:
               Adding fix for Bug#16798868
            ------------------------------------------------------------
            revno: 2875.532.5
            committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Wed 2013-05-08 12:08:20 +0200
            message:
              Bug#16779374: NEW ERROR MESSAGE ADDED TO 5.5 AFTER 5.6 GA - REUSING
                            NUMBER ALREADY USED BY 5.6
              
              The problem was that the patch for Bug#13004581 added a new error
              message to 5.5. This causes it to use an error number already used
              in 5.6 by ER_CANNOT_LOAD_FROM_TABLE_V2. Which means that error
              message number stability between GA releases is broken.
              
              This patch fixes the problem by removing the error message and
              using ER_UNKNOWN_ERROR instead.
            ------------------------------------------------------------
            revno: 2875.532.4
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Tue 2013-05-07 14:36:46 +0200
            message:
              ULN-RPMs bug fix for BR16298542
            ------------------------------------------------------------
            revno: 2875.532.3
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Mon 2013-05-06 20:31:26 +0530
            message:
              Bug #16722314 FOREIGN KEY ID MODIFIED DURING EXPORT
              Bug #16754901 PARS_INFO_FREE NOT CALLED IN DICT_CREATE_ADD_FOREIGN_TO_DICTIONARY
              
              Merging the fix from mysql-5.5 to mysql-5.5.32-release.
            ------------------------------------------------------------
            revno: 2875.532.2
            committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Mon 2013-05-06 16:06:32 +0200
            message:
              Bug#16757869: INNODB: POSSIBLE REGRESSION IN 5.5.31, BUG#16004999
              
              The problem was that if UPDATE with subselect caused a
              deadlock inside InnoDB, this deadlock was not properly
              handled by the SQL layer. This meant that the SQL layer
              would try to unlock the row after InnoDB had rolled
              back the transaction. This caused an assertion inside
              InnoDB.
              
              This patch fixes the problem by checking for errors
              reported by SQL_SELECT::skip_record() and not calling
              unlock_row() if any errors have been reported.
                
              This bug is similar to Bug#13586591, but for UPDATE
              rather than DELETE. Similar issues in filesort/opt_range/
              sql_select will be investigated and handled in the scope
              of Bug#16767929
            ------------------------------------------------------------
            revno: 2875.532.1
            committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
            branch nick: mysql-5.5.32-release
            timestamp: Mon 2013-05-06 15:19:37 +0200
            message:
              Updated spec file for Bug16488773
------------------------------------------------------------
revno: 5885
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 15:58:19 +0300
message:
  Non-functional white space fixup
------------------------------------------------------------
revno: 5884
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 15:57:41 +0300
message:
  Remove unused buf_pool_t::old_pool_size
------------------------------------------------------------
revno: 5883 [merge]
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: t
timestamp: Thu 2013-06-06 12:48:08 +0300
message:
  Merge mysql-trunk-wl6658 -> mysql-trunk
    ------------------------------------------------------------
    revno: 5107.33.28 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-06-05 12:45:54 +0300
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.27
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-06-05 12:40:50 +0300
    message:
      WL#6658 Implement update_time for InnoDB tables
      
      Non-functional change: use trx_mod_tables_t instead of std::set<dict_table_t*>
    ------------------------------------------------------------
    revno: 5107.33.26
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-06-05 12:39:50 +0300
    message:
      WL#6658 Implement update_time for InnoDB tables
      
      Remove the to-be-dropped table from the list of modified tables
      by parent_trx in ha_innobase::delete_table().
    ------------------------------------------------------------
    revno: 5107.33.25
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-06-05 11:16:37 +0300
    message:
      WL#6658 Implement update_time for InnoDB tables
      
      Wipe away a table object that is going to be destroyed from
      trx_t::mod_tables.
    ------------------------------------------------------------
    revno: 5107.33.24 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-06-04 18:44:16 +0300
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.23
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-06-04 18:37:46 +0300
    message:
      WL#6658 Implement update_time for InnoDB tables
      
      Do not maintain update_time for temporary tables since they are not
      present in INFORMATION_SCHEMA.TABLES.
    ------------------------------------------------------------
    revno: 5107.33.22
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-06-04 16:11:31 +0300
    message:
      WL#6658 Implement update_time for InnoDB tables
      
      Adjust mysqlshow.result since it shows the column update_time which
      is no longer NULL.
    ------------------------------------------------------------
    revno: 5107.33.21 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-06-04 10:09:31 +0300
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.20
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-04-09 13:36:39 +0300
    message:
      WL#6658 Implement update_time for InnoDB tables
      
      Also update information_schema.tables.update_time by TRUNCATE TABLE.
      
      Spotted by:	avinash.potnuru@
    ------------------------------------------------------------
    revno: 5107.33.19
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Thu 2013-03-28 11:43:52 +0530
    message:
      incorporated review comments from Vasil
    ------------------------------------------------------------
    revno: 5107.33.18
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-27 20:13:56 +0200
    message:
      Adjust main.partition_innodb test - update_time is no longer NULL,
      but contains the current timestamp, so it needs to be replaced with
      a dummy value like #.
    ------------------------------------------------------------
    revno: 5107.33.17 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-27 20:12:18 +0200
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.16
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-27 18:28:51 +0530
    message:
      Removed the traling whitespace
    ------------------------------------------------------------
    revno: 5107.33.15
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-27 18:00:43 +0530
    message:
      Added new testcases as per test plan
    ------------------------------------------------------------
    revno: 5107.33.14
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Fri 2013-03-22 13:52:45 +0200
    message:
      Disable the newly added innodb_update_time mtr test in embedded
      mode since it tries to restart the server.
    ------------------------------------------------------------
    revno: 5107.33.13
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Thu 2013-03-14 14:55:30 +0200
    message:
      Speedup a little innodb_update_time.test
      
      Suggested by:	Marko (rb:2091)
    ------------------------------------------------------------
    revno: 5107.33.12 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-13 11:50:52 +0200
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.11
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-13 11:01:07 +0200
    message:
      Add a comment to the code which updates dict_table_t::update_time that
      it is fine to do so concurrently.
      
      Echo some of the comments from innodb_update_time.test into
      innodb_update_time.result, so the latter is easier to read.
      
      Suggested by:	Kevin (rb:2091)
    ------------------------------------------------------------
    revno: 5107.33.10
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-06 09:48:25 +0200
    message:
      Extend the update_time test with a XA transaction and a server restart
      
      Suggested by:	Marko (rb:2091)
    ------------------------------------------------------------
    revno: 5107.33.9
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-03-06 08:15:04 +0200
    message:
      Reword a text in a comment.
      
      Suggested by:	Kevin (rb:2091)
    ------------------------------------------------------------
    revno: 5107.33.8
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-03-05 13:38:41 +0200
    message:
      Swap the calls to trx_commit() and trx_update_mod_tables_timestamp()
      per Marko's suggestion from rb:2091
    ------------------------------------------------------------
    revno: 5107.33.7 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Tue 2013-03-05 13:33:42 +0200
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.6
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Mon 2013-03-04 20:39:51 +0200
    message:
      Extend the mtr testcase for update_time per Marko's suggestion
    ------------------------------------------------------------
    revno: 5107.33.5
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Mon 2013-03-04 17:39:18 +0200
    message:
      Per Marko's belief - remove check_time from this WL.
    ------------------------------------------------------------
    revno: 5107.33.4 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Mon 2013-03-04 17:31:11 +0200
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.3 [merge]
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-02-27 15:16:32 +0200
    message:
      Merge mysql-trunk -> mysql-trunk-wl6658
    ------------------------------------------------------------
    revno: 5107.33.2
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Wed 2013-02-27 15:14:18 +0200
    message:
      part of WL#6658 Implement update_time and check_time for InnoDB tables
      
      Remove diagnostic printouts.
    ------------------------------------------------------------
    revno: 5107.33.1
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-trunk-wl6658
    timestamp: Sat 2012-12-15 16:54:22 +0200
    message:
      part of WL#6658 Implement update_time and check_time for InnoDB tables
      
      Add the basic functionality of maintaining check_time and update_time
      in InnoDB in-memory together with two mtr tests.
------------------------------------------------------------
revno: 5882 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-06 11:17:49 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.67
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-06 10:47:20 +0800
    message:
      Fix Bug #16801781 - FULLTEXT SEARCH USING WORDS WITH APOSTROPHE (') DOES
      NOT WORK ON INNODB TABLES
      
      rb://2539 Approved by Sunny Bains
------------------------------------------------------------
revno: 5881
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-06-06 08:29:35 +0530
message:
  - Non-functional change of replacing #if with #ifdef.
    Verified main/innodb suite.
------------------------------------------------------------
revno: 5880 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-06-06 10:27:29 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.66
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-06-06 09:58:44 +0800
    message:
      Fix Bug #16765397 - FTS: STILL SPAMMING THE ERROR LOG BASED ON USER QUERIES
      
      rb://2523 approved by Marko
------------------------------------------------------------
revno: 5879 [merge]
committer: Hery Ramilison <hery.ramilison@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-05 14:23:01 +0200
message:
  Upmerge of the 5.6.12 build
    ------------------------------------------------------------
    revno: 3902.242.65 [merge]
    author: hery.ramilison@oracle.com
    committer: MySQL Build Team <mysql-build@oss.oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-06-05 14:02:14 +0200
    message:
      Merge from mysql-5.6.12-release
        ------------------------------------------------------------
        revno: 3902.247.8
        tags: mysql-5.6.12
        committer: Tor Didriksen <tor.didriksen@oracle.com>
        branch nick: 5.6.12-release
        timestamp: Tue 2013-05-21 17:07:01 +0200
        message:
          Backport of fix for:
          Bug#69119 Bug#16760474 Wrong FOUND_ROWS() on MySQL 5.6.11
        ------------------------------------------------------------
        revno: 3902.247.7
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Mon 2013-05-13 10:19:07 +0200
        message:
          Updated copyright year information
        ------------------------------------------------------------
        revno: 3902.247.6
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Mon 2013-05-13 09:50:34 +0200
        message:
           Adding fix for Bug#16798868
        ------------------------------------------------------------
        revno: 3902.247.5
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Thu 2013-05-09 07:31:00 +0300
        message:
          Push to 5.6.12 release clone:
          
          ------------------------------------------------------------
          revno: 5097
          revision-id: marko.makela@oracle.com-20130508201655-4uefvpqc1vytohpp
          parent: marko.makela@oracle.com-20130508201601-e9furpa8h3z9eeyl
          committer: Marko M?kel? <marko.makela@oracle.com>
          branch nick: mysql-5.6
          timestamp: Wed 2013-05-08 23:16:55 +0300
          message:
            Bug#16774118 RACE CONDITION IN BLOB ACCESS DURING ONLINE ALTER TABLE
            
            This is a race condition in BLOB access during online ALTER TABLE,
            when applying the table modification log for other than the very last
            log block.
            
            row_log_table_apply_convert_mrec(): Acquire the index B-tree lock to
            protect the access to log->blobs and the BLOB page itself.
            
            rb#2401 approved by Kevin Lewis
        ------------------------------------------------------------
        revno: 3902.247.4
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Mon 2013-05-06 20:28:02 +0530
        message:
          Bug #16722314 FOREIGN KEY ID MODIFIED DURING EXPORT
          Bug #16754901 PARS_INFO_FREE NOT CALLED IN DICT_CREATE_ADD_FOREIGN_TO_DICTIONARY
          
          Merging the fix from mysql-5.6 to mysql-5.6.12-release.
        ------------------------------------------------------------
        revno: 3902.247.3
        committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Mon 2013-05-06 16:04:21 +0200
        message:
          Bug#16757869: INNODB: POSSIBLE REGRESSION IN 5.5.31, BUG#16004999
          
          The problem was that if UPDATE with subselect caused a
          deadlock inside InnoDB, this deadlock was not properly
          handled by the SQL layer. This meant that the SQL layer
          would try to unlock the row after InnoDB had rolled
          back the transaction. This caused an assertion inside
          InnoDB.
          
          This patch fixes the problem by checking for errors
          reported by SQL_SELECT::skip_record() and not calling
          unlock_row() if any errors have been reported.
          
          This bug is similar to Bug#13586591, but for UPDATE
          rather than DELETE. Similar issues in filesort/opt_range/
          sql_select will be investigated and handled in the scope
          of Bug#16767929
        ------------------------------------------------------------
        revno: 3902.247.2
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Mon 2013-05-06 15:45:13 +0200
        message:
          Updated spec file for Bug16488773
        ------------------------------------------------------------
        revno: 3902.247.1
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.6.12-release
        timestamp: Mon 2013-05-06 14:50:12 +0300
        message:
          Cherry-pick from mysql-5.6 into mysql-5.6.12-release:
          
          revno: 5079
          revision-id: marko.makela@oracle.com-20130506113412-2b24o44ojkp6mo4a
          parent: mysql-build@oss.oracle.com-20130506103306-y5nnl41oy5e2pe54
          committer: Marko M?kel? <marko.makela@oracle.com>
          branch nick: mysql-5.6
          timestamp: Mon 2013-05-06 14:34:12 +0300
          message:
            Bug#16765255 Bug#16735660 ASSERT TABLE2 == NULL NOT FIXED COMPLETELY
          
            Fix a regression introduced by
            Bug#16593427 ROLLBACK OF RECOVERED TRANSACTION CORRUPTS CREATE INDEX
          
            The fix in Bug#16735660 was incomplete.
          
            Approved on IM by Jimmy Yang.
------------------------------------------------------------
revno: 5878
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-06-05 10:24:03 +0200
message:
  Bug#11752891: Cannot run 32+ UNION of two levels nested subquery
  
  Removing accidental code change.
------------------------------------------------------------
revno: 5877
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-04 16:19:29 +0530
message:
  Bug#16443820 : Modified the test test_mem_overun and changed default engine to MyISAM as this test is specific to MyISAM. 
------------------------------------------------------------
revno: 5876 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug16736461
timestamp: Tue 2013-06-04 09:17:24 +0200
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.64
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-bug16736461
    timestamp: Tue 2013-06-04 08:48:27 +0200
    message:
      Bug#16736461: ATOMIC OPERATIONS USING LOCKS ARE BROKEN, WON'T COMPILE 
      
      Post-push fix: Change my_atomic_rwlock_t back to contain pthread_mutex_t
      and not mysql_mutex_t to avoid risk of recursion. Instead change SAFE_MUTEX
      versions of my_atomic_rwlock_* macros to accept pthread_mutex_t parameter.
      Issue noticed by Marc Alff.
------------------------------------------------------------
revno: 5875
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-04 08:40:13 +0200
message:
  Bug#11865609: IN and NULLs
  
  Duplicate of fixed bug, added test case
------------------------------------------------------------
revno: 5874
committer: Roy Lyseng <roy.lyseng@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-04 08:27:18 +0200
message:
  Bug#11752891: Cannot run 32+ UNION of two levels nested subquery
  
  Duplicate bug, added test case
------------------------------------------------------------
revno: 5873 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-04 11:49:34 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.63
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-06-04 10:45:39 +0530
    message:
      Bug #16628233 CHANGE BUFFERING: CRASH/CORRUPTION, AFTER ERROR
      "UNABLE TO PURGE A RECORD"
      
      Problem:
      
      There is a race condition between the following statements:
      
      alter table t1 add key k3 (f2(255));
      insert into t1(f2) values (repeat('%', 255));
      
      1. The alter table stmt completed the prepare phase and has downgraded
         the lock on the table.
      
      2. The insert stmt inserts the record into the clustered index.  Yet
         to insert into the newly added secondary index. 
      
      3. The alter table proceeds to scan the clustered index in READ
         UNCOMMITTED and populates the secondary index.  It also processes
         the newly inserted clustered index. It completes inplace alter and
         sets online status of the index to INDEX_ONLINE_COMPLETE. Now it
         wants to get into commit phase.  Waits for lock because insert is
         using table.
      
      4. The insert stmt proceeds and checks the online status.  It is
         marked as INDEX_ONLINE_COMPLETE, so proceeds to insert the record
         into the secondary index.  
      
      5. Conflict.
      
      Solution:
      
      In step (3), the alter table must use REPEATABLE READ while scanning
      the clustered index.  The read view must be created in the prepare
      phase of the online alter table, when an exclusive lock is held on the
      table.
      
      rb#2534 approved by Marko and Jimmy.
------------------------------------------------------------
revno: 5872
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-06-04 10:11:58 +0530
message:
  - bug#16631778: CRASH WHEN TRYING TO DROP TABLE WITH
    INNODB_FORCE_RECOVERY >=3 SET
  
    With innodb_force_recovery mode set to >= 3 server should block
    only DML, DDL is allowed.
    In order to ensure DDL ops are allowed we need to remove dependency of
    rseg assignment from srv_force_recovery mode.
    Respective API will ensure blocking of DML even if rseg is assigned for
    such trx.
  
    Approved by: Sunny (rb#2471)
------------------------------------------------------------
revno: 5871 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-06-04 10:35:21 +0800
message:
  Bug#16875543 MEMCACHED: SERVER CRASH IN MEMCACHED SET OPERATION.
  
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.62
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: 16875543
    timestamp: Tue 2013-06-04 09:53:23 +0800
    message:
      Bug#16875543 MEMCACHED: SERVER CRASH IN MEMCACHED SET OPERATION.
      
      rb://2533 Approved by Jimmy
      
      This bug is because, we use dtype len to pad the utf8 char(n) column
      value.
      For example, there's a utf8 char column c1 char(120). The dtype len of
      this column is 3*120=360.
      In memcached update operation, we copied a field from an old tuple, and
      the actual data length is less than 360. Since we optimize the utf8
      string storage for saving space.
      The solution is we don't copy old tuple to new tuple anymore. Every time
      we create a new tuple, we allocate the memory for it and set it.
------------------------------------------------------------
revno: 5870 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B14525642-trunk
timestamp: Mon 2013-06-03 15:43:43 +0300
message:
  merge + fix of a compilation error as a followup to 
  vasil.dimov@oracle.com-20130603104521-8cwhtfk292lwksap
    ------------------------------------------------------------
    revno: 3902.242.61
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B14525642-5.6
    timestamp: Mon 2013-06-03 14:50:30 +0300
    message:
      Bug #14525642: SEVERAL COM_* COMMANDS DON'T CHECK PACKET-LENGTH
      
      Added length checks reading the incoming network packets in the places they
      were missing.
      Test cases added.
------------------------------------------------------------
revno: 5869
committer: Olav Sandstaa <olav.sandstaa@oracle.com>
branch nick: icp-bug-fix
timestamp: Mon 2013-06-03 14:05:31 +0200
message:
  Fix for Bug#16804581 ASSERTION FAILED: OTHER_TBLS_OK || IDX_COND->CONST_ITEM()
  
  The failing asserts happens when considering pushing an index
  condition and the condition does not contain fields from the index. In
  this is the case we do not push the index condition to the storage
  engine. The failing assert is to detect that this only happens when
  the condition can access fields from earlier tables in the join or is
  a constant item. In the failing query, the index condition is an
  updatable user variable which caused the assert to fail.
  
  The fix for this is to extend the assert to also allow conditions
  containing updatable user variables to be rejected as index pushdown
  conditions if the condition does not contains any fields from the
  index.
------------------------------------------------------------
revno: 5868 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 16:37:58 +0530
message:
  BUG 13619394 5.6 => TRUNK
    ------------------------------------------------------------
    revno: 3902.242.60 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-06-03 16:35:57 +0530
    message:
      BUG 13619394 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.525.41
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-06-03 16:34:43 +0530
        message:
          BUG #13619394 - MAKE TEST FAILS ON MY_VSNPRINTF 
------------------------------------------------------------
revno: 5867
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 13:45:21 +0300
message:
  Fix Bug#16899560 REMOVE USAGE OF 'USING NAMESPACE STD;' IN INNODB
  
  To avoid namespace clashes always use std::whatever and do not
  'use namespace std'.
  
  Patch submitted by:	Sunny (via email)
------------------------------------------------------------
revno: 5866
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 09:31:51 +0300
message:
  Bug#16880127 SIMPLIFY RECORD LOCK COMPUTATIONS
  
  lock_rec_reset_nth_bit(): Return the old value of the lock bit.
  
  lock_move_reorganize_page(), lock_move_rec_list_end(),
  lock_move_rec_list_start(): Do not invoke lock_rec_get_nth_bit()
  before lock_rec_reset_nth_bit(). Use the low-level routines for
  iterating to the next record.
  
  rb#2538 approved by Jimmy Yang
------------------------------------------------------------
revno: 5865
committer: Prabeen Pradhan <prabeen.pradhan@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 11:54:21 +0530
message:
  Changing test to run with current default engine innodb. (Added engine clause to two subtest.They are MyISAM specific)
------------------------------------------------------------
revno: 5864
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-06-03 11:16:48 +0530
message:
  - bug#16845421 INNODB: CRASH WHILE RECOVERING A TRANSACTION
    Follow-up fix to optimize trx_init invocation.
    Also, fixing existing issues. Transaction freed during recovery
    should do trx_init.
    Transaction freed during normal operation (user/background) should avoid doing
    it as action is already done as part of trx_commit.
  
    Approved by: Sunny (rb#2567)
------------------------------------------------------------
revno: 5863
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-31 11:42:09 +0300
message:
  Silence a compilation warnings about ignoring return values from
  fwrite() and ftruncate().
  
  MySQL parts reviewed by:	Guilhem Bichot
------------------------------------------------------------
revno: 5862
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-31 11:24:24 +0300
message:
  Fix compilation warnings:
  
  cc1plus: warnings being treated as errors
  ha_innodb.cc: In function 'void ib_senderrf(THD*, ib_log_level_t, ib_uint32_t, ...)':
  ha_innodb.cc:16418: error: ignoring return value of 'int vasprintf(char**, const char*, char*)', declared with attribute warn_unused_result
  ha_innodb.cc: In function 'void ib_errf(THD*, ib_log_level_t, ib_uint32_t, const char*, ...)':
  ha_innodb.cc:16494: error: ignoring return value of 'int vasprintf(char**, const char*, char*)', declared with attribute warn_unused_result
  ha_innodb.cc: In function 'void ib_logf(ib_log_level_t, const char*, ...)':
  ha_innodb.cc:16528: error: ignoring return value of 'int vasprintf(char**, const char*, char*)', declared with attribute warn_unused_result
  
  by explicitly handling the ENOMEM case.
------------------------------------------------------------
revno: 5861
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-31 11:21:36 +0300
message:
  Fix Bug#16793724 I_S INNODB_TRX.TRX_TABLES_LOCKED NEEDS TO SHOW COUNT
  OF TABLES LOCKED BY TRX
  
  Count all table locks in information_schema.innodb_trx.trx_tables_locked.
  Previously we shipped trx_t::mysql_n_tables_locked, but it does not account
  at least the IS table locks.
  
  Reviewed by:	Inaam (rb:2430)
------------------------------------------------------------
revno: 5860
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk-bug16669321
timestamp: Thu 2013-05-30 13:00:48 -0500
message:
  Bug#16669321 - PERFSCHEMA.PFS_UPGRADE_EVENT UNSTABLE AFTER SWITCHING
                 STORAGE ENGINE TO INNODB
  
  In PFS tests that use mysql_upgrade, disable the general log and
  the slow query log to avoid spurious occurrences of
  "ERROR 1194: Table 'general_log' marked as crashed".
------------------------------------------------------------
revno: 5859
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-05-30 15:57:06 +0200
message:
  Bug#16870814: MAIN.PS FAILED SPRODICALLY IN PB WHEN QUERY WAS INTERRUPTED
  
  Rewrote test case to use sync points.
  No code changes.
------------------------------------------------------------
revno: 5858 [merge]
committer: Shaohua Wang <shaohua.wang@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-30 20:58:09 +0800
message:
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.59
    committer: Shaohua Wang <shaohua.wang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-30 18:11:04 +0800
    message:
      BUG#16516193 - LITERAL PHRASES CANNOT BE COMBINED WITH + OR - OPERATOR
      
      Analysis:
      The root cause is that we don't merge 'words' in 'fts_merge_doc_ids',
      so it causes there are no words in a matched doc, and then its rank is 0.
      
      rb#2524 approved by Jimmy.
------------------------------------------------------------
revno: 5857
committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-30 17:38:35 +0530
message:
  wl6925:The patch was approved look the rb http://rb.no.oracle.com/rb/r/2340/
------------------------------------------------------------
revno: 5856
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-05-30 11:48:18 +0200
message:
  Bug#15963619 GETTING "TABLE IS READ ONLY" ERROR EVEN WHILE READING
  WITH --INNODB-READ-ONLY
  
  Follow-up patch: Fix test failures due to error message renumbering in trunk.
------------------------------------------------------------
revno: 5855 [merge]
committer: Sreedhar S <sreedhar.sreedhargadda@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-30 11:15:06 +0530
message:
  Fix to remove unreferenced components
    ------------------------------------------------------------
    revno: 3902.242.58 [merge]
    committer: Sreedhar S <sreedhar.sreedhargadda@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-30 11:06:48 +0530
    message:
      Bug 12928601, fixed unreferenced msi components
        ------------------------------------------------------------
        revno: 2875.525.40
        committer: Sreedhar S <sreedhar.sreedhargadda@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-05-29 20:09:45 +0530
        message:
          Fix to remove unreferenced components
------------------------------------------------------------
revno: 5854 [merge]
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk-wl5721
timestamp: Thu 2013-05-30 12:53:28 +0800
message:
  Manual Merge
    ------------------------------------------------------------
    revno: 5711.1.1
    committer: Libing Song <libing.song@oracle.com>
    branch nick: mysql-trunk-wl5721
    timestamp: Sun 2013-05-12 07:17:29 +0800
    message:
      WL#5721 Refactor replication dump thread
      
      PROBLEMS
      ========
      * Dump threads acquired LOCK_log when reading each event. In fact, it
        is not necessary in most of the cases.
      
      * The code was too complex and mysql_binlog_send() was too huge. It was
        very difficult to maintain.
      
      * There was some code never used.
      
      * Deadlock on semi-synchronous replication
        WL#6355 introduces a feature that semi-synchronous waits for ACK from
        slave when the transaction's events is written to disc but before the
        transaction is committed.
      
        It introduced a three way deadlock.
      
          SESSION 1(Rotate)              SESSION 2(Trx Commit) DUMP THREAD
          ---------                      ---------             -----------
        1                                Flush Stage
                                         Signal update
        2 Rotate(hold LOCK_log)
          WAITING for Session2 to commit
        3                                Sync Stage            WAITING for Session1
                                                               to release LOCK_log
        4                                semisync
                                         WAITING for ACK
      
        Session1 had to hold LOCK_log to block other sessions appending new events.
        It also blocked dump threads reading events.
      
      DESIGN AND IMPLEMENTATION
      =========================
      Binary events can only be appended at the end of the active file. So it is safe
      to read both inactive and active binlog files without lock. The only problem
      is that dump thread may read an incomplete event at the end of active log file.
      
      To solve the problem, MYSQL_BIN_LOG needs a variable which records the end
      position of the last event in active file.
      
      * MYSQL_BIN_LOG::binlog_end_pos
        The end position of active file. It is safe to read all events before it
        without any lock. It should be updated after appending events but before
        broadcasting update signal.
      
      * MYSQL_BIN_LOG::LOCK_binlog_end_pos
        It is used to protect binlog_end_pos. The lock is required when both writing
        and reading binlog_end_pos.
      
      * Binlog_sender class
        The class is designed to make the code of mysql_binlog_send() has better
        modularity and readability. All code of original mysql_binlog_send is
        moved to the class. Now mysql_binlog_send just need to call Binlog_sender.
------------------------------------------------------------
revno: 5853 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-30 10:49:11 +0800
message:
  Bug#16816824 CLEANUP COMPILE WARNING MESSAGES OF INNODB MEMCACHED
  PLUGIN
  
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.57
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-30 10:33:19 +0800
    message:
      Bug#16816824 CLEANUP COMPILE WARNING MESSAGES OF INNODB MEMCACHED
      PLUGIN
      
      rb://2489 Approved by Jimmy
      
      We removed compile warning of innodb memcached plugin. It didn't
      include the compile warning in daemon and other source files from
      original memcached code.
------------------------------------------------------------
revno: 5852 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-30 09:57:00 +0800
message:
  Null Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.56
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-30 09:34:18 +0800
    message:
      Bug#15963619 GETTING "TABLE IS READ ONLY" ERROR EVEN WHILE READING
      WITH --INNODB-READ-ONLY
      
      rb://2439 Approved by Jimmy
      
      This fix is based on the Sunny's patch in the bug report.
      
      When InnoDB is in read-only mode, we prevent all lock operation in
      ha_innodbase::external_lock as MySQL want to create table.
      In fact, we only need to prevent write lock operation when MySQL is
      doing create table.
------------------------------------------------------------
revno: 5851 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-30 09:36:36 +0800
message:
  Bug#15963619 GETTING "TABLE IS READ ONLY" ERROR EVEN WHILE READING
  WITH --INNODB-READ-ONLY
  
  Merge from mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.246.1
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-29 19:30:39 +0800
    message:
      Bug#15963619 GETTING "TABLE IS READ ONLY" ERROR EVEN WHILE READING
      WITH --INNODB-READ-ONLY
      
      rb://2439 Approved by Jimmy
      
      This fix is based on the Sunny's patch in the bug report.
      
      When InnoDB is in read-only mode, we prevent all lock operation in
      ha_innodbase::external_lock as MySQL want to create table.
      In fact, we only need to prevent write lock operation when MySQL is
      doing create table.
------------------------------------------------------------
revno: 5850
committer: Tatjana Azundris Nuernberg <tatjana.nuernberg@oracle.com>
branch nick: 57-wl5928_final
timestamp: Wed 2013-05-29 15:06:16 +0100
message:
  WL#5928: Most statements should clear the diagnostic area
  
  Previously, the errors/warnings list was only cleared when
  a statement accessed tables. This was non-standard. We now
  clear the DA for every procedure statement (mostly anything
  that is executed and is not a diagnostics statement like
  GET DIAGNOSTICS or SHOW WARNINGS).
  
  This changes both code and behaviour for
  - direct invocation
  - stored procedures/functions
  - prepared statements
  - query cache
  
  GET DIAGNOSTICS and the old SHOW WARNINGS, SHOW ERRORS,
  SHOW COUNT(*) WARNINGS, SHOW COUNT(*) ERRORS are diagnostics
  statements. They do not clear the diagnostics area even
  when issued repeatedly.
  
  @@error_count and @@warning_count are "diagnostics variables"
  and will appear in non-diagnostics statements like SELECT.
  For backward compatibility, they will contain the correct
  values describing the previous statement when queried
  immediately after execution of the previous statement:
  DROP TABLE does_not_exist;
  SELECT @@error_count;      # renders 1 (result of DROP)
  SELECT @@error_count;      # renders 0 (result of SELECT)
  This is discouraged; use GET DIAGNOSTICS instead.
  
  Likewise, SHOW WARNINGS could be used as the first
  statement of a HANDLER (or preceeded only by other
  diagnostics statements), but this is discouraged --
  use GET [STACKED] DIAGNOSTICS instead.
  
  Errors during parsing correctly set the DA; any
  errors thrown there replace the previous command's
  diagnostics, even if it was a diagnostics statement
  the user failed at issuing.
  
  The SQL standard requires the diagnostics statement
  (GET DIAGNOSTICS) not to be preparable; likewise,
  SHOW WARNINGS, SHOW ERRORS, and statements containing
  @@error_count or @@warning_count must not be used in
  prepared statements.
  
  Code:
  DA resetting was sprinkled all over the code, sometimes
  in the form of a "maybe" (opt_reset_condition_info()).
  All occurences of the latter were removed.
  Care was taken to reduce the number of occurences of the
  former, usually to one central point for each subsystem
  (parsing, SP, PS, QC, signaling, logging).
  Self-printing of SP instructions was slightly extended
  and refactored.
  
  Tests:
  wl5928.test tests and documents the new expected behaviour.
  Various other tests were adapted to provided similarly
  expressive results as they used to under the previous
  circumstances.
------------------------------------------------------------
revno: 5849
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug14036425
timestamp: Wed 2013-05-29 15:33:42 +0200
message:
  Bug#14036425: BUILD FAILS WHEN HAVE_CRYPT=0
  
  Fix compilation warning (upgraded to error on debug builds):
    /sql/item_strfunc.cc error: unused variable res
  Moved declaration of res inside HAVE_CRYPT #ifdef
------------------------------------------------------------
revno: 5848
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug11765682
timestamp: Wed 2013-05-29 15:31:14 +0200
message:
  Bug#11765682: STRINGS/CTYPE-UCS2.C FAILS TO COMPILE IF -DWITH_EXTRA_CHARSETS=NONE
  
  Fix compilation warning (upgraded to error on debug builds):
    /strings/ctype-ucs2.c:50: warning: lfactor defined but not used
  when building with -DWITH_EXTRA_CHARSETS=NONE.
  Fixed by moving declaration inside 
  #ifdef HAVE_CHARSET_mb2_or_mb4 block
------------------------------------------------------------
revno: 5847
committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
branch nick: trunk-16868514
timestamp: Wed 2013-05-29 15:21:45 +0200
message:
  Bug#16868514: I_MAIN.FUNC_LIKE_NOT_EMBEDDED IF FAILING IN
    DAILY-TRUNK ON WINDOWS
  
  The patch for Bug#11766880 contained an extension of the test
  'i_main.func_like_not_embedded'. The test behaves different on
  Windows than on Linux/Solaris since:
  
  1. Opening a file appears to return a different error code
     (ENOENT rather than ENAMETOOLONG) when the file name is too
     long.
  
  2. The argument to mkdir is a relative path, but Windows seems
     to prepend the current working directory before checking
     path length, which means that testing path length limits
     depends on current working directory. 
  
  Hence, the "fix" for this issue is to disable this test on
  Windows. The tests added in the patch for Bug#11766880 is
  therefore moved to a separate file
  'i_main.not_windows_not_embedded.test'.
------------------------------------------------------------
revno: 5846
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-29 16:13:28 +0300
message:
  Silence a bogus compiler warning.
------------------------------------------------------------
revno: 5845
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-29 15:21:22 +0300
message:
  Hook ADD_DEPENDENCIES() to GenError to all targets that compile InnoDB
  sources: the innobase library, innochecksum and unit tests.
  
  InnoDB files use ER_* which imposes a dependency on GenError.
  Also, InnoDB's ha_prototypes.h includes sql_class.h includes
  sql_profile.h includes unireg.h includes mysqld_error.h. And
  mysqld_error.h is _generated_ by GenError, so compilation would
  fail if cmake/make attempts to compile any of the InnoDB targets
  before GenError.
------------------------------------------------------------
revno: 5844
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-29 14:50:35 +0300
message:
  Bug#16852278 SIMPLIFY RECORD COMPARISONS
  
  cmp_data(): Common inline function for comparing two fields.
  Compare the common prefix with memcmp().
  
  Assert that the fields being compared cannot be stored externally. Only clustered index leaf page records can contain externally stored fields, and the clustered index records should differ already in the PRIMARY KEY columns, which cannot be stored externally.
  
  page_cmp_dtuple_rec_with_match(): Remove, and call
  cmp_dtuple_rec_with_match() instead, on user records only.
  
  cmp_rec_rec_with_match(): Remove the unused parameter matched_bytes.
  Ignore the initial value of *matched_fields (assume that it is 0).
  
  page_cur_search(): Remove the constant parameter PAGE_CUR_LE.
  
  Remove support for byte-level prefix granularity in searches.
  
  There were 2 users of this information: the adaptive hash index, and
  prefix searches (cmp_dtuple_is_prefix_of_rec(), called for match_mode
  == ROW_SEL_EXACT_PREFIX).
  
  The byte-level granularity was only available for VARBINARY columns,
  and before rb#2350 Bug#16723431 REMOVE SRV_LATIN1_ORDERING, for the
  default collation latin1_swedish_ci. Prefix searches should never
  supply a partial-field prefix, due to an assertion in
  row_sel_convert_mysql_key_to_innobase().
  
  The adaptive hash index is unlikely to benefit much from the
  byte-level granularity either. (No performance penalty was observed
  when testing rb#2350, and the keys did include latin1_swedish_ci.)
  
  btr_cur_t: Remove up_bytes, low_bytes.
  btr_search_t: Remove n_bytes.
  buf_block_t: Remove n_bytes, curr_n_bytes.
  
  dtuple_fold(), rec_fold(): Remove n_bytes.
  
  ut_pair_min(), ut_pair_cmp(): Remove.
  
  page_cur_search_with_match(), page_cur_try_search_shortcut():
  Remove iup_matched_bytes, ilow_matched_bytes.
  
  cmp_dtuple_rec_with_match_low(), cmp_dtuple_rec_with_match():
  Remove matched_bytes.
  
  Remove the normalization of the comparison result to -1 or 1.
  Instead, return negative or positive, and adjust the callers.
  
  btr_search_check_guess(), page_cur_search_with_match(), page_validate(),:
  Allow a wider range of return values from cmp_dtuple_rec_with_match().
  
  row_merge_blocks(): Allow a wider range of return values from
  cmp_rec_rec_simple().
  
  ib_like_t: Remove the unused and unsupported operations SUFFIX,
  SUBSTR, REGEXP.
  
  eval_cmp_like(), eval_cmp(): Simplify the code.
  
  pars_like_rebind(): Remove the unsupported ib_like_t operations.
  
  dtuple_coll_cmp(), cmp_data_data(), cmp_dtuple_rec(),
  cmp_dtuple_rec_with_match_low(), cmp_rec_rec(),
  cmp_rec_rec_with_match(), cmp_rec_rec_simple(), cmp_dfield_dfield(),
  innobase_mysql_cmp(), cmp_whole_field(), cmp_data(),
  cmp_dfield_dfield_like_prefix(), row_merge_tuple_cmp(): Return
  negative or positive instead of -1 or 1.
  
  dtype_get_pad_char(): Merge to ib_col_set_value() and cmp_data().
  
  cmp_decimal(): Refactored from cmp_decimal(). Compare two DATA_DECIMAL
  fields. This should only be needed for table definitions before MySQL 5.1.
  MYSQL_TYPE_NEWDECIMAL is compared as binary strings.
  
  cmp_debug_dtuple_rec_with_match(): Remove. This is virtually identical
  to its only caller. There should not be any inconsistency between the
  different comparison functions, because all of them should use cmp_data().
  
  rb#2490 approved by Jimmy Yang
------------------------------------------------------------
revno: 5843 [merge]
committer: Astha Pareek <astha.pareek@oracle.com>
branch nick: mysql-trunk-b16460123-2
timestamp: Wed 2013-05-29 16:09:35 +0530
message:
  BUG#16460123- NOTE ABOUT "MASTER.INFO REPOSITORY" ON CHANGE MASTER TO IS MISLEADING
  BUG#16461303- WARNING ISSUED ABOUT MASTER.INFO WHEN USING MASTER-INFO-REPOSITORY=TABLE
  
  uperge 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.242.55
    committer: Astha Pareek <astha.pareek@oracle.com>
    branch nick: mysql-5.6-b16460123-2
    timestamp: Wed 2013-05-29 16:07:30 +0530
    message:
      BUG#16460123- NOTE ABOUT "MASTER.INFO REPOSITORY" ON CHANGE MASTER TO IS MISLEADING
      BUG#16461303- WARNING ISSUED ABOUT MASTER.INFO WHEN USING MASTER-INFO-REPOSITORY=TABLE
      
      Problem:
      When executing CHANGE MASTER TO on MySQL 5.6 with either
      MASTER_USER or MASTER_PASSWORD options, MySQL issues a 
      warning:
      Level: Note
      Code: 1760
      Message: Storing MySQL user name or password information
      in the master.info repository is not secure and is 
      therefore not recommended. Please see the MySQL Manual for
      more about this issue and possible alternatives.
      
      This appears to suggest that "master.info" is insecure,
      which may lead the reader to believe that they should use
      master-info-repository=table instead of 
      master-info-repository=file. However, this warning is
      issued when using both types of master info repository.
      
      Also, the suggestion to see the MySQL Manual is not
      pointing to any specific section in the Manual for user's
      convenience.
      
      Fix:
      This Note is changed to specify that master info repository
      is insecure to store USERNAME or PASSWORD and thence points
      to the START SLAVE section of MYSQL Manual for reference.
------------------------------------------------------------
revno: 5842
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-05-29 16:02:28 +0530
message:
  - bug#16869941: innodb_8k fails on daily-trunk.
  
    With introduction of WL#6915 32 rollback segment slots are now
    allocated from temp-tablespace instead of system-tablespace
    and so if result file records page-numbering of db objects
    then it is bound to change post this WL checkin.
  
    As part of WL#6915 patch checkin I did updated innodb_16k/4k
    as they failed on mysql-trunk-stage but looks like this combination
    of innodb_8k is not executed on mysql-trunk-stage or even on 
    mysql-trunk so this go missed.
    Corrected the test-case.
------------------------------------------------------------
revno: 5841
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-29 13:17:51 +0300
message:
  Fix compilation errors:
  
  Error 1:
  --------
  [ 38%] Building CXX object storage/innobase/CMakeFiles/innobase.dir/api/api0api.cc.o
  In file included from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/api/api0api.cc:27:
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/ha_prototypes.h:132: error: use of enum 'durability_properties' without previous declaration
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/ha_prototypes.h:136: error: invalid type in declaration before ';' token
  In file included from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/rem0cmp.h:205,
                   from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/page0page.ic:32,
                   from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/page0page.h:1125,
                   from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/page0cur.h:32,
                   from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/btr0pcur.h:33,
                   from /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/api/api0api.cc:33:
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/rem0cmp.ic: In function 'int cmp_dfield_dfield_like_prefix(const dfield_t*, const dfield_t*)':
  
  REASON: ha_prototypes.h uses durability_properties, which is defined in
  sql_class.h, but ha_prototypes.h does NOT #include sql_class.h.
  SOLUTION: #include sql_class.h in ha_prototypes.h in order to get the
  definition of durability_properties.
  
  Error 2 (after fixing the above erorr(s)):
  ------------------------------------------
  [ 42%] Building CXX object storage/innobase/CMakeFiles/innobase.dir/fts/fts0blex.cc.o
  In file included from fts0blex.l:28:
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/fts0ast.h:272: error: ISO C++ forbids declaration of 'CHARSET_INFO' with no type
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/include/fts0ast.h:272: error: expected ';' before '*' token
  make[2]: *** [storage/innobase/CMakeFiles/innobase.dir/fts/fts0blex.cc.o] Error 1
  make[1]: *** [storage/innobase/CMakeFiles/innobase.dir/all] Error 2
  make: *** [all] Error 2
  
  REASON: fts0ast.h uses CHARSET_INFO, which is defined in
  ha_prototypes.h, but fts0ast.h does NOT #include ha_prototypes.h.
  SOLUTION: #include ha_prototypes.h in fts0ast.h in order to get the
  definition of CHARSET_INFO.
  
  Error 3 (after fixing the above erorr(s)):
  ------------------------------------------
  [ 69%] Building CXX object extra/CMakeFiles/innochecksum.dir/__/storage/innobase/ut/ut0crc32.cc.o
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/ut/ut0crc32.cc: In function 'void ut_cpuid(ib_uint32_t*, ib_uint32_t*, ib_uint32_t*, ib_uint32_t*, ib_uint32_t*, ib_uint32_t*)':
  /home/vdimov/bzrroot/server/mysql-trunk/storage/innobase/ut/ut0crc32.cc:152: error: 'memcmp' was not declared in this scope
  make[2]: *** [extra/CMakeFiles/innochecksum.dir/__/storage/innobase/ut/ut0crc32.cc.o] Error 1
  make[1]: *** [extra/CMakeFiles/innochecksum.dir/all] Error 2
  make: *** [all] Error 2
  
  REASON: ut0crc32.cc uses memcmp(), which is defined in
  string.h, but ut0crc32.cc does NOT #include string.h.
  SOLUTION: #include string.h in ut0crc32.cc in order to get the
  definition of memcmp().
------------------------------------------------------------
revno: 5840 [merge]
committer: Gopal Shankar <gopal.shankar@oracle.com>
branch nick: priKeyTrunk
timestamp: Wed 2013-05-29 11:19:40 +0530
message:
  Bug#16368875 INNODB: FAILING ASSERTION:
               PRIMARY_KEY_NO == -1 || PRIMARY_KEY_NO == 0
  
  Merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.54
    committer: Gopal Shankar <gopal.shankar@oracle.com>
    branch nick: priKey56
    timestamp: Wed 2013-05-29 11:11:46 +0530
    message:
      Bug#16368875 INNODB: FAILING ASSERTION:
                   PRIMARY_KEY_NO == -1 || PRIMARY_KEY_NO == 0
      
      Problem:
      --------
      We hit following innodb assert when creating index with
      prefix on a TINYBLOB field type.
      
      InnoDB: Assertion failure in thread 5732 in file 
              ha_innodb.cc line 9473
      InnoDB: Failing assertion: primary_key_no == -1 || 
              primary_key_no == 0
      
      Analysis:
      =========
      Suppose we have a innodb table without primary key defined
      on it. And if we add new UNIQUE index on a NOT NULL field
      without using prefix, then both SQL Layer and Innodb promotes
      it as primary key.  Following cases describe current behavior,
      Eg. Case 1:
      -> CREATE TABLE t1 (f1 CHAR(200));
      -> ALTER TABLE t1 ADD UNIQUE INDEX (f1);
      
      Case 2:
      -> CREATE TABLE t1 (f1 CHAR(200));
      -> ALTER TABLE t1 ADD UNIQUE INDEX (f1(195));
      This index is not used as primary key, because we have
      partial prefix (195)
      
      Case 3:
      -> CREATE TABLE t1 (f1 CHAR(200));
      -> ALTER TABLE t1 ADD UNIQUE INDEX (f1(200));
      The above index is used as primary key, because we have
      full prefix (f1(200)) and is equivalent to just (f1).
      MySQL just drops the prefix, SHOW CREATE will not show prefix.
      
      The above behavior is applicable to BLOB fields too.
      Following cases are for TINYBLOB,
      Case 4:
      -> CREATE TABLE t1 (f1 TINYBLOB);
      -> ALTER TABLE t1 ADD UNIQUE INDEX (f1(200));
      This index is not used as primary key, because we have
      partial prefix (200)
      
      Now, following is a special case which is buggy,
      Case 5:
      -> CREATE TABLE t1 (f1 TINYBLOB);
      -> ALTER TABLE t1 ADD UNIQUE INDEX (f1(255));
      Similar to Case 3, we expect f1 to be primary.
      The bug is that SQL layer fail to consider this as primary,
      and innodb add's it as primary key. This is root cause of
      the assert.
      
      There is also another bug,
      Case 6:
      -> CREATE TABLE t1 (f1 TINYBLOB);
      -> ALTER TABLE t1 ADD UNIQUE INDEX (f1(256));
      The above index is added successfully without reporting
      an error, when prefix is greater than TINYBLOB max size
      i.e., 255.
      
      Note:
      * We cannot reproduce problem like in Case 5 using other BLOB
      types are the max prefix for these types is greater than
      the prefix supported by engine.
      * Note that SHOW CREATE TABLE retains the prefix for BLOB
      fields even when prefix size is equal to BLOB field max size.
      This is required to enable backup and restore schema. This is
      not the case with CHAR or VARCHAR.
      * The fix is applicable to TEXT field types also.
      
      Fix:
      ===
      We fix Case 5 and Case 6 scenarios.
      
      Fixed function open_binary_frm() to consider BLOB fields
      as primary, when the prefix size is equal to the size of BLOB
      field max size.
      
      Fixed function mysql_prepare_create_table() to consider
      key column size also, when we check prefix size.
------------------------------------------------------------
revno: 5839
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-05-28 17:39:11 +0530
message:
  - Code-cleanup: page_check_dir function is doing a defensive check
    to ensure page validity. Unfortunately this check is not restricted
    to debug only build but enabled even for release build even though
    this check doesn't change state of table or db on discovering
    issue. Moved this check to debug build only.
  
    Approved by: Marko (over IM)
------------------------------------------------------------
revno: 5838
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-05-28 16:19:40 +0530
message:
  - Bug #16664150: INNODB.INNODB-WL6445-2 FAILS - MYSQLD FAILED DURING TEST RUN
    Trying to start innodb instance in read only mode when previous instance
    was not shutdown properly will result in error.
    Previous instance is shutdown using shutdown_server <timeout> command.
    Time taken by server to shutdown on most machines if <= 10 secs and so
    default used when test is written.
    weekly-trunk test frmk exercises lot of tcs with more than feasible
    parallelism and on machines that seems to be dead-slow.
    In other words 10 secs is not enough so increasing it to 60 so that
    TCs passes on all machine configuration.
  
    Approved by: Sunny (over IM)
    
------------------------------------------------------------
revno: 5837
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-28 15:49:34 +0530
message:
  BUG#14765080 - DEBUG_SYNC CAN LOSE SIGNAL
  Post push fix of failing unit test when compile -DMERGE_UNITTESTS=1
------------------------------------------------------------
revno: 5836
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-28 12:09:37 +0530
message:
  BUG#14765080 - DEBUG_SYNC CAN LOSE SIGNAL
  PROBLEM:
  i_innodb.innodb_bug14712710 fails sporadically on PB2 branches
  with warning debug sync point timed out and error code of
  ER_DEBUG_SYNC_TIMEOUT. The problem could be that the wait
  thread which is  waiting at a sync point for a signal from the
  signalling thread could not process the signal because another
  signalling could have overwritten the debug_sync_global.ds_signal.
  This causes the waiting thread to wait till timeout expires leading
  to ER_DEBUG_SYNC_TIMEOUT error. This happens because the wait thread
  when woken up from a signal could contend with another signal for
  grabbing the debug_sync_global.ds_mutex. If the signal thread succeeds
  in the mutex, then new signal will be overwritten in debug_sync_global.
  ds_signal before the wait thread could process it. Also there exists
  the possibly of wait thread arriving late at a wait point before some
  signal threads could have overwritten the signal that the wait thread
  possibly wants to wait for. NOTE: The mysql documentation also needs 
  to be modified.
  FIX:
  In debug_sync_global maintain list of signals that have been signalled
  in a std::set and remove the signal from the list when the corressponding
  wait thread has processed that signal. Introduce a wait_for attribute
  no_clear_event that allows signal not to be cleared from the global thus
  allowing a single signal event to wake up multiple threads that wait for
  this signal. This is useful for the test cases rpl.rpl_semisync_deadlock
  and i_rpl.rpl_lost_events_on_rotate.
------------------------------------------------------------
revno: 5835
committer: horst.hunger@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-27 17:43:31 +0200
message:
  Bug #13824416: Modified the file names of cnf1 and cnf2.
------------------------------------------------------------
revno: 5834 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Mon 2013-05-27 18:12:04 +0530
message:
  Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
  	--patch for test failure with -ps-protocol
    ------------------------------------------------------------
    revno: 3902.242.53
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-05-27 18:10:49 +0530
    message:
      Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
      	--patch for test failure with -ps-protocol
------------------------------------------------------------
revno: 5833 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk5
timestamp: Mon 2013-05-27 19:16:23 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.52
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-27 19:13:55 +0800
    message:
      Bug 16809167 - FTS: LEAK AND INORDINATE MEMORY USAGE WHEN 
      INSERTING/REPLACING A ROW 
            
      rb://2483 approved by Marko
------------------------------------------------------------
revno: 5832 [merge]
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-27 16:22:34 +0530
message:
  - WL#6915: InnoDB: Undo logs for temp-tables (and related objects) should
    reside in temp-tablespace
  
    The objective is to have a special UNDO segment for transactions
    that update temporary tables, for both compressed and normal
    temporary tables. This temporary table specific UNDO segment should
    not be REDO logged, this is to reduce the cost of IO. The temporary
    tables will not be recovered during crash recovery therefore we don't
    care about durability. However, we need the UNDO segments to rollback
    to savepoint during normal transaction processing. This WL proposes to
    use the temporary tablespace to store these special UNDO logs.
    The temporary tablespace update operations are not REDO logged. 
  
    Approved by: Sunny + Yasufumi (rb#2249)
    ------------------------------------------------------------
    revno: 5209.1.142 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-05-27 16:20:15 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.141
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-05-27 15:50:21 +0530
    message:
      - WL#6915: making the QA TCs big-test given the time it takes (checkin on behalf of Vinay)
    ------------------------------------------------------------
    revno: 5209.1.140 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-05-27 15:31:21 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.139 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-05-24 08:51:16 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.138 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-23 17:21:31 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.137 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-23 14:45:08 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.136 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-23 08:03:15 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.135 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-05-22 15:07:41 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.134
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-05-22 15:06:41 +0530
    message:
      - WL#6915: disable tc for embedded as we are restarting server
    ------------------------------------------------------------
    revno: 5209.1.133
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-05-22 10:44:00 +0530
    message:
      - WL#6915:
        - TCs from QA (adding on behalf of Vinay as he is not able to checkin to
          wl#6915 branch).
    ------------------------------------------------------------
    revno: 5209.1.132 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-05-22 10:05:35 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.131 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-05-21 12:26:22 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.130 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-05-20 08:12:33 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.129 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-16 18:21:48 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.128
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-16 16:32:59 +0530
    message:
      - WL#6915:
        - fixed bug#16819011 for upgrade case. 
          Under upgrade we make the existing slot-1-32 rseg active in
          separate rseg array and that needs to be considered while freeing the rseg.
    ------------------------------------------------------------
    revno: 5209.1.127 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-16 15:07:00 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.126 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-16 09:29:45 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.125 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-05-13 10:11:54 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.124 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-05-10 17:23:28 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.123
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-05-10 17:22:14 +0530
    message:
      - WL#6915: few more review comments
    ------------------------------------------------------------
    revno: 5209.1.122
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-05-10 14:52:23 +0530
    message:
      - WL#6915: increased size of loading of non-compressed table to ensure that 8K pages are freed from buffer pool
    ------------------------------------------------------------
    revno: 5209.1.121 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-05-10 09:22:30 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.120
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-05-10 09:15:25 +0530
    message:
      - WL#6915: addressed review comments
    ------------------------------------------------------------
    revno: 5209.1.119 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-05-09 20:34:06 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.118 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-05-01 11:51:41 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.117
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-05-01 11:50:55 +0530
    message:
      - WL#6915:
        - improved trx rseg assignment logic ensuring atomicity.
    ------------------------------------------------------------
    revno: 5209.1.116
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-29 13:18:52 +0530
    message:
      - WL#6915: fixed a problem of atomicity in assigning rseg
    ------------------------------------------------------------
    revno: 5209.1.115 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-29 10:12:15 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.114 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-04-24 09:49:33 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.113
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-22 09:29:01 +0530
    message:
      - WL#6915: avoid calling low level function by detecting condition early. Avoid lsn update
    ------------------------------------------------------------
    revno: 5209.1.112 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-22 08:01:31 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.111 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-04-18 09:58:49 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.110 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-15 08:17:34 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.109
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6915
    timestamp: Sat 2013-04-13 12:00:43 +1000
    message:
      WL#6915 - Code clean up, remove default case, assert on case TRX_RSEG_TYPE_NONE.
    ------------------------------------------------------------
    revno: 5209.1.108
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-12 16:15:27 +0530
    message:
      - WL#6915: fixed tc output as it is dependent on whether page is flushed on hitting debug crash pt
    ------------------------------------------------------------
    revno: 5209.1.107
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-12 16:01:22 +0530
    message:
      - WL#6915: corrected copy-right year got missed as part of mysql-trunk merge conflict resolution
    ------------------------------------------------------------
    revno: 5209.1.106 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-12 15:35:14 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.105
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-12 15:04:03 +0530
    message:
      - WL#6915: correct TCs to supress warning. Warning depends on whether undo logs is flushed to disk while crash happens (behavior same as mysql-trunk)
    ------------------------------------------------------------
    revno: 5209.1.104 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-12 10:49:03 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.103
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-12 10:45:16 +0530
    message:
      - WL#6915:
        - fixed upgrade scenario:
          - avoid persisting non-redo rseg information that is not-needed
          on restart as non-redo rseg are re-created. also the info is invalid
          on restart given that there is no space with persisted space-id.
    ------------------------------------------------------------
    revno: 5209.1.102
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-04-11 14:35:39 +0530
    message:
      - WL#6915:
        - fixed upgrade scenario:
          - if on upgrade, slot-1....slot-n that are now used for non-redo
          rollback segments has records to purge then they need to get
          added to purge queue. Make these rsegs active in a separate
          array space and then schedule them for purge if needed.
    ------------------------------------------------------------
    revno: 5209.1.101 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-04-11 08:54:38 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.100
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-04-09 09:42:35 +0530
    message:
      - WL#6915:
        - revised info message to make it more meaningful.
        - even if server find x rollback segments it doesn't
          make all of them active (by active it means number of rsegs
          that will be used for undo logging.)
        - split message to print redo and non-redo rollback segments
          active separately.
    ------------------------------------------------------------
    revno: 5209.1.99 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-04-09 08:15:31 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.98
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-08 12:41:34 +0530
    message:
      - WL#6915: addressed review comments
    ------------------------------------------------------------
    revno: 5209.1.97
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6915
    timestamp: Mon 2013-04-08 13:58:18 +1000
    message:
      WL:#6915 - Use placement new, get rid of the init(). Remove unused include.
    ------------------------------------------------------------
    revno: 5209.1.96
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-04-08 08:37:46 +0530
    message:
      - WL#6915: fixed compilation issue. failed to protect debug variable with macro during it use.
    ------------------------------------------------------------
    revno: 5209.1.95
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6915
    timestamp: Mon 2013-04-08 12:44:21 +1000
    message:
      WL#6915 - Rename TrxUndoRsegs::iterator_t to iterator. Rename operator++(int) to
      set_next(). The latter name change is because it doesn't work like an STL
      iterator but sets the next value to purge in purge_sys.
    ------------------------------------------------------------
    revno: 5209.1.94 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 22:27:01 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.93
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 22:26:10 +0530
    message:
      - WL#6915: fixed an issue from prev. checkin .... was not incrementing rseg_history_len properly
    ------------------------------------------------------------
    revno: 5209.1.92 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 17:58:45 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.91
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 17:57:52 +0530
    message:
      - WL#6915:
        - fixed issue of undo_no ordering sequence.
        (A transaction has multiple rollback segment and so based on
         transaction work-pattern undo records can be spread across
         these multiple rollback segment and so undo_no ordering
         can be enforced within rollback segment but not across
         rollback segment.)
    ------------------------------------------------------------
    revno: 5209.1.90
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 11:44:32 +0530
    message:
      - WL#6915: further expanded coverage
    ------------------------------------------------------------
    revno: 5209.1.89
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 11:33:21 +0530
    message:
      - WL#6915:
        1. expanded tc coverage to cover sceanrio with different value of innodb_undo_logs.
        2. fixed issue of assigning non-redo logging.
    ------------------------------------------------------------
    revno: 5209.1.88 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-04-05 09:37:09 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.87 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-04-04 09:32:23 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.86 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-04-03 08:16:32 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.85
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-04-03 08:15:46 +0530
    message:
      - WL#6915: removed debugging code
    ------------------------------------------------------------
    revno: 5209.1.84 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-04-02 15:47:01 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.83 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-04-02 15:35:49 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.82
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-04-02 15:04:13 +0530
    message:
      - WL#6915: correted condition that caused scheduling of same rollback segments twice on purge queue
    ------------------------------------------------------------
    revno: 5209.1.81 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-28 15:06:35 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.80 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-28 09:15:10 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.79
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6915
    timestamp: Thu 2013-03-28 13:59:04 +1100
    message:
      WL#6915 - Clean up the code.
    ------------------------------------------------------------
    revno: 5209.1.78
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 18:42:55 +0530
    message:
      - WL#6915: removed typename as it causing compilation error on pb2 machine
    ------------------------------------------------------------
    revno: 5209.1.77 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 17:16:40 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.76
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6915
    timestamp: Wed 2013-03-27 22:24:29 +1100
    message:
      WL#6915 - Clean up the code. Use an iterator proxy class to iterator over TrxUndoRseg rsegs. This is to fetch the next trx_rseg_t instance for purge to work on.
      Each element popped form the priority queue has multiple rsegs that need
      purging, the iterator class iterates over the priority queue and the rsegs
      within each element popped from the priority queue.
    ------------------------------------------------------------
    revno: 5209.1.75
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 14:54:23 +0530
    message:
      - WL#6915: one more trailing space issue
    ------------------------------------------------------------
    revno: 5209.1.74
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 14:47:29 +0530
    message:
      - WL#6915: fixed formatting issue
    ------------------------------------------------------------
    revno: 5209.1.73 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 14:43:29 +0530
    message:
      - WL#6469: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.72
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 14:13:27 +0530
    message:
      - WL#6915: few more review comments .... probably last one for this review session
    ------------------------------------------------------------
    revno: 5209.1.71
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 13:22:02 +0530
    message:
      - WL#6915: another set of review comments
    ------------------------------------------------------------
    revno: 5209.1.70
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 12:29:05 +0530
    message:
      - WL#6915: few more review comments .... mainly naming change
    ------------------------------------------------------------
    revno: 5209.1.69
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 11:53:31 +0530
    message:
      - WL#6915: created focused function for assignming redo/noredo rseg
    ------------------------------------------------------------
    revno: 5209.1.68 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 11:25:52 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.67
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-27 11:23:52 +0530
    message:
      - WL#6915: first cut review comments
    ------------------------------------------------------------
    revno: 5209.1.66 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 16:25:34 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.65
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 16:22:54 +0530
    message:
      - WL#6915: formatting changes
    ------------------------------------------------------------
    revno: 5209.1.64
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 16:06:57 +0530
    message:
      - WL#6915: few more review comments
    ------------------------------------------------------------
    revno: 5209.1.63
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 16:03:34 +0530
    message:
      - WL#6915: addressed review comments
    ------------------------------------------------------------
    revno: 5209.1.62 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 15:52:46 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.61
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 15:51:39 +0530
    message:
      - WL#6915: replaced array with vector for enable better usability
    ------------------------------------------------------------
    revno: 5209.1.60
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 14:57:30 +0530
    message:
      - WL#6915: replaced home-brewed binary heap implementation with std::priority_queue
    ------------------------------------------------------------
    revno: 5209.1.59
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 12:23:24 +0530
    message:
      - WL#6915: formatting changes
    ------------------------------------------------------------
    revno: 5209.1.58 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 12:20:46 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.57
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 12:09:58 +0530
    message:
      - WL#6915: implemented code review comments
    ------------------------------------------------------------
    revno: 5209.1.56
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 08:58:33 +0530
    message:
      - WL#6915: fixed formatting issues
    ------------------------------------------------------------
    revno: 5209.1.55 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-26 08:30:00 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.54 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-25 16:57:20 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.53
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-25 16:31:20 +0530
    message:
      - WL#6915: some minor formatting changes
    ------------------------------------------------------------
    revno: 5209.1.52
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-25 10:52:44 +0530
    message:
      - WL#6915: code re-org for better re-usability + added crash point under xa prepare scenario
    ------------------------------------------------------------
    revno: 5209.1.51 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-25 08:31:36 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.50 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-22 19:17:44 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.49
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-22 17:08:09 +0530
    message:
      - WL#6915: replaced spaces with table in existing tcs. Added warning suppression that started with recent change in mysql-trunk codebase
    ------------------------------------------------------------
    revno: 5209.1.48 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-22 16:20:54 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.47 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-22 09:05:07 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.46
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 17:21:51 +0530
    message:
      - WL#6915: 
        - Handled condition of undo_no sequencing under multiple rollback segments
          presence.
    ------------------------------------------------------------
    revno: 5209.1.45 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 15:59:58 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.44
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 15:37:54 +0530
    message:
      - WL#6915: name change to reflect proper state
    ------------------------------------------------------------
    revno: 5209.1.43
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 14:34:41 +0530
    message:
      - WL#6915: fixed a comment + added crash point
    ------------------------------------------------------------
    revno: 5209.1.42
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 10:02:05 +0530
    message:
      - WL#6915: improved TC
    ------------------------------------------------------------
    revno: 5209.1.41 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 09:46:12 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.40
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-21 09:40:57 +0530
    message:
      - WL#6915: 
         - Given that we now have mutilple rollback segments associated with
         a transaction they should be added in single shot with same trx->no
         to purge queue as logically they belong to same trx->no.
         - Purge will pop the element that has multiple rsegs and will process
         all of them before popping next element.
    ------------------------------------------------------------
    revno: 5209.1.39
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-20 17:32:36 +0530
    message:
      - WL#6915: rseg level renamed with appropriate names
    ------------------------------------------------------------
    revno: 5209.1.38
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-20 12:50:48 +0530
    message:
      - WL#6915: improved naming convention
    ------------------------------------------------------------
    revno: 5209.1.37 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-20 11:45:20 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.36
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-20 11:40:28 +0530
    message:
      - WL#6915: introducting new sync-level for non-redo rollback segments
    ------------------------------------------------------------
    revno: 5209.1.35 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-19 16:58:22 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.34
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-19 16:37:33 +0530
    message:
      - WL#6915: corrected truncate of undo logs condition + mutex handling in case of trx_commit
    ------------------------------------------------------------
    revno: 5209.1.33 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-19 14:54:59 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.32 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-18 11:49:47 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.31
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-18 11:47:05 +0530
    message:
      - WL#6915: 
        - removed printing of page-no as part of query as page-no keeps
          on changing based on new feature that might change allocation
          of boot-up objects.
          In this case 32 rsegs from system-tablespaces are now allocated
          in temp-tablespace and so page-no of any objects created post
          this change would be different.
      
        - Both TC don't need page-no for verification just need table/index-id
          and so it is safe for removal of page-no column while doing select.
    ------------------------------------------------------------
    revno: 5209.1.30
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-18 11:29:00 +0530
    message:
      - WL#6915: increasing temp-tablespace bounded rsegs to 32 that will facilitate 32 * 1024 trxs
    ------------------------------------------------------------
    revno: 5209.1.29
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-18 09:54:51 +0530
    message:
      - WL#6915: improved comments and assert
    ------------------------------------------------------------
    revno: 5209.1.28
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-18 08:51:43 +0530
    message:
      - WL#6915: disable redo logging that is done to track changes to undo logs for temporary table
    ------------------------------------------------------------
    revno: 5209.1.27 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-18 08:10:54 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.26
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 16:48:15 +0530
    message:
      - WL#6915: re-verfied some assert condition in light of new temporary rseg assignment
    ------------------------------------------------------------
    revno: 5209.1.25
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 16:30:35 +0530
    message:
      - WL#6915: covered xa trx tc and code-path
    ------------------------------------------------------------
    revno: 5209.1.24
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 15:01:10 +0530
    message:
      - WL#6915: formatting changes
    ------------------------------------------------------------
    revno: 5209.1.23
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 09:44:22 +0530
    message:
      - WL#6915: removed debug code
    ------------------------------------------------------------
    revno: 5209.1.22 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 09:34:27 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.21
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 09:33:22 +0530
    message:
      - WL#6915: fixed formatting issues
    ------------------------------------------------------------
    revno: 5209.1.20
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-15 07:55:00 +0530
    message:
      - WL#6915: fixed some self-review comments
    ------------------------------------------------------------
    revno: 5209.1.19 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 15:23:19 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.18
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 15:03:54 +0530
    message:
      - WL#6915: expanded TC coverage. recording result
    ------------------------------------------------------------
    revno: 5209.1.17
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 14:30:12 +0530
    message:
      - WL#6915: corrected tc (inc file) location
    ------------------------------------------------------------
    revno: 5209.1.16 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 13:52:23 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.15
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 13:48:19 +0530
    message:
      - WL#6915: Change-Phase-4: Assigning temporary rseg to trx and using it for undo logging of temp-tables
    ------------------------------------------------------------
    revno: 5209.1.14
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 11:15:34 +0530
    message:
      - WL#6915: Change-Phase-3: Assigning temporary rseg to trx and using it for undo logging of temp-tables
    ------------------------------------------------------------
    revno: 5209.1.13
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-14 08:32:55 +0530
    message:
      - WL#6915: Change-Phase-2: Assigning temporary rseg to trx and using it for undo logging of temp-tables
    ------------------------------------------------------------
    revno: 5209.1.12
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-13 14:56:54 +0530
    message:
      - WL#6915: Change-Phase-1: Assigning temporary rseg to trx and using it for undo logging of temp-tables
    ------------------------------------------------------------
    revno: 5209.1.11
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-13 08:32:26 +0530
    message:
      - WL#6915: 
        - from 128 rseg one slot is now reserved for temp-tablespace
          and so pages allocated from system-tablespace has been reduced
          by 1 leading to diff in results of TCs that print page-number.
    ------------------------------------------------------------
    revno: 5209.1.10 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Wed 2013-03-13 08:25:19 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.9
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-12 15:26:17 +0530
    message:
      - WL#6915: corrected condition that skips system-tablespace if undo-tablespace > 0
    ------------------------------------------------------------
    revno: 5209.1.8
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-12 14:47:30 +0530
    message:
      - WL#6915: corrected logic to handle > 1 temp-tablespace rseg
    ------------------------------------------------------------
    revno: 5209.1.7 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-12 13:51:55 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.6
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-12 13:50:09 +0530
    message:
      - WL#6915: 
        There are 128 rsegs slots out of which
        slot-0: reserved for system-tablespace
        remaing can be either system/undo tablespace bounded.
      
        With this change
        slot-0: reserved for system-tablespace
        slot-1: reserved for temp-tablespace
        (eventually we might increase this limit from 1
         slot to n slots).
        remaining can be either system/undo tablespace bounded.
      
        based on this logic of assigning rseg is also updated
        to reflect proper assignment from standard pool or 
        temp-rseg pool.
    ------------------------------------------------------------
    revno: 5209.1.5 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Tue 2013-03-12 07:44:14 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.4
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-11 10:40:44 +0530
    message:
      - WL#6915: encapsulated state variables used for undo logging.
        rseg, insert_undo, update_undo.
    ------------------------------------------------------------
    revno: 5209.1.3 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Mon 2013-03-11 08:35:37 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.2 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Fri 2013-03-08 12:38:13 +0530
    message:
      - WL#6915: merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5209.1.1 [merge]
    committer: Krunal Bauskar krunal.bauskar@oracle.com
    branch nick: mysql-trunk-wl6915
    timestamp: Thu 2013-03-07 09:07:02 +0530
    message:
      - WL#6915: merge from mysql-trunk
------------------------------------------------------------
revno: 5831 [merge]
committer: Maitrayi Sabaratnam <maitrayi.sabaratnam@oracle.com>
branch nick: mysql-trunk-working
timestamp: Mon 2013-05-27 12:39:21 +0200
message:
  Merge 5.6->trunk
    ------------------------------------------------------------
    revno: 3902.242.51 [merge]
    committer: Maitrayi Sabaratnam <maitrayi.sabaratnam@oracle.com>
    branch nick: 5.6-working
    timestamp: Mon 2013-05-27 11:39:45 +0200
    message:
      Merge 5.5->5.6
        ------------------------------------------------------------
        revno: 2875.525.39
        committer: Maitrayi Sabaratnam <maitrayi.sabaratnam@oracle.com>
        branch nick: 5.5-bugfix
        timestamp: Fri 2013-05-24 18:17:36 +0200
        message:
          4371 Maitrayi Sabaratnam	2013-05-23
                Bug#13116514 - CREATE LOGFILE GROUP INITIAL_SIZE & UNDO_BUFFER_SIZE FAILS
                
                Fixing parser to accept the syntax: to give a size with suffix 'M', eg. undo_buffer_size=10M (M for mega bytes), in 'create logfile group' command.
------------------------------------------------------------
revno: 5830
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-27 14:52:32 +0530
message:
  - bug#16845421 INNODB: CRASH WHILE RECOVERING A TRANSACTION
    
    Ensure that state of transaction is initialized after caller is done
    using it. This include initializing state of minimum needed member variables
    of a transaction.
    This will ensure that even if transaction is re-allocated to new session
    it would see clean state transaction.
  
    Approved by: Marko (rb#2485)
------------------------------------------------------------
revno: 5829
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-haveint
timestamp: Fri 2013-05-24 16:40:01 +0200
message:
  Bug#16839769: REMOVE UNNEEDED MY_CHECK_TYPE_SIZE CMAKE CHECKS
  
  Remove 8 MY_CHECK_TYPE_SIZE() CMake checks which never pass
  for any platforms we support.
------------------------------------------------------------
revno: 5828
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk1
timestamp: Fri 2013-05-24 09:06:03 -0500
message:
  There was a patch recently, RB2364, that collected all SQL level
  headers into the same place, ha_prototypes.h.  But it had a nasty
  consequence that any change to the server code would cause almost
  a total rebuild of InnoDB.  This patch fixes that by organizing
  the headers much better.
  
  It also applies a consistent set of rules to InnoDB header file
  inclusion, affecting almost all InnoDB files.  
  
  It turns out that in order to avoid exessive compilation dependencies
  with GCC, SQL headers cannot be collected into a common header.
  Surrounding each include with macros defined in the 'cc' file works
  on MSVC, but not GCC.
  
  Summary of changes:
  =====================
  * SQL level headers are found in the files where they are needed.
  * The main InnoDB environmental header, univ.i, is included first
    in all InnoDB headers except the InnoDB headers that univ.i
    includes.
  * Typically, univ.i is not included or needed in 'cc' source files
    since it gets included with the first InnoDB header.
  * ha_prototypes.h does not include any other headers, only 'univ.i'.
    It is a proxy header used to insulate InnoDB from the SQL server.
    It is independent of any SQL headers by using forward declarations.
  * Use ha_prototypes.h everywhere the prototyped functions are called.
    The most common is ib_logf().
  * All InnoDB files include univ.i or ha_prototypes.h first, then
    the neccessary InnoDB headers and functions.
  * SQL header files are reduce and targeted a much as possible.
  * Since univ.i->my_global.h includes most system headers, they are
    no longer included where they are redundant.
  * Separate ICP_RESULT into its own SQL header called my_icp.h so that
    it can be included in ha_innodb.cc and row0sel.h without including
    the rest of what comes in my_compare.h.
  
  With this patch, most changes to SQL code do not cause a total rebuild.
  
  Approved by marko in rb#2422.
------------------------------------------------------------
revno: 5827
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef5
timestamp: Fri 2013-05-24 15:50:06 +0200
message:
  Bug#16792349: YET MORE UNUSED #IFDEFS
  
  Additional patch, remove the following unused #ifdefs:
  DONT_ALLOW_UNSIGNED_PLUS
  IN_THE_FUTURE
  LIKE_CMP_TOUPPER
  TO_BE_REMOVED
  SECURE_SOCKETS
  THREAD_SPECIFIC_SIGPIPE
  IGNORE_SIGHUP_SIGQUIT
  THREAD_SAFE_CLIENT
  SHOULD_BE_CHECKED
  DONT_ALLOW_FULL_LOAD_DATA_PATHS
  TO_BE_IMPLEMENTED
  ALLOW_LINESEPARATOR_IN_STRINGS
  NOT_NEEDED
  ERROR_ON_NO_SIZEOF_PLUGIN_SYMBOL
  FIX_LATER
  RESTRICTED_GROUP
  QQ_ALL_HANDLERS_SUPPORT_VARCHAR
  TESTTIME
  WE_WANT_TO_SUPPORT_VERY_OLD_FRM_FILES
  TO_BE_DELETED_ON_PRODUCTION
  WE_WANT_TO_HANDLE_UNORMALIZED_DATES
------------------------------------------------------------
revno: 5826 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Fri 2013-05-24 17:45:38 +0530
message:
  Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
        	--follow up patch, to add the comment removed by mistake and
                  remove unnecessary comment.
    ------------------------------------------------------------
    revno: 3902.242.50
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Fri 2013-05-24 17:43:42 +0530
    message:
      Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
      	--follow up patch, to add the comment removed by mistake and
                remove unnecessary comment.
------------------------------------------------------------
revno: 5825 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Fri 2013-05-24 16:55:51 +0530
message:
  Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
  	--follow-up patch, to remove unnecessary comment.
    ------------------------------------------------------------
    revno: 3902.242.49
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Fri 2013-05-24 16:53:59 +0530
    message:
      Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
      	--follow up patch, to remove unnecessary comment.
------------------------------------------------------------
revno: 5824 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-24 14:11:24 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.48 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-24 14:07:08 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.525.38
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-05-24 13:58:42 +0300
        message:
          Bug#16859867 INNODB_BUG14529666 FAILS SPORADICALLY IN VALGRIND
          
          i_s_innodb_buffer_page_get_info(): Do not read the buffer block frame
          contents of read-fixed blocks, because it may be invalid or
          uninitialized. When we are going to decompress or read a block, we
          will put it into buf_pool->page_hash and buf_pool->LRU, read-fix the
          block and release the mutexes for the duration of the reading or
          decompression.
          
          rb#2500 approved by Jimmy Yang
------------------------------------------------------------
revno: 5823 [merge]
committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-24 15:31:34 +0530
message:
  Merging from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.242.47
    committer: Praveenkumar Hulakund <praveenkumar.hulakund@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-24 15:26:03 +0530
    message:
      Bug#13418638 - CREATE TABLE IF NOT EXISTS METADATA LOCK IS
                     TOO RESTRICTIVE 
      
      Analysis:
      ---------
      Creating table using "CREATE TABLE [IF NOT EXISTS]" hangs
      if table with same name already exists and if any other MDL
      lock is taken on the lock object of the table.
      
      While creating the table, we try to acquire "X" MDL lock on 
      the lock object of the table. Lock will be acquired on table,
      before even checking the existence of the table. Since "X"
      is not compatible with any other MDL locks, if some other
      lock is granted on the lock object of table then "X' lock
      will not be granted and it will hang for lock timeout
      period. 
      
      Fix:
      ----
      Acquiring "X" MDL lock before even checking for the existence
      of table is resulting in the issue mentioned above. So, as 
      a fix for this bug, modified a logic to acquire "S" lock and
      check for the existence of the table. If the table does not
      exists then upgrade lock to "X" and continue. If table exists
      then,
            for "CREATE TABLE" - report an error.
            for "CREATE TABLE IF NOT EXISTS" - Push a warning.
      and return.
------------------------------------------------------------
revno: 5822 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-24 14:45:00 +0530
message:
  Bug#16765278 DELETE SQL_LOAD_MB* FILE (TEMP FILE) CREATED
  BY BINLOG_KILLED_SIMULATE.TEST
  
  Merge fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.46 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-24 14:39:18 +0530
    message:
      Bug#16765278 DELETE SQL_LOAD_MB* FILE (TEMP FILE) CREATED
      BY BINLOG_KILLED_SIMULATE.TEST
      Merging fix from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.525.37 [merge]
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-05-24 14:35:00 +0530
        message:
          Bug#16765278 DELETE SQL_LOAD_MB* FILE (TEMP FILE) CREATED
          BY BINLOG_KILLED_SIMULATE.TEST
          Merging fix from mysql-5.1
            ------------------------------------------------------------
            revno: 2661.880.19
            committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2013-05-24 14:25:00 +0530
            message:
              Bug#16765278 DELETE SQL_LOAD_MB* FILE (TEMP FILE) CREATED
              BY BINLOG_KILLED_SIMULATE.TEST
                    
              'mysqbinlog' tool creates a temporary file while 
              preparing LOAD DATA QUERY. These files needs to be deleted
              at the end of the test script otherwise these files are
              left out in the daily-run machines, causing
              "no space on device issues"
                    
              Fix: 
              Delete them at the end of these test scripts
              1) execute mysqlbinlog with --local-load option to
              create these files in a specified tmpdir
              2) delete the tmpdir at the end of the test script
------------------------------------------------------------
revno: 5821
committer: Gopal Shankar <gopal.shankar@oracle.com>
branch nick: wrongDBname57
timestamp: Fri 2013-05-24 12:11:17 +0530
message:
  Bug#16813605 SERVER LOG MENTIONS WRONG DATABASE NAME DURING LIVE
               UPGRADE FROM 5.6 TO 5.7
  
  
  ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE string has hardcoded
  database name 'mysql.%s'. As a fix adding new
  ER_COL_COUNT_DOESNT_MATCH_PLEASE_UPDATE_V2 error changing it
  to '%s.%s'. Updated related code. 
------------------------------------------------------------
revno: 5820 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug16387720_mysql-trunk
timestamp: Fri 2013-05-24 06:30:24 +0530
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.45
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug16387720_mysql-5.6
    timestamp: Fri 2013-05-24 06:23:14 +0530
    message:
      Bug#16387720: BLOCKED WITH FLUSH TABLES WITH READ LOCK + 
      SHOW SLAVE STATUS
      
      Problem:
      =======
      If a client thread on a slave does FLUSH TABLES WITH READ
      LOCK; then master does some updates, SHOW SLAVE STATUS in
      the same client will be blocked. If the blocked slave server
      is killed and restarted when GTID's are enabled, one GTID
      gets missed leaving the slave in an out of sync state.
      
      Using 'relay-log-recovery=1' should do a crash safe slave
      recovery but it is not happening.
      
      Analysis:
      ========
      
      RPL info tables "slave_master_info" and "slave_relay_log_info"
      are used to store slave's thread's positions.  When a FTWRL
      is issued on slave this command blocks all operations on
      tables. Hence when some update operations are done on master
      the slave thread will be able to open the tables but while 
      closing, an internal commit operation will be blocked. These
      blocked info tables make the "SHOW SLAVE STATUS" to hang.
      
      When "relay-log-recovery=1" during crash recovery all the
      partial written events will be discarded the master info
      table is initialised with the information read from relay
      log info table. The "Retrieved GTID" set should be cleared
      so that partial read events are discarded and they are
      fetched once again. Since this is not happening
      "The Retried GTID" is considered to be executed and the 
      actual transaction is skipped.
      
      Fix:
      ===
      
      Info tables should be made independent of global read lock.
      At the time of opening the RPL info tables the following
      "MYSQL_OPEN_IGNORE_GLOBAL_READ_LOCK" flag is set to make
      the info tables not to block when the FTWRL is in progress.
      Hence a similar flag is introduced in "ha_commit_trans"
      code which will allow commit to complete even if a global
      read lock is active. This flag can be used to allow changes
      to internal tables (e.g. slave status tables).
      
      To fix the missing GTID issue using "relay-log-recovery"
      option, during recovery process retrieved GTID set is cleared.
------------------------------------------------------------
revno: 5819 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Thu 2013-05-23 22:18:25 +0530
message:
  Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
         Merge fix for Bug#11760197 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.44
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-05-23 22:14:39 +0530
    message:
      Bug#11760197 - INCORRECT RESULTS WITH COUNT DISTINCT AND BIG_TABLES
      
      Problem:-
      When big_tables is enabled, COUNT DISTINCT on simple join with constant equality 
      condition on non-duplicate key gives wrong result.
      
      Analysis:-
      In case of count distinct with sql_big_tables enable, we save our data in myisam
      file instead of heap unique tree.
      When we have a constant equality condition on non-duplicate key, we dont
      detect duplicate field values when inserting the records into the temporary 
      table.
      
      Solution:-
      
      While creating temporary table, allow creations of fields for constant items. 
      When we have distinct query, this will make sure the duplicate 
      value filtered out when inserting rows in the temporary table.
      
      This fix may give a small overhead for queries that will create temporary table 
      since columns for constant expressions may now be added to the temporary table.
      However, we do not think this overhead will be significant.
      
      If it is later found that it is necessary to reintroduce this optimization, 
      it should be done by removing the field from the list of fields that are 
      given to create_tmp_table(). 
------------------------------------------------------------
revno: 5818
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-23 16:35:35 +0300
message:
  Followup to Bug#16821155 ADD A CMAKE OPTION TO EASILY ENABLE EXTRA INNODB
  DEBUG CHECKS
  
  Remove the macro UNIV_ZIP_COPY from cmake's WITH_INNODB_EXTRA_DEBUG,
  suggested by Marko and Michael.
  
  Also revert vasil.dimov@oracle.com-20130521111012-7we33xmgdf2hmmg3, since
  it is not needed after the removal of UNIV_ZIP_COPY.
------------------------------------------------------------
revno: 5817
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-23 16:00:59 +0300
message:
  Followup to Bug#16821155 ADD A CMAKE OPTION TO EASILY ENABLE EXTRA INNODB
  DEBUG CHECKS
  
  Adjust innodb_bug34053 to work with UNIV_MEM_DEBUG and relax an assertion
  in mem0pool.cc (submitted by Marko).
------------------------------------------------------------
revno: 5816
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-21 14:10:12 +0300
message:
  Followup to Bug#16821155 ADD A CMAKE OPTION TO EASILY ENABLE EXTRA INNODB
  DEBUG CHECKS
  
  Relax a bit a too strict checks from innodb_cmp_per_index.test. It is not
  the purpose of the test to check whether exactly 43 or 65 compression ops
  occured. Thus change it to also accept the different numbers which are
  returned when UNIV_ZIP_COPY and UNIV_ZIP_DEBUG are defined when
  cmake -DWITH_INNODB_EXTRA_DEBUG:BOOL=ON is used.
------------------------------------------------------------
revno: 5815
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-21 14:06:32 +0300
message:
  Followup to Bug#16821155 ADD A CMAKE OPTION TO EASILY ENABLE EXTRA INNODB
  DEBUG CHECKS
  
  In mem_heap_is_top() also check if the requested size of the buffer actually
  matches the real size of the buffer (which is only recorded if UNIV_MEM_DEBUG
  is defined). If the sizes do not match, then consider that the requested
  buffer is not the top of the heap.
  
  This is necessary because in mem_heap_free_top() we call mem_field_erase()
  (in UNIV_MEM_DEBUG only) which asserts that the sizes match.
------------------------------------------------------------
revno: 5814
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-21 14:02:00 +0300
message:
  Non-functional change: add "const" qualifier to mem_field_header_get_len()
  and remove "unused" attribute from mem_field_erase() because the parameter
  is actually used.
------------------------------------------------------------
revno: 5813
committer: Sivert Sorumgard <sivert.sorumgaard@oracle.com>
branch nick: trunk-11766880
timestamp: Thu 2013-05-23 14:16:15 +0200
message:
  Bug#11766880: CAN'T FIND FILE / FILE NAME TOO LONG
  
  Overview
  --------
  The scenario here is identifiers, e.g., table names, with special
  characters (e.g. newlines, ".", non-ascii, ...). When mapping
  from table name to file name (for the .frm file), these special
  characters are mapped to character sequences (e.g., '.' is mapped
  to @002e). Hence, the file name may become much longer than the
  table name, so the table name may very well be valid (i.e., <= 64
  characters) while the file name is invalid (length > NAME_MAX,
  e.g. 255 characters). E.g. a table name of 51 dots ("..." etc.)
  is mapped to a 255 character file name. Thus, on trunk, when
  attempting an insert into a non-existing table, we get the
  following errors:
  
  ---------+---------+--------------------+--------------------
  Table nm | File nm | OS Error (solx86)  | MySQL error
  ---------+---------+--------------------+--------------------
  <=64     | <=255   | No such file       | Table doesn't exist
  <=64     |  >255   | File name too long | Can't find file
   >64     | Any     | N/A                | Identifier too long
  ---------+---------+--------------------+--------------------
  
  This behavior alone can hardly be considered a bug. However, it
  is still relevant to consider potential buffer overflow issues.
  
  
  Buffer usage and potential overflow issues
  ------------------------------------------
  The same character mapping from db identifiers to filesystem
  names is relevant also for schemas, meaning that we can get quite
  long path names when concatenating the mapped names of a schema
  and table with numerous special characters. When allocating the
  table share while opening a table, in "build_table_filename", the
  schema name and table name are converted and concatenated to form
  a path name. This path name is put into a buffer of size
  FN_REFLEN, which is 512 characters. Overflow is checked, and only
  511 characters will be used, leaving the last character for the
  '\0' termination of the string. If the file name is truncated,
  this is indicated by a return parameter (which is unfortunately
  ignored, see below).
  
  When the table share structure is allocated, right afterwards,
  space is allocated for the path name. The exact length (without
  '\0') is allocated, plus one additional byte for the trailing
  '\0'. The "path.str" and "normalized_path.str" data members in
  the table share object are both set to point at the recently
  allocated path array. So far so good.
  
  But alas, in "open_table_def", the file name to open is formed by
  concatenating the "normalized_path.str" from the table share with
  the proper extension (e.g. ".frm"); this is squeezed into a
  string with only FN_REFLEN bytes allocated, and hence, we have a
  potential overflow issue: The path may be up to FN_REFLEN - 1
  characters, and adding the ".frm" makes the string copy write
  beyond the allocated size.
  
  
  Ignored truncation of path
  --------------------------
  There is a potential issue related to the ignored truncation
  after building the file name, which may in theory result in
  different table names mapping to the same file name. However, in
  practice, this seems to be hidden by the fact that the file names
  will be too long anyway (path may be 511 characters, -2 for "./",
  -255 (max) for the schema, -1 for the path separator, thus
  leaving up to 253 characters for the file name part of the
  path. Adding ".frm" makes this 257 characters (ignoring the
  buffer overflow), which is > 255 and therefore will fail with
  "file name too long" when opening the file, at least on solaris
  11 x86 with max 255 characters per path component. And besides,
  truncation seems to be checked when creating a table (in
  "mysql_create_table_no_lock").
  
  
  Creating tables
  ---------------
  While investigating the overflow issues, code executed while
  creating tables was also relevant to look at. Here, the following
  scenario was found:
  
  1. In "mysql_create_table_no_lock", FN_REFLEN + 1 bytes are allocated,
     and space for the ".frm" extension is checked.
  
  2. After creating the frm file, the file was opened in
     "open_table_def". Here, however, only FN_REFLEN bytes were
     allocated, and with no length check, there was a potential
     overflow (same overflow as identified for inserts). 
  
  3. Since "open_table_def" failed, the create statement execution
     failed and the file was to be deleted. In "rea_create_table",
     when concatenating the file name used, e.g., for delete, a
     buffer of only FN_REFLEN bytes was allocated and strings were
     concatenated without checking legth, so there would be a
     potential overflow.
  
  Hence, the conclusion is that we should always allocate FN_REFLEN
  + 1 bytes to allow for paths up to FN_REFLEN bytes (accepted by
  the OS) plus the trailing '\0', and we should always apply
  strxnmov for length checking when concatenating strings.
  
  
  Suggested fix
  -------------
  Some of the behavior described above would be expected to
  disappear when the new data dictionary is implemented. The
  suggested fix hence contains:
  
  1. A set of tests illustrating the behavior described above.
  
  2. A patch for the buffer overflow and ignored truncation in
     "open_table_def": Add one additional character to the buffer
     (to allow for 512 byte paths), subtract "reg_ext_length" from
     length parameter passed to "build_table_filename".
  
  3. Rewrite "mysql_create_table_no_lock" slightly to use the same
     implementation pattern as "open_table_def" described above.
     
  4. For an extra safeguard, replace "strxmov" by "strxnmov" when
     building the path with extension before opening the file in
     "open_table_def". Add one additional byte to the allocation
     for consistency with items above.
  
  5. Similar to the item above, change the implementation in
     "rea_create_table": Add one byte when allocating the path, and
     check length when concatenating strings using strxnmov.
------------------------------------------------------------
revno: 5812 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Thu 2013-05-23 13:20:45 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.43
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-05-23 10:49:29 +0200
    message:
      Bug#16827872 WRONG COUNT FROM FOUND_ROWS() WITH ORDER BY
      
      In the absence of the SQL_CALC_FOUND_ROWS option, FOUND_ROWS()
      should always return the actual number of rows scanned.
------------------------------------------------------------
revno: 5811 [merge]
committer: Sergey Glukhov <sergey.glukhov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-23 14:32:18 +0400
message:
  5.6 -> trunk merge
    ------------------------------------------------------------
    revno: 3902.242.42
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-23 14:30:59 +0400
    message:
      additional fix for bug#16391678
------------------------------------------------------------
revno: 5810 [merge]
committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-23 15:06:01 +0530
message:
  Null merge from 5.6 to 5.7
    ------------------------------------------------------------
    revno: 3902.242.41 [merge]
    committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-23 15:04:00 +0530
    message:
      Null merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.36 [merge]
        committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-23 15:02:33 +0530
        message:
          Null merge from 5.1 to 5.5
            ------------------------------------------------------------
            revno: 2661.880.18
            committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-05-23 15:00:31 +0530
            message:
              Bug #16119355: PREPARED STATEMENT: READ OF FREED MEMORY WITH
                                               STRING CONVERSION FUNCTIONS
                          
              Problem:
              While executing the prepared statement, user variable is
              set to memory which would be freed at the end of
              execution.
              If the statement is executed again, valgrind throws
              error when accessing this pointer.
                                
              Analysis:
                              
              1. First time when Item_func_set_user_var::check is called,
                 memory is allocated for "value" to store the result.
                 (In the call to copy_if_not_alloced).
              2. While sending the result, Item_func_set_user_var::check
                 is called again. But, this time, its called with
                 "use_result_field" set to true. 
                 As a result, we call result_field->val_str(&value).
              3. Here memory allocated for "value" gets freed. And "value"
                 gets set to "result_field", with "str_length" being that of
                 result_field's.
              4. In the call to JOIN::cleanup, result_field's memory gets
                 freed as this is allocated in a chunk as part of the
                 temporary table which is needed to execute the query.
              5. Next time, when execute of the same statement is called,
                 "value" will be set to memory which is already freed.
                 Valgrind error occurs as "str_length" is positive 
                 (set at Step 3)
                                
              Note that user variables list is stored as part of the Lex object
              in set_var_list. Hence the persistance across executions.
                          
              Solution:
              Patch for Bug#11764371 fixed in mysql-5.6+ fixes this problem 
              as well.So backporting the same.
                          
              In the solution for Bug#11764371, we create another object of 
              user_var and repoint it to temp_table's field. As a result while 
              deleting the alloced buffer in Step 3, since the cloned object 
              does not own the buffer, deletion will not happen.
              So at step 5 when we execute the statement second time, the 
              original object will be used and since deletion did not happen 
              valgrind will not complain about dangling pointer.
------------------------------------------------------------
revno: 5809 [merge]
committer: Sergey Glukhov <sergey.glukhov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-23 12:41:31 +0400
message:
  5.6 -> trunk merge
    ------------------------------------------------------------
    revno: 3902.242.40
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-23 12:39:49 +0400
    message:
      Bug#16391678 EXT. SECONDARY KEYS DON'T WORK FOR CUSTOM STORAGE ENGINES
      Added possibility to use 'extended keys' feature for custom storage engines.
------------------------------------------------------------
revno: 5808 [merge]
committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-23 13:51:08 +0530
message:
  Null merge from 5.6 to 5.7
    ------------------------------------------------------------
    revno: 3902.242.39 [merge]
    committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-23 13:46:26 +0530
    message:
      Null merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.35 [merge]
        committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-23 11:06:34 +0530
        message:
          Merge from 5.5 to 5.6
            ------------------------------------------------------------
            revno: 2661.880.17
            committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-05-22 14:36:43 +0530
            message:
              Bug#11766191:INVALID MEMORY READ IN DO_DIV_MOD WITH DOUBLY ASSIGNED VARIABLES
              Bug#12608543: CRASHES WITH DECIMALS AND STATEMENT NEEDS TO BE REPREPARED ERRORS
              
              Backporting these two fixes to 5.1 
              Added unittest to test my_decimal construtor and assignment operators
------------------------------------------------------------
revno: 5807
committer: Satya Bodapati <satya.bodapati@oracle.com>
branch nick: mysql-trunk-test
timestamp: Wed 2013-05-22 17:40:59 +0530
message:
  WL#6045 - Improve Innochecksum
  
  Fix innodb-wl6045-linux.test to create temporary file(out.txt) in
  mysqltest vardir instead of the root mysqltest directory
------------------------------------------------------------
revno: 5806 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-22 15:31:40 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.38
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-22 14:39:16 +0800
    message:
      Fix Bug #16766016 - FTS: ASSERTION IN OPT_CHECK_ORDER_BY
      
      rb://2388 approved by Sunny Bains
------------------------------------------------------------
revno: 5805 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Tue 2013-05-21 15:53:45 +0530
message:
  Bug#16756402-RECENT REGRESSION: CRASH IN ITEM_DEFAULT_VALUE::WALK
   Merge fix for Bug#16756402 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.37
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2013-05-21 15:51:17 +0530
    message:
      Bug#16756402-RECENT REGRESSION: CRASH IN ITEM_DEFAULT_VALUE::WALK
      
      Problem:-
      It is a regression, cause by the patch of bug#14789787.
      
      Analysis:
      In Item_default_value::walk, while traversing in the argument 
      of Item_default_value. We are not taking care whether 
      Item_default_value has any argument or not.
      
      Solution:
      Before traversing, check whether it carry any argument or not.
------------------------------------------------------------
revno: 5804
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-05-21 10:35:09 +0530
message:
  - reverting my previous checkin as it is causing completely un-related failure and Ereland wants to findout which revision caused it
------------------------------------------------------------
revno: 5803
committer: Luis Soares <luis.soares@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-20 18:10:33 +0100
message:
  BUG#16621923
  
  Re-enabling the test case.
------------------------------------------------------------
revno: 5802
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-20 15:30:43 +0530
message:
  - increasing timeout from 30 to 60 to ensure safe shutdown on all h/w machines
------------------------------------------------------------
revno: 5801
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-20 15:19:04 +0530
message:
  - replaced send_shutdown with shutdown_server a more generic and widely use way to shutdown server
------------------------------------------------------------
revno: 5800 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-20 14:17:15 +0530
message:
  Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP MYSQL
  DB FROM REMOTE 5.0.96 SERVER.
  Merging fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.36 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-20 14:06:07 +0530
    message:
      Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP MYSQL
      DB FROM REMOTE 5.0.96 SERVER.
      Merge from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.525.34
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-20 14:00:40 +0530
        message:
          Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP MYSQL
          DB FROM REMOTE 5.0.96 SERVER.
          Fixing post push failures
------------------------------------------------------------
revno: 5799 [merge]
committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-20 11:55:07 +0530
message:
  Bug#14536456: Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.35
    committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-20 11:43:12 +0530
    message:
      Bug#14536456: Fixing test failures in audit_log plugin
------------------------------------------------------------
revno: 5798 [merge]
committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-20 00:16:26 +0530
message:
  Bug#16194302: Null merge
    ------------------------------------------------------------
    revno: 3902.242.34 [merge]
    committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sun 2013-05-19 23:57:34 +0530
    message:
      Bug#16194302: Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.33
        committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
        branch nick: mysql-5.5
        timestamp: Sun 2013-05-19 23:38:06 +0530
        message:
          Bug#16194302: SUPPORT FOR FLOATING-POINT SYSTEM VARIABLES
                        USING THE PLUGIN INTERFACE.
          
          ISSUE: No support for floating-point plugin
                 system variables.
          
          SOLUTION: Allowing plugins to define and expose floating-point
                    system variables of type double. MYSQL_SYSVAR_DOUBLE
                    and MYSQL_THDVAR_DOUBLE are added.
          
          ISSUE: Fractional part of the def, min, max values of system
                 variables are ignored.
          
          SOLUTION: Adding functions that are used to store the raw
                    representation of a double in the raw bits of unsigned
                    longlong in a way that the binary representation
                    remains the same.
------------------------------------------------------------
revno: 5797 [merge]
committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-05-19 22:50:22 +0530
message:
  BUG#14536456: Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.33
    committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sun 2013-05-19 22:41:16 +0530
    message:
      Bug #14536456: ENCRYPTED PASSWORD IS NOT SHOWN IN AUDITLOG
                     ONCE USE CREATED/ALTERED WITH PASWD
      
      PROBLEM: Audit_log plugin logs passwords in clear text.
      
      SOLUTION: Obfuscate passwords and rewrite the queries
                containing passwords before we log them into
                audit_log files.
      
      Note: Though the bug is reported in mysql-5.5 we
            support password obfuscation from mysql-5.6.
------------------------------------------------------------
revno: 5796 [merge]
committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
branch nick: bug16247110-trunk-test
timestamp: Sun 2013-05-19 03:32:24 +0530
message:
  BUG#16247110 - ASSERT FAIL IN PROTOCOL::END_STATEMENT AFTER
                 DELETE
  
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.32
    committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
    branch nick: bug16247110-5.6
    timestamp: Sun 2013-05-19 03:22:26 +0530
    message:
      BUG#16247110 - ASSERT FAIL IN PROTOCOL::END_STATEMENT AFTER
                     DELETE
      
      ANALYSIS :
      When an UPDATE or DELETE statement is being executed and another
      connection happens to hold locks being accessed by this thread,
      then multi_range_read_next() called by the range optimizer could
      fail with HA_ERR_LOCK_DEADLOCK or HA_ERR_LOCK_WAIT_TIMEOUT. However,
      this was not detected by mysql_update() and no error was reported
      to the Diagnostics Area. Hence an assertion would be triggered
      in Protocol::end_statement() when trying to send OK or ERROR to
      the client. On release builds the bug caused OK to be sent to the
      client for a statement that had in fact failed.
      
      FIX :
      If call to select->quick->reset() in mysql_update() or mysql_delete()
      fails then an error is reported using file->print_error() to set DA to
      a proper state.
      This bug is fixed in mysql-trunk by bug#16366994. This patch backports
      the patch in mysql-5.6. Test case added.
------------------------------------------------------------
revno: 5795 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-05-18 12:36:41 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.31 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sat 2013-05-18 11:30:16 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.32
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Sat 2013-05-18 10:20:56 +0530
        message:
          Bug #12762377 FOREIGN KEYS NOT CONSTRUCTED WHEN APOSTROPHES ARE
          ESCAPED WITH BACKSLASH
          
          Problem:
          
          When the CREATE TABLE statement used COMMENTS with escape sequences like
          'foo\'s', InnoDB did not parse is correctly when trying to extract the
          foreign key information.  Because of this, the foreign keys specified
          in the CREATE TABLE statement were not created.
          
          Solution:
          
          Make the InnoDB internal parser aware of escape sequences. 
          
          rb#2457 approved by Kevin.
------------------------------------------------------------
revno: 5794 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-17 19:08:36 +0530
message:
  Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP MYSQL
  DB FROM REMOTE 5.0.96 SERVER.
  Merging fix from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.30 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-17 19:02:59 +0530
    message:
      Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP MYSQL
      DB FROM REMOTE 5.0.96 SERVER.
      Merging fix from mysql-5.5	
        ------------------------------------------------------------
        revno: 2875.525.31
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-05-17 18:54:36 +0530
        message:
          Bug#14236170 MYSQLDUMP 5.5.25 CLIENT FAILS TO DUMP
          MYSQL DB FROM REMOTE 5.0.96 SERVER
          
          Problem: mysqldump tool assumes the existence of
          general_log and slow_log tables in the server.
          If mysqldump tool executes on a old server where
          there are no log tables like these, mysqldump tool
          fails.
          
          Analysis: general_log and slow_log tables are added
          in the ignore-table list as part of bug-26121 fix
          causes bug-45740 (MYSQLDUMP DOESN'T DUMP GENERAL_LOG
          AND SLOW_QUERY CAUSES RESTORE PROBLEM). As part of
          the bug-45740 fix, mysqldump tool adds create table
          queries for these two tables. But the fix assumes
          that on all the servers, general_log and slow_log
          will be there. If the new mysqldump tool is executed
          against a old server where there are no general_log
          and slow_log, the mysqldump tool fails with an error
          that 'there is no general_log table'.
          
          Fix: When mysqldump tool is trying to retrieve general_log
          and slow_log table structures, first the tool should
          check their existence of these tables in the server
          instead of trying to dump it blindly.
------------------------------------------------------------
revno: 5793
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-17 16:50:00 +0530
message:
  BUG#16354789 RPL_SLAVE_SYSVAR_DEADLOCK CRASHING OCCASIONALLY
               ON OS X 10.7
  PROBLEM DESCRIPTION AND FIX:
  i_rpl.rpl_slave_sysvar_deadlock test case crashes most of
  time on OS X 10.7 on PB2. The crash is due to race condition
  involving vio_shutdown and select based implementation of
  vio_io_wait. If vio_shutdown sets the file descriptor of the
  vio.fd to INVALID_SOCKET which is negative one in one thread
  after which the select-based implementation of vio_io_wait use
  this fd value with FD_* macros in another thread of control, it
  segfaults. The reason for segfault is because FD_* macros use
  this fd value as an index into a static buffer or array.
    The fix checks the copied fd from mysql_socket_getfd is not
  INVALID_SOCKET so that FD_SET doesn't incorrect index which avoids the 
  segfault.
------------------------------------------------------------
revno: 5792
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Fri 2013-05-17 09:09:22 +0200
message:
  Bug#16447483 post-push test fix for mysql-trunk
  
  The test relied on MyISAM, which is no longer default on mysql-trunk.
------------------------------------------------------------
revno: 5791 [merge]
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-17 04:56:44 +0200
message:
  merge to mysql-trunk from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.29
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-17 04:54:49 +0200
    message:
      Bug#16798175 : INNODB_RWLOCK_X_SPIN_WAITS OF INFORMATION_SCHEMA.INNODB_METRICS IS WRONG VALUE
      
      innodb_rwlock_x_spin_waits of INFORMATION_SCHEMA.INNODB_METRICS was wrong value,
      showed same value to innodb_rwlock_x_os_waits.
      
      approved by Marko. (directly at the bug#; 1 line change)
------------------------------------------------------------
revno: 5790 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Fri 2013-05-17 08:02:47 +0530
message:
  Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                 WITH COMPOSITE KEY COLUMNS
  	(null merge)
    ------------------------------------------------------------
    revno: 3902.242.28 [merge]
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Fri 2013-05-17 08:01:39 +0530
    message:
      Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                     WITH COMPOSITE KEY COLUMNS
      	(null merge)
        ------------------------------------------------------------
        revno: 2875.525.30
        committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
        branch nick: 5.5
        timestamp: Fri 2013-05-17 08:00:38 +0530
        message:
          Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                         WITH COMPOSITE KEY COLUMNS
          	change in test case.
------------------------------------------------------------
revno: 5789 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Fri 2013-05-17 07:56:52 +0530
message:
  Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                 WITH COMPOSITE KEY COLUMNS
  (null merge)
    ------------------------------------------------------------
    revno: 3902.242.27 [merge]
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Fri 2013-05-17 07:54:35 +0530
    message:
      Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                     WITH COMPOSITE KEY COLUMNS
      
      (null merge)
        ------------------------------------------------------------
        revno: 2875.531.1
        committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
        branch nick: 5.5
        timestamp: Fri 2013-05-17 07:53:31 +0530
        message:
          Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                         WITH COMPOSITE KEY COLUMNS
          	change in test case.
------------------------------------------------------------
revno: 5788
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 15:06:50 -0500
message:
  16774645 - UNIV_WORD_SIZE DEFINED INCORRECTLY ON 64 BIT WINDOWS
  
  Both 32-bit and 64-bit windows defines _WIN32.  The InnoDB code
  assumed that _WIN32 and _WIN64 were mutually exclusive so it set
  UNIV_WORD_SIZE == 4 on all Windows systems.  This did not seem to
  cause any real problems on Win64 systems.  With this patch,
  UNIV_WORD_SIZE == 8 on _WIN64.
  
  This patch also deletes the unused UNIV_WORD_ALIGNMENT.
  
  After fixing those defines, there were several places in os0file.cc
  where atomic operations were not used but os_file_count_mutex was
  not defined.  This happened because atomics were only used when
  defined(HAVE_ATOMIC_BUILTINS) && UNIV_WORD_SIZE == 8).
  Since UNIV_WORD_SIZE was always 4 on Windows, atomics were never
  used in os0file.cc on Windows.
  
  They were also not used on 32-bit *nix systems either even if
  atomics were available.
  
  The atomic functions being called are os_atomic_increment_ulint()
  and os_atomic_decrement_ulint(). Elsewhere in the InnoDB code they
  do not depend on UNIV_WORD_SIZE.  They automatically switch
  depending on the size of ulint. Also protected by this test,
  (defined(HAVE_ATOMIC_BUILTINS) && UNIV_WORD_SIZE == 8),
  were calls to MONITOR_ATOMIC_INC() and MONITOR_ATOMIC_DEC().
  These automatically switch back to non-atomic, mutex protected
  versions if 64-bit atomic operations are not available.
  
  So there is see no reason that the atomic operations in os0file.cc
  need to test UNIV_WORD_SIZE.  This patch takes them out and leaves
  only #ifdef HAVE_ATOMIC_BUILTINS.
  
  Approved in RB2453 by Inaam.
------------------------------------------------------------
revno: 5787
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 19:32:32 +0300
message:
  Fix Bug#16821155 ADD A CMAKE OPTION TO EASILY ENABLE EXTRA INNODB DEBUG CHECKS
  
  Add a CMake option to easily enable extra InnoDB debug checks.
  
  Usage of the new option:
  
  cmake ... -DWITH_DEBUG:BOOL=ON -DWITH_INNODB_EXTRA_DEBUG:BOOL=ON ...
  
  can only be enabled when WITH_DEBUG is enabled. Defaults to OFF.
  
  Reviewed by:	Inaam (via IM)
------------------------------------------------------------
revno: 5786
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Thu 2013-05-16 17:42:43 +0200
message:
  WL#6906, post-push fix for compiling on Visual Studio 2012.
  
  Approved by Kevin and Joro on IM.
------------------------------------------------------------
revno: 5785
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug16748528
timestamp: Thu 2013-05-16 16:07:37 +0200
message:
  Bug#16748528: CMAKE: ASSUME C STANDARD LIBRARY HEADER FILES EXIST
  
  Remove 11 CMake checks for C standard library header files.
  Since all supported platforms have the C standard library, these
  checks are pointless.
  
  This patch also removes duplicate lines from config.h.cmake as
  well as a number of lines without a corresponding configure.cmake check.
  The patch also removes some ifdefs which are always set to 1 in
  configure.cmake and/or config.h.cmake.
------------------------------------------------------------
revno: 5784
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 16:35:06 +0300
message:
  Bug#16723431 REMOVE SRV_LATIN1_ORDERING
  
  Remove the special handling of the latin1_swedish_ci collation.
  
  srv_latin1_ordering, DATA_MYSQL_LATIN1_SWEDISH_CHARSET_COLL: Remove.
  
  fts_get_charset(): Inlined, to replace innobase_get_fts_charset().
  
  innobase_mysql_cmp_prefix(): Remove.
  
  cmp_dfield_dfield_like_prefix(): Call the collation function directly,
  instead of calling innobase_mysql_cmp_prefix().
  
  innobase_mysql_cmp(): Make inline in rem0cmp.cc, remove parameters.
  
  cmp_whole_field(): Call the collation functions directly.
  
  MYSQL_PLUGIN_IMPORT: Remove; unused definition.
  
  eval_cmp_like(): Abort on IB_LIKE_SUFFIX or IB_LIKE_SUBSTR.
  Earlier, the abort was triggered later, in the removed functions
  cmp_data_data_slow_like_substr() and cmp_data_data_slow_like_suffix().
  
  fts_utf8_string_cmp(): Replace with innobase_fts_text_cmp(). The
  function name was misleading; this function actually used
  latin1_swedish_ci aka srv_latin1_ordering[] instead of UTF-8.
  
  fts_utf8_string_cmp_prefix(): Remove; unused function.
  
  cmp_data_data_slow_varchar(), cmp_data_data_slow_like_prefix(),
  cmp_data_data_slow_like_suffix(), cmp_data_data_slow_like_substr(): Remove.
  
  cmp_dfield_dfield_like_prefix(): Make inlined. Always invoke
  innobase_mysql_cmp_prefix() instead of sometimes invoking
  cmp_data_data_like_prefix().
  
  cmp_dfield_dfield_like_substr(), cmp_dfield_dfield_like_suffix(): Remove.
  
  cmp_collate(): Remove.
  
  cmp_whole_field(): Handle DATA_VARCHAR and DATA_CHAR as
  my_charset_latin1.  These types should only be used by the internal
  SQL parser and for the internal data dictionary.
  
  cmp_data_data(), cmp_dtuple_rec_with_match_low(),
  cmp_rec_rec_simple_field(), cmp_rec_rec_with_match():
  Handle most types with cmp_whole_field(). Do not call cmp_collate().
  
  rb#2350 approved by Jimmy Yang
------------------------------------------------------------
revno: 5783
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-05-16 14:59:24 +0200
message:
  Bug#16768511: HAVE_REPLICATION SHOULD BE SET BY CMAKE
  
  Post-push fix: NDB needs HAVE_REPLICATION set.
------------------------------------------------------------
revno: 5782 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 18:16:11 +0530
message:
  BUG 16813006 5.6 => trunk NULL
    ------------------------------------------------------------
    revno: 3902.242.26 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 18:15:05 +0530
    message:
      BUG 16813006 5.5=> 5.6 NULL
        ------------------------------------------------------------
        revno: 2875.525.29
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 18:14:25 +0530
        message:
          BUG #16813006 - UNIT TEST FOR MY_VSNPRINTF FAIL FOR NON GNU COMPILER
------------------------------------------------------------
revno: 5781 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 18:11:24 +0530
message:
  BUG 16813006 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.25 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 18:09:56 +0530
    message:
      BUG 16813006 5.5=> 5.6
        ------------------------------------------------------------
        revno: 2875.530.1
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 18:09:02 +0530
        message:
          BUG #16813006 - UNIT TEST FOR MY_VSNPRINTF FAIL FOR NON GNU COMPILER
------------------------------------------------------------
revno: 5780 [merge]
committer: Mattias Jonsson <mattias.jonsson@oracle.com>
branch nick: topush-trunk
timestamp: Thu 2013-05-16 14:33:15 +0200
message:
  Merge of bug#16447483 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.24 [merge]
    committer: Mattias Jonsson <mattias.jonsson@oracle.com>
    branch nick: topush-5.6
    timestamp: Thu 2013-05-16 14:06:35 +0200
    message:
      Merge of bug#16447483 from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.28
        committer: Mattias Jonsson <mattias.jonsson@oracle.com>
        branch nick: topush-5.5
        timestamp: Thu 2013-05-16 11:02:39 +0200
        message:
          Bug#16447483: PARTITION PRUNING IS NOT CORRECT FOR RANGE COLUMNS
          
          The problem was in get_partition_id_cols_range_for_endpoint
          and cmp_rec_and_tuple_prune, which stepped one partition too long.
          
          Solution was to move a small portion of logic to cmp_rec_and_tuple_prune,
          to simplify both get_partition_id_cols_range_for_endpoint and
          get_partition_id_cols_list_for_endpoint.
------------------------------------------------------------
revno: 5779
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-have_rep
timestamp: Thu 2013-05-16 13:42:49 +0200
message:
  Bug#16768511: HAVE_REPLICATION SHOULD BE SET BY CMAKE 
  
  This patch sets HAVE_REPLICATION from CMake rather than in my_global.h.
  This means that HAVE_REPLICATION is not dependent on my_global.h
  already having been included.
  
  The patch also moves #ifdef HAVE_REPLICATION in front of #includes,
  thereby reducing the number of files that have to be read when compiling
  embedded server.
------------------------------------------------------------
revno: 5778 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 17:04:23 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.23 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 17:03:06 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.27
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 16:56:02 +0530
        message:
          Fixing a compiler warning issue.  At the end of the function
          ibuf_insert_to_index_page_low() add a DBUG_RETURN(NULL).
------------------------------------------------------------
revno: 5777 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-05-16 13:22:04 +0200
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.22
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-test
    timestamp: Thu 2013-05-16 13:16:02 +0200
    message:
      Unbreak rhel5-x86-64bit-werror builds.
      Add return(0) at the end of ibuf_insert_to_index_page_low().
------------------------------------------------------------
revno: 5776
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 13:36:48 +0300
message:
  Fix Bug#16781511 INNODB'S USAGE OF UNIV_INTERN IS INCONSISTENT
  
  Remove UNIV_INTERN, it is not needed anymore.
  
  Reviewed by:	Marko (rb:2406)
------------------------------------------------------------
revno: 5775 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Thu 2013-05-16 11:21:16 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.21
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-05-16 10:50:44 +0200
    message:
      Bug#69119 Bug#16760474 Wrong FOUND_ROWS() on MySQL 5.6.11
      Bug#69144 Bug#16764220 sql_calc_found_rows, found_rows() in 5.6.11 differs from 5.6.10
      Bug#69166 Bug#16775557 Wrong result of FOUND_ROWS() in MySQL 5.6
      
      This is a regression caused by the patch for
      Bug#68458 Wrong count from FOUND_ROWS() on MySQL 5.6
      That patch restricted the setting of "thd->limit_found_rows"
      to the case where filesort had actually used a Priority Queue.
      
      The correct solution is to restrict the setting to the case
      where filesort *could* have used a priority queue
      (i.e. whenever we have "order by with limit")
      See code in check_if_pq_applicable() which returns false
      if it thinks that quicksort will be cheaper that PQ.
------------------------------------------------------------
revno: 5774 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 14:36:10 +0530
message:
  Bug 16813007 5.6 => trunk NULL
    ------------------------------------------------------------
    revno: 3902.242.20 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 14:35:18 +0530
    message:
      Bug 16813007 5.5 => 5.6 NULL
        ------------------------------------------------------------
        revno: 2875.525.26 [merge]
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 14:34:06 +0530
        message:
          Bug 16813007 5.1 => 5.5 null 
            ------------------------------------------------------------
            revno: 2661.880.16
            committer: sayantan dutta <sayantan.dutta@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-05-16 14:32:09 +0530
            message:
              Bug #16813007 - MTR IS NOT TAKING MYSQLTEST CLIENT USING THE ENV VARIABLE MYSQL_TEST
------------------------------------------------------------
revno: 5773 [merge]
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 14:24:09 +0530
message:
  Bug 16813007 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.242.19 [merge]
    committer: sayantan dutta <sayantan.dutta@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 14:21:43 +0530
    message:
      Bug 16813007 5.5 => 5.6
        ------------------------------------------------------------
        revno: 2875.525.25 [merge]
        committer: sayantan dutta <sayantan.dutta@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 14:19:57 +0530
        message:
          Bug 16813007 5.1 => 5.5
            ------------------------------------------------------------
            revno: 2661.882.1
            committer: sayantan dutta <sayantan.dutta@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-05-16 14:18:04 +0530
            message:
              Bug #16813007 - MTR IS NOT TAKING MYSQLTEST CLIENT USING THE ENV VARIABLE MYSQL_TEST
------------------------------------------------------------
revno: 5772 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 14:06:41 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.18 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 14:06:12 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.24 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 14:05:51 +0530
        message:
          Null merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.15
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-05-16 14:05:05 +0530
            message:
              Bug #16806366 	BOGUS CALL TO LOCK_REC_RESTORE_FROM_PAGE_INFIMUM IN 
              INSERT BUFFER MERGE
              
              Problem:
              
              When the record is merged from the change buffer to the actual page,
              in a particular condition, it is assumed that the deleted rec will
              be re-used by the inserted rec.  With this assumption the lock is
              restored on the pointer to the deleted rec itself, thinking that
              it is pointing to the newly inserted rec.
              
              Solution:
              
              Just before restoring the lock, update the rec pointer to point
              to the newly inserted record.  An assert has been added to verify
              this.  This assert will fail without the fix and will pass with
              the fix.
              
              rb#2449 in review by Marko and Jimmy
------------------------------------------------------------
revno: 5771 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 14:00:19 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.17 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 13:59:52 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.23 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 13:58:26 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
------------------------------------------------------------
revno: 5770 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 13:53:35 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.16 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 13:52:41 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
------------------------------------------------------------
revno: 5769
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-cmake2
timestamp: Thu 2013-05-16 10:11:22 +0200
message:
  Bug#16661195: REMOVE UNNEEDED CMAKE CHECKS
  
  Additional patch: Remove the following unneeded CMake checks:
  MY_CHECK_TYPE_SIZE(size_t SIZE_T)
  MY_CHECK_TYPE_SIZE(bool  BOOL)
  MY_CHECK_TYPE_SIZE(uchar UCHAR)
  MY_CHECK_TYPE_SIZE(socklen_t SOCKLEN_T)
  CHECK_SYMBOL_EXISTS(... TIOCSTAT_IN_SYS_IOCTL)
  CHECK_STRUCT_HAS_MEMBER(... STRUCT_DIRENT_HAS_D_INO)
  CHECK_STRUCT_HAS_MEMBER(... STRUCT_DIRENT_HAS_D_NAMLEN)
------------------------------------------------------------
revno: 5768 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 13:38:00 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.245.1 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 12:18:05 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.529.1 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 11:17:33 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.881.1
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Thu 2013-05-16 10:26:09 +0530
            message:
              Bug #16806366 	BOGUS CALL TO LOCK_REC_RESTORE_FROM_PAGE_INFIMUM IN 
              INSERT BUFFER MERGE
              
              Problem:
              
              When the record is merged from the change buffer to the actual page,
              in a particular condition, it is assumed that the deleted rec will
              be re-used by the inserted rec.  With this assumption the lock is
              restored on the pointer to the deleted rec itself, thinking that
              it is pointing to the newly inserted rec.
              
              Solution:
              
              Just before restoring the lock, update the rec pointer to point
              to the newly inserted record.  An assert has been added to verify
              this.  This assert will fail without the fix and will pass with
              the fix.
              
              rb#2449 in review by Marko and Jimmy
------------------------------------------------------------
revno: 5767 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Thu 2013-05-16 09:27:02 +0200
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.15 [merge]
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-test
    timestamp: Thu 2013-05-16 09:21:06 +0200
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.22 [merge]
        committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
        branch nick: mysql-5.5-test
        timestamp: Thu 2013-05-16 09:01:11 +0200
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.14
            committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
            branch nick: mysql-5.1-test
            timestamp: Thu 2013-05-16 08:09:48 +0200
            message:
              Bug#16807394: PREVENT NEW ERROR MESSAGES FROM BEING ADDED TO 5.5
              
              In order to keep error message numbers stable between GA releases, we
              can not now add a new error message to 5.1/5.5 as this message would get 
              a number now used in 5.6.
              
              This patch enforces this by adding a 5.1/5.5 specific check when processing
              the error message file. If a new error message is added, building will
              abort and report an error.
------------------------------------------------------------
revno: 5766 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 13:46:36 +0800
message:
  Merge 5.6
    ------------------------------------------------------------
    revno: 3902.242.14 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 13:45:25 +0800
    message:
      Merge(5.5)
        ------------------------------------------------------------
        revno: 2875.525.21
        committer: bin.x.su@oracle.com
        branch nick: mysql-5.5-bug14529666
        timestamp: Thu 2013-05-16 13:34:50 +0800
        message:
          A simple patch for Bug#14529666 to solve the failures in valgrind test
          Not to assume the ibuf root page always keeps in buffer pool
          
          Approved by Jimmy.
------------------------------------------------------------
revno: 5765 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 12:51:47 +0800
message:
  A simple patch for Bug#14529666 to solve the failures in valgrind test
  Not to assume the ibuf root page always keeps in buffer pool
  
  Approved by Jimmy.
    ------------------------------------------------------------
    revno: 3902.242.13 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 12:46:44 +0800
    message:
      A simple patch for Bug#14529666 to solve the failures in valgrind test
      Not to assume the ibuf root page always keeps in buffer pool
      
      Approved by Jimmy.
------------------------------------------------------------
revno: 5764 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 12:44:23 +0800
message:
  A simple patch for Bug#14529666 to solve the failures in valgrind test
  Not to assume the ibuf root page always keeps in buffer pool
  
  Approved by Jimmy.
    ------------------------------------------------------------
    revno: 3902.244.1 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 12:35:11 +0800
    message:
      A simple patch for Bug#14529666 to solve the failures in valgrind test
      Not to assume the ibuf root page always keeps in buffer pool
      
      Approved by Jimmy.
        ------------------------------------------------------------
        revno: 2875.528.1
        committer: bin.x.su@oracle.com
        branch nick: mysql-5.5-bug14529666
        timestamp: Thu 2013-05-16 12:33:12 +0800
        message:
          A simple patch for Bug#14529666 to solve the failures in valgrind test
          Not to assume the ibuf root page always keeps in buffer pool.
          
          Approved by Jimmy.
------------------------------------------------------------
revno: 5763 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-16 10:06:01 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.242.12 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-16 10:03:02 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.20
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-16 10:01:06 +0530
        message:
          Bug #16411457  MASTER THREAD CANNOT EXIT FLUSH_LOOP WHEN
          INNODB_FAST_SHUTDOWN IS 2
          
          Problem:
          
          When innodb_fast_shutdown is set to 2 and the master thread enters
          flush loop, under some circumstances it will not be able to exit it.
          This may lead to a shutdown hanging.
          
          This is happening because of the following:
          
          1. In the flush_loop block of code, if the srv_fast_shutdown is
             equal to 2 (very fast shutdown), then we do not flush dirty
             pages in buffer pool to disk.
           
          2. In the same flush_loop block of code, if the number of dirty
             pages is more than user specified limit, we go to step 1.
          
          This results in infinite loop.
          
          Solution:
          
          When we are in the process of doing a very fast shutdown, don't
          do step 2 above.
          
          rb#2328 approved by Inaam.
------------------------------------------------------------
revno: 5762
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Thu 2013-05-16 07:37:06 +1000
message:
  Fix formatting, non-functional change
------------------------------------------------------------
revno: 5761 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 23:04:26 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.11 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-15 22:57:14 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.525.19 [merge]
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-05-15 22:50:44 +0300
        message:
          Merge mysql-5.1 to mysql-5.5.
            ------------------------------------------------------------
            revno: 2661.880.13
            committer: Marko M?kel? <marko.makela@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-05-15 22:40:29 +0300
            message:
              Bug#16736929 PAGE_ZIP_DECOMPRESS() FAILS ON EMPTY RECORD
              
              When a record contains no user data bytes (such as when the PRIMARY
              KEY is an empty string and all secondary index fields are NULL or the
              empty string), page_zip_decompress() could fail to set the record
              heap_no correctly.
              
              page_zip_decompress_node_ptrs(), page_zip_decompress_sec(),
              page_zip_decompress_clust(): Set heap_no also at the end of the
              compressed data stream.
              
              rb#2448 approved by Jimmy Yang and Inaam Rana
------------------------------------------------------------
revno: 5760
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 18:53:38 +0300
message:
  Add a comment to clarify that a minor misbehavior of
  buf_page_peek_if_too_old() is known. The comment comes
  as a followup to "Bug#68981 bpage->access_time is unsigned int".
  
  This commit does not fix the bug.
  
  Suggested by:	Inaam (via IM)
------------------------------------------------------------
revno: 5759 [merge]
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 10:54:55 -0400
message:
  null merge from 5.6
    ------------------------------------------------------------
    revno: 3902.242.10 [merge]
    committer: Inaam Rana <inaam.rana@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-15 10:51:17 -0400
    message:
      null merge from 5.5
        ------------------------------------------------------------
        revno: 2875.525.18
        committer: Inaam Rana <inaam.rana@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-05-15 10:47:19 -0400
        message:
          Bug#16622478 INNODB'S THREAD CONCURRENCY TICKETS MIGHT BE RELEASED
          AFTER A ROW IS READ
          
          
          Approved by: Sunny Bains rb://2425
          
          Don't release concurrency tickets when asked to release
          btr_search_latch. This is a 5.5 only bug. It is already
          fixed in 5.6 upwards.
------------------------------------------------------------
revno: 5758
committer: Evgeny Potemkin <evgeny.potemkin@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 14:24:28 +0400
message:
  Fixed compiler error on printing a size_t variable with %lu.
------------------------------------------------------------
revno: 5757
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 15:02:44 +0530
message:
  Fixing compiler warnings.  Removing some DBUG_PRINT and its family of
  stmts, which are considered overkill.
------------------------------------------------------------
revno: 5756
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Wed 2013-05-15 18:11:51 +1000
message:
  WL#6906 - Follow up fix. Pointer calculation did not take into account
  sizeof(void*)=4 and alignment of 8 bytes.
------------------------------------------------------------
revno: 5755
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 12:03:54 +0530
message:
  BUG#16737279 - MYSQLBINLOG --REWRITE-DB="DB->DB_NEW" FAILS
  
  Problem - the problem is in the code which neglects the changes in the length
            of the new databases since the header of the table_map_event
            was not modified as a part of event modification.
  
  Fix - Fixed the problem by correctly modifying the event length of the 
        modified event in its header part.
------------------------------------------------------------
revno: 5754 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Wed 2013-05-15 08:07:08 +0200
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.242.9 [merge]
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-test
    timestamp: Wed 2013-05-15 08:05:51 +0200
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.17
        committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
        branch nick: mysql-5.5-bug16798287
        timestamp: Wed 2013-05-15 07:59:01 +0200
        message:
          Bug#16798287: TESTS ADDED FOR BUG#16757869 UNSTABLE ON PB2
          
          The test case added for Bug#16757869 relied on querying I_S.innob_trx
          in order to synchronize statements from different connections.
          However, since this I_S table is only updated every 0.1 second, the
          information contained in this table might be inaccurate and thus
          unsuitable for query synchronization.
          
          This patch fixes the problem by waiting until the old data goes
          away before starting the second part of the test.
          No code changes.
------------------------------------------------------------
revno: 5753
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-05-15 00:56:07 -0500
message:
  Fix Windows compile error in ut0pool.h from WL#6906
  Use ut_min() instead of std::min().  
  Windows uses a procompiler macro for min() that interferes.
------------------------------------------------------------
revno: 5752 [merge]
committer: Shubhangi Garg <shubhangi.garg@oracle.com>
branch nick: MySql-trunk
timestamp: Tue 2013-05-14 23:13:56 +0530
message:
  merging from mysql-5.6 -> mysql-trunk 
  Bug #16607258
    ------------------------------------------------------------
    revno: 3902.242.8 [merge]
    committer: Shubhangi Garg <shubhangi.garg@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-05-14 22:54:51 +0530
    message:
      Bug#16607258 :Linker Errors Due To Inclusion Of An Implementation File
                                       In log_event.h
                  
      DESCRIPTION:
      Due to inclusion of an implementation file, namely 'rpl_tblmap.cc'
      in a header file, namely 'log_event.h'; linker errors occur if
      log_event.h is included in an application containing multiple source
      files, such as in the case of Binlog API.
                  
      Binlog API requires including log_event.h in its source files;
      which leads to multiple definition errors, for functions defined
      in rpl_tblmap.cc for class 'table_mapping'.
                        
      FIX:
      Change the inclusion from header file(log_event.h) to source files
      using this header and have flag MYSQL_CLIENT set. The only file in
      the current server repository is mysqlbinlog.cc.
      @ client/mysqlbinlog.cc
          Pulled in code of rpl_tblmap.cc
      @ sql/log_event.h
          Removed inclusion of the implementation file from this header file
        ------------------------------------------------------------
        revno: 2875.525.16
        committer: Shubhangi Garg <shubhangi.garg@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-05-14 22:52:42 +0530
        message:
          Bug#16607258 :Linker Errors Due To Inclusion Of An Implementation File
                                     In log_event.h
                
          DESCRIPTION:
          Due to inclusion of an implementation file, namely 'rpl_tblmap.cc'
          in a header file, namely 'log_event.h'; linker errors occur if
          log_event.h is included in an application containing multiple source
          files, such as in the case of Binlog API.
                
          Binlog API requires including log_event.h in its source files;
          which leads to multiple definition errors, for functions defined
          in rpl_tblmap.cc for class 'table_mapping'.
                      
          FIX:
          Change the inclusion from header file(log_event.h) to source files
          using this header and have flag MYSQL_CLIENT set. The only file in
          the current server repository is mysqlbinlog.cc.
------------------------------------------------------------
revno: 5751
committer: horst.hunger@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-05-14 15:27:33 +0200
message:
  Introduction of the variable "ADDITION_OPTIONS" as sometimes a test depends on other variables to be set to special values. There also simple tests possible with valid values.
------------------------------------------------------------
revno: 5750
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Tue 2013-05-14 22:59:54 +1000
message:
  WL#6906 - Follow up fix, add missing read view heap free.
------------------------------------------------------------
revno: 5749
committer: horst.hunger@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-05-14 14:54:21 +0200
message:
  bug#16553132: The original test connot more run in PB as too stong dependent on the configuration of the OS (ulimit -n). The test has now been put into the suite "max_parts" and is running under Hudson control regularly.
------------------------------------------------------------
revno: 5748
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-14 14:36:33 +0300
message:
  Revert an inadvertent change introduced in WL#6947
  (revision-id marko.makela@oracle.com-20130508053316-pi2pb8qi76ku92nx)
  
  row_ins_check_foreign_constraint(): Do not check the whole entry for NULL,
  but only check the FOREIGN KEY columns for NULL.
------------------------------------------------------------
revno: 5747
committer: Raghav Kapoor <raghav.kapoor@oracle.com>
branch nick: mysql-trunk-bug-16449659
timestamp: Tue 2013-05-14 16:53:31 +0530
message:
  BUG#16449659 - ER_OUTOFMEMORY: WRONG PARAMETER COUNT 
  
  BACKGROUND:
  The ER_OUTOFMEMORY error message is declared as "Out of memory;
  restart server and try again (needed %d bytes)", so it requires
  one numeric parameter.
  But in some places in server code, it is used without the size
  paramater which sometimes results in crash/garbage in the output.
  
  ANALYSIS:
  Found by code inspection.
  
  FIX:
  Fixed those places with an additional size paramater where 
  ER_OUTOFMEMORY is reported without it.
------------------------------------------------------------
revno: 5746
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: trunk
timestamp: Tue 2013-05-14 12:46:10 +0200
message:
  Fixing a build issue.  The ref_table was set but not used in
  the function dict_load_foreign() function.  I have added an
  assert to make use of it.  
------------------------------------------------------------
revno: 5745
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: trunk
timestamp: Tue 2013-05-14 11:53:18 +0200
message:
  Bug #16244691 SERVER GONE AWAY ERROR OCCURS DEPENDING ON THE NUMBER OF
  TABLE/KEY RELATIONS
  
  Problem:
  
  When there are many tables, linked together through the foreign key
  constraints, then loading one table will recursively open other tables.  This
  can sometimes lead to thread stack overflow.  In such situations the server
  will exit.
  
  I see the stack overflow problem when the thread_stack is 196608 (the default
  value for 32-bit systems).  I don't see the problem when the thread_stack is
  set to 262144 (the default value for 64-bit systems).
  
  Solution:
  
  The recursive approach to load tables related via foreign key is replaced
  with an iterative approach.  
  
  Previously the cascade operations were also done in recursive manner.
  Now it is changed to be done in an iterative manner using an explicit
  stack.
  
  rb#2089 approved by Marko
------------------------------------------------------------
revno: 5744 [merge]
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Tue 2013-05-14 18:04:02 +1000
message:
  WL#6906 - Improve locality of reference by allocating trx_t in blocks
  
  Allocate memory in configurable sized blocks that are a multiple of
  sizeof(trx_t). Put the trx_t instances on a priority queue that is ordered
  on their memory addresses so that when we allocate trx_t instances from the
  pool they are close together.
  
  When a transaction is freed the instance is released back into the pool.
  
  rb#2129 Approved by Inaam Rana and Jimmy Yang.
    ------------------------------------------------------------
    revno: 5141.1.51 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-05-14 17:54:58 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.50 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-05-14 16:16:48 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.49 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-05-09 16:54:37 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.48 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-05-07 08:07:50 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.47 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-05-03 10:16:15 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.46
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-05-02 18:03:38 +1000
    message:
      WL#6906 - Fix formatting.
    ------------------------------------------------------------
    revno: 5141.1.45 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-05-02 12:25:27 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.44
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-05-01 20:01:03 +1000
    message:
      WL#6906 - Reduce the size of trx_t. Allocate some of the bigger fields from
      the heap. Rearrange the fields so that the more frequently accessed fields
      are closer together.
    ------------------------------------------------------------
    revno: 5141.1.43
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-05-01 18:34:39 +1000
    message:
      WL#6906 - Add a workaround for the failing PFS (MTR) tests. Initialise only a
      small subset of the objects in the pool, so that PFS isn't overwhelmed.
    ------------------------------------------------------------
    revno: 5141.1.42
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-05-01 16:15:29 +1000
    message:
      WL#6906 - Create a smaller transaction pool when UNIV_DEBUG is defined.
      Otherwise PFS limits are reached and that changes the PFS test results.
      Empty the trx table locks heap when freeing a transaction. Required due to
      changes from trunk merge.
    ------------------------------------------------------------
    revno: 5141.1.41
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-05-01 12:15:01 +1000
    message:
      WL#6906 - Cleanup the shutdown code.
    ------------------------------------------------------------
    revno: 5141.1.40 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-05-01 10:22:16 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.39 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-04-30 17:06:45 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.38
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-04-25 17:12:11 +1000
    message:
      WL#6906 - Add prefetch for Visual Studio
    ------------------------------------------------------------
    revno: 5141.1.37 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-04-25 15:49:55 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.36 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-04-17 08:35:32 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.35 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-04-16 08:50:15 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.34 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Mon 2013-04-15 07:32:25 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.33 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-04-12 09:39:28 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.32 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-04-10 09:14:24 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.31 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Mon 2013-04-08 08:18:34 +1000
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.30 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-04-05 15:02:22 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.29 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-04-04 08:27:58 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.28 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-04-03 13:30:56 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.27 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-04-02 12:44:13 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.26 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-03-28 14:30:52 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.25 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-03-27 10:13:31 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.24
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-03-26 14:28:23 +1100
    message:
      WL#6906 - Make the pool messages generic.
    ------------------------------------------------------------
    revno: 5141.1.23
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-03-26 14:19:27 +1100
    message:
      WL#6906 - Add new sync levels for the pool manager and pool mutexes. Avoid
      creating extra pools if N threads run out of a slot at the same time.
    ------------------------------------------------------------
    revno: 5141.1.22 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-03-26 13:16:37 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.21 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Sat 2013-03-23 12:01:22 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.20 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-03-20 09:14:31 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.19 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-03-19 08:46:32 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.18 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-03-15 08:41:34 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.17
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-03-14 11:57:20 +1100
    message:
      WL#6906 - Add a sleep and print a warning to the error log if we can't
      allocate memory for a transaction pool.
    ------------------------------------------------------------
    revno: 5141.1.16 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-03-14 11:06:29 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.15
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-03-13 09:31:40 +1100
    message:
      WL#6906 - Remove the UNIV_LIST_DEBUG define.
    ------------------------------------------------------------
    revno: 5141.1.14 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-03-13 09:02:24 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.13
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-03-12 16:50:07 +1100
    message:
      WL#6906 - Fix whitespace.
    ------------------------------------------------------------
    revno: 5141.1.12 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Mon 2013-03-11 19:32:00 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.11
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-03-08 11:19:41 +1100
    message:
      WL#6906 - Remove duplicate entry.
    ------------------------------------------------------------
    revno: 5141.1.10 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-03-08 09:12:55 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.9 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-03-07 08:29:11 +1100
    message:
      WL#6906 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5141.1.8 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Wed 2013-03-06 10:41:04 +1100
    message:
      WL#6906 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5141.1.7 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Tue 2013-03-05 10:30:41 +1100
    message:
      WL#6906 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5141.1.6
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Mon 2013-03-04 08:20:56 +0100
    message:
      WL#6906 - Add a size member to the pool. Add the mutex PFS keys.
    ------------------------------------------------------------
    revno: 5141.1.5
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Mon 2013-03-04 11:26:14 +1100
    message:
      WL#6906 - Cleanup the code.
    ------------------------------------------------------------
    revno: 5141.1.4 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Sun 2013-03-03 12:30:37 +1100
    message:
      WL#6906 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5141.1.3
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Sun 2013-03-03 12:04:13 +1100
    message:
      WL#6906 - Experimental: Factor out the locking from the pool. Make it into
      a template parameter. This should give us the flexibility to use the pool
      under the cover of an existing mutex by using a NullLockStrategy(). Useful
      for preserving the order of the allocation in correspondence to the list order.
    ------------------------------------------------------------
    revno: 5141.1.2
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Fri 2013-03-01 07:23:16 +1100
    message:
      WL#WL6906 - Change the destructor of the pool So that we destroy the
      objects from the block. This is a temporary workaround. Seems like there
      is a dangling transaction that is not released at shutdown.
    ------------------------------------------------------------
    revno: 5141.1.1
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6906
    timestamp: Thu 2013-02-28 20:08:00 +1100
    message:
      WL#6906: Initial commit.
------------------------------------------------------------
revno: 5743 [merge]
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Tue 2013-05-14 17:56:24 +1000
message:
  WL#6899 -  Reduce lock_sys_t::mutex contention when converting implicit lock to an explicit lock
  
  When converting an implicit lock to an explicit lock we first acquire the
  lock_sys_t::mutex and then traverse over the trx_sys_t::rw_trx_list to check
  if the transaction is active. We also acquire the trx_sys_t::mutex before we
  traverse the list to maintain correctness. As the list grows this puts a lot
  of pressure on the lock_sys_t::mutex. The lock_sys_t::mutex is needed to
  ensure that if an active transaction instance is found it is not committed
  or rolled back while we are holding a pointer to it. During commit/rollback
  we will acquire the lock_sys_t::mutex before we release any locks.
        
  The fix is to use a reference count on the trx_t instance. When we find a
  transaction in the trx_sys_t::rw_trx_list we will acquire the trx_t::mutex
  and increment the reference count.
        
  In lock_rec_convert_impl_to_expl() we will first check and increment the
  reference count of the transaction if found. Only if the transaction is
  found do we need to acquire the lock_sys_t::mutex. Later after converting the
  implicit lock to an explicit lock we decrement the reference count.
        
  In lock_trx_release_locks() after changing the trx_t state
  TRX_STATE_COMMITTED_IN_MEMORY we will wait on this ref count to become zero
  before we release any locks. This check should be rare in practice.
        
  Use the same technique in row_vers_impl_x_locked_low(), modify it so that it
  returns the trx instance and not the trx_id. This should save excessive
  scanning of the rw_trx_list.
  
  rb#2128 Approved by Jimmy Yang and Inaam Rana.
    ------------------------------------------------------------
    revno: 5163.2.46 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-05-14 17:56:03 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.45 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-05-14 17:39:07 +1000
    message:
      WL#6899 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5163.2.44 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-05-14 16:08:43 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.43 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Mon 2013-05-13 06:38:55 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.42 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-05-09 17:10:42 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.41 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-05-07 08:06:40 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.40 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-05-03 10:17:12 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.39 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-05-02 12:23:16 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.38
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-05-01 18:54:20 +1000
    message:
      WL#6899 - Remove unused #defines.
    ------------------------------------------------------------
    revno: 5163.2.37 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-05-01 10:23:58 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.36 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-04-30 17:08:05 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.35 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-04-25 16:01:08 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.34 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-04-17 08:38:12 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.33 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-04-16 08:51:25 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.32 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Mon 2013-04-15 07:38:08 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.31 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-04-12 09:38:05 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.30 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-04-10 09:16:00 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.29 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Mon 2013-04-08 08:17:23 +1000
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.28 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-04-05 15:01:37 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.27 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-04-04 08:30:03 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.26 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-04-03 13:29:46 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.25 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-04-02 12:43:03 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.24 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-03-28 14:32:47 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.23 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-03-27 10:14:42 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.22 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-03-26 13:13:40 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.21 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Sat 2013-03-23 11:59:51 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.20 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-03-20 09:15:45 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.19 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-03-19 08:57:18 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.18 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-03-15 10:08:30 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.17
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-03-14 11:37:10 +1100
    message:
      WL#6899 - Rename trx_t::n_ref_count to trx_t::n_ref, change its type to lint.
      Use a predicate instead of checking the counter in row0vers.cc
    ------------------------------------------------------------
    revno: 5163.2.16 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-03-14 11:07:51 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.15
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-03-13 09:27:39 +1100
    message:
      WL#6899 - Release the trx mutex.
    ------------------------------------------------------------
    revno: 5163.2.14 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-03-13 09:04:46 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.13
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-03-12 16:36:10 +1100
    message:
      WL#6899 - Use trx_release_reference()  row0vers.cc. Fix comments.
    ------------------------------------------------------------
    revno: 5163.2.12
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-03-12 12:40:51 +1100
    message:
      WL#6899 - Release the trx mutex before setting the trx to NULL.
    ------------------------------------------------------------
    revno: 5163.2.11
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-03-12 12:32:15 +1100
    message:
      WL#6899 - Add functions for incr/decr the trx_t reference count. Fix a bug
      where we weren't checking for the transaction state when do_ref_count was
      false.
    ------------------------------------------------------------
    revno: 5163.2.10 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Mon 2013-03-11 19:30:53 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.9
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-03-08 11:20:07 +1100
    message:
      WL#6899 - Remove default argument. Get rid of duplicate code. Fix the check
      for trx != NULL. It should be done before derefrencing trx.
    ------------------------------------------------------------
    revno: 5163.2.8 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-03-08 09:11:24 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.7 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Thu 2013-03-07 08:30:19 +1100
    message:
      WL#6899 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 5163.2.6 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-03-06 10:42:33 +1100
    message:
      WL#6899 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5163.2.5 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Tue 2013-03-05 10:36:08 +1100
    message:
      WL#6899 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5163.2.4
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Mon 2013-03-04 18:20:40 +1100
    message:
      WL#6899 - Use the reference counting scheme for row_vers_impl_x_locked() too.
    ------------------------------------------------------------
    revno: 5163.2.3 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Sun 2013-03-03 12:21:06 +1100
    message:
      WL#6899 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5163.2.2 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Fri 2013-03-01 16:01:26 +1100
    message:
      WL#6899 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 5163.2.1
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl6899
    timestamp: Wed 2013-02-27 17:20:06 +1100
    message:
      WL#6899 - Initial commit.
------------------------------------------------------------
revno: 5742 [merge]
committer: Allen lai <zheng.lai@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-14 15:33:11 +0800
message:
  Bug#16707516 MEMORY LEAK WITH INNODB MEMCACHED PLUGIN FOR STALE CONNECTION
  
  Merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.242.7
    committer: Allen lai <zheng.lai@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-05-14 15:07:30 +0800
    message:
      Bug#16707516 MEMORY LEAK WITH INNODB MEMCACHED PLUGIN FOR STALE CONNECTION
      
      rb://2341 Approved by Jimmy
      
      1: Leak in force clean:
      When the number of connections reaches to 2048, we will remove some
      stale connections from connection list, but don't free the connection.
      At same time, since these connections is removed from list, background
      thread can't free them too.
      
      2: Leak in handler_create_thd.
      
      3: Leak in return multi-cols result.
------------------------------------------------------------
revno: 5741 [merge]
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-14 07:54:47 +0200
message:
  merge to mysql-trunk from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.6
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-05-14 07:49:43 +0200
    message:
      adjust i_innodb.innodb-alter-debug not to cause race condition and fail
      
      Approved by Marko (innodb_dev_ww_grp@)
------------------------------------------------------------
revno: 5740 [merge]
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 22:40:32 +0100
message:
  BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION
  
  Merge from mysql-5.6 into mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.242.5
    committer: Nuno Carvalho <nuno.carvalho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 22:27:32 +0100
    message:
      BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION
      
      When a transaction was skipped due to its GTID was already logged,
      until GTID_NEXT was set to a different GTID, all the following
      executed transactions were incorrectly skipped.
      
      To avoid this incorrect behaviour, all executed transactions and
      skipped transactions on AUTOCOMMIT=0 mode or which implicit commit
      are marked as undefined (GTID_NEXT.type = UNDEFINED_GROUP) when them
      commit or rollback. So when a second transaction is executed for the
      same SET @@SESSION.GTID_NEXT command a error is thrown.
------------------------------------------------------------
revno: 5739 [merge]
committer: Christopher Powers <chris.powers@oracle.com>
branch nick: mysql-trunk-bug13955232
timestamp: Mon 2013-05-13 12:15:51 -0500
message:
  Bug#13955232 - PERFORMANCE_SCHEMA_INSTRUMENT='%=OFF' DOES NOT WORK ON WINDOWS
  
  Multiple issues:
  
  1) On Windows, double quotes in argv are removed but single quotes remain.
  
     Modified mysqld_get_one_option() to strip leading and trailing single
     quotes from the argument name and value.
  
  2) mysql-test-run.pl encloses server arguments from .opt files in
     double quotes, which can mask syntax errors on the command line.
  
     Updated setup_instruments_defaults.test to test command line arguments.
  
  3) Instrument names with invalid syntax were allowed.
  
     Hardened logic to handle null argument strings, check for balanced
     quotes and reject arguments with extraneous quotes and slashes.
  
  4) SQL syntax error in setup_instruments_defaults.test resulted in
  incomplete verification.
    ------------------------------------------------------------
    revno: 3902.242.4
    committer: Christopher Powers <chris.powers@oracle.com>
    branch nick: mysql-5.6-bug13955232
    timestamp: Mon 2013-05-13 12:04:52 -0500
    message:
      Bug#13955232 - PERFORMANCE_SCHEMA_INSTRUMENT='%=OFF' DOES NOT WORK ON WINDOWS
      
      Fixed multiple issues:
      
      1) On Windows, double quotes in argv are removed but single quotes remain.
      
         Modified mysqld_get_one_option() to strip leading and trailing single
         quotes from the argument name and value.
      
      2) mysql-test-run.pl encloses server arguments from .opt files in
         double quotes, which can mask syntax errors on the command line.
      
         Updated setup_instruments_defaults.test to test command line arguments.
      
      3) Instrument names with invalid syntax were allowed.
      
         Hardened logic to handle null argument strings, check for balanced
         quotes and reject arguments with extraneous quotes and slashes.
      
      4) SQL syntax error in setup_instruments_defaults.test resulted in
         incomplete verification.
------------------------------------------------------------
revno: 5738
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-ifdef4
timestamp: Mon 2013-05-13 17:56:46 +0200
message:
  Bug#16792349: YET MORE UNUSED #IFDEFS
  
  Remove the following unused #ifdefs:
    CANT_DELETE_OPEN_FILES
    CHECK_EMBEDDED_DIFFERENCES
    MY_ATOMIC_HAS_8_16
    NEED_SYS_SYSLOG_H
    NO_CLIENT_LONG_LONG
    NO_STRTOLL_PROTO
    OLD_HEAP_VERSION
    OLD_VERSION
    SHARED_LIBRARY
    SSL_VARS_NOT_STATIC
    USE_MY_STAT_STRUCT
    USE_OLD_FUNCTIONS
    USE_SYSTEM_WRAPPERS
    WANT_OLD_HEAP_VERSION
  
  Also remove the remaining support for Borland C.
------------------------------------------------------------
revno: 5737 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 22:36:57 +0800
message:
  Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
  
  == Analysis == 
  Both change buffer pages and on-disk indexes pages are marked as
  FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
  table_name and index_name.
  
  == Solution ==
  A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
  these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
  classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
  and INNODB_BUFFER_PAGE_LRU.
  
  This fix is only for IS reporting, both on-disk and buffer pool structures
  keep unchanged.
  
  Approved by both Marko and Jimmy. rb#2334
    ------------------------------------------------------------
    revno: 3902.242.3 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 22:32:08 +0800
    message:
      Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
      
      == Analysis == 
      Both change buffer pages and on-disk indexes pages are marked as
      FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
      table_name and index_name.
      
      == Solution ==
      A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
      these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
      classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
      and INNODB_BUFFER_PAGE_LRU.
      
      This fix is only for IS reporting, both on-disk and buffer pool structures
      keep unchanged.
      
      Approved by both Marko and Jimmy. rb#2334
------------------------------------------------------------
revno: 5736
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 12:07:20 +0300
message:
  Fix Bug#16799386 INNODB UNIT TESTS NEED TO BE COMPILED WITH THE SAME
  FLAGS AS INNODB SOURCE CODE
  
  After the code from WL#6456 mem0mem-t.cc needs to call os_sync_init()
  to initialize all lists.
  
  Approved by:	Sunny (on innodb_dev_ww_grp@)
------------------------------------------------------------
revno: 5735
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 12:01:00 +0300
message:
  Fix Bug#16799386 INNODB UNIT TESTS NEED TO BE COMPILED WITH THE SAME
  FLAGS AS INNODB SOURCE CODE
  
  Move the CMake instructions that define the compilation flags from
  storage/innobase/CMakeLists.txt into storage/innobase/innodb.cmake
  and include it from storage/innobase/CMakeLists.txt and from
  unittest/gunit/innodb/CMakeLists.txt.
  
  This is necessary because unit tests are linked with the already
  compiled InnoDB source files and thus a mismatch between compilation
  flags could cause a breakage. For example, if a header file defines some
  members of a struct only under e.g. UNIV_DEBUG and InnoDB sources are
  compiled with UNIV_DEBUG, but unit tests that include this same header
  files are compiled without UNIV_DEBUG.
  
  Approved by:	Sunny (on innodb_dev_ww_grp@)
------------------------------------------------------------
revno: 5734
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-prealloc-array
timestamp: Mon 2013-05-13 16:28:15 +0200
message:
  Bug#16736776 GET RID OF DYNAMIC_ARRAY IN THE RANGE OPTIMIZER
  
  Post-push fix: two unit tests pre-allocated zero elements.
  SunStudio did not like that:
  "An array cannot have zero size unless you use the option -features=zla"
------------------------------------------------------------
revno: 5733 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 22:27:17 +0800
message:
  Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
  
  == Analysis == 
  Both change buffer pages and on-disk indexes pages are marked as
  FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
  table_name and index_name.
  
  == Solution ==
  A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
  these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
  classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
  and INNODB_BUFFER_PAGE_LRU.
  
  This fix is only for IS reporting, both on-disk and buffer pool structures
  keep unchanged.
  
  Approved by both Marko and Jimmy. rb#2334`
    ------------------------------------------------------------
    revno: 3902.243.1 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 22:10:04 +0800
    message:
      Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
      
      == Analysis == 
      Both change buffer pages and on-disk indexes pages are marked as
      FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
      table_name and index_name.
      
      == Solution ==
      A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
      these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
      classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
      and INNODB_BUFFER_PAGE_LRU.
      
      This fix is only for IS reporting, both on-disk and buffer pool structures
      keep unchanged.
      
      Approved by both Marko and Jimmy. rb#2334
        ------------------------------------------------------------
        revno: 2875.525.15
        committer: bin.x.su@oracle.com
        branch nick: mysql-5.5-bug14529666
        timestamp: Mon 2013-05-13 22:05:56 +0800
        message:
          Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
          
          == Analysis == 
          Both change buffer pages and on-disk indexes pages are marked as
          FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
          table_name and index_name.
          
          == Solution ==
          A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
          these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
          classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
          and INNODB_BUFFER_PAGE_LRU.
          
          This fix is only for IS reporting, both on-disk and buffer pool structures
          keep unchanged.
          
          Approved by both Marko and Jimmy. rb#2334
------------------------------------------------------------
revno: 5732 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 16:18:35 +0200
message:
  Merge up from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.242.2
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 16:11:28 +0200
    message:
      Adding unit-tests to one of the runs in collections
------------------------------------------------------------
revno: 5731 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 21:42:39 +0800
message:
  Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
  
  == Analysis == 
  Both change buffer pages and on-disk indexes pages are marked as
  FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
  table_name and index_name.
  
  == Solution ==
  A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
  these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
  classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
  and INNODB_BUFFER_PAGE_LRU.
  
  This fix is only for IS reporting, both on-disk and buffer pool structures
  keep unchanged.
  
  Approved by both Marko and Jimmy. rb#2334
    ------------------------------------------------------------
    revno: 3902.242.1 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 21:25:14 +0800
    message:
      Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
      
      == Analysis == 
      Both change buffer pages and on-disk indexes pages are marked as
      FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
      table_name and index_name.
      
      == Solution ==
      A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
      these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
      classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
      and INNODB_BUFFER_PAGE_LRU.
      
      This fix is only for IS reporting, both on-disk and buffer pool structures
      keep unchanged.
      
      Approved by both Marko and Jimmy. rb#2
------------------------------------------------------------
revno: 5730 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 21:23:46 +0800
message:
  Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
  
  == Analysis == 
  Both change buffer pages and on-disk indexes pages are marked as
  FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
  table_name and index_name.
  
  == Solution ==
  A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
  these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
  classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
  and INNODB_BUFFER_PAGE_LRU.
  
  This fix is only for IS reporting, both on-disk and buffer pool structures
  keep unchanged.
  
  Approved by both Marko and Jimmy. rb#2334
    ------------------------------------------------------------
    revno: 3902.239.39 [merge]
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 21:05:39 +0800
    message:
      Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES APPROPRIATELY
      
      == Analysis == 
      Both change buffer pages and on-disk indexes pages are marked as
      FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
      table_name and index_name.
      
      == Solution ==
      A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
      these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
      classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
      and INNODB_BUFFER_PAGE_LRU.
      
      This fix is only for IS reporting, both on-disk and buffer pool structures
      keep unchanged.
      
      Approved by both Marko and Jimmy. rb#2334
        ------------------------------------------------------------
        revno: 2875.527.1
        committer: bin.x.su@oracle.com
        branch nick: mysql-5.5-bug14529666
        timestamp: Mon 2013-05-13 18:33:36 +0800
        message:
          Bug#14529666 INNODB_BUFFER_PAGE DOES NOT MARK CHANGE BUFFER PAGES
          APPROPRIATELY
          
          == Analysis == 
          Both change buffer pages and on-disk indexes pages are marked as
          FIL_PAGE_INDEX. So all ibuf index pages will classify as INDEX with NULL
          table_name and index_name.
          
          == Solution ==
          A new page type for ibuf data pages named I_S_PAGE_TYPE_IBUF is defined. All
          these pages whose index_id equal (DICT_IBUF_ID_MIN + IBUF_SPACE_ID) will 
          classify as IBUF_DATA instead of INDEX in INNODB_BUFFER_PAGE 
          and INNODB_BUFFER_PAGE_LRU.
          
          This fix is only for IS reporting, both on-disk and buffer pool structures
          keep unchanged.
          
          Approved by both Marko and Jimmy. rb#2334
------------------------------------------------------------
revno: 5729
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-prealloc-array
timestamp: Mon 2013-05-13 14:57:41 +0200
message:
  Bug#16736776 GET RID OF DYNAMIC_ARRAY IN THE RANGE OPTIMIZER
  
  Get rid of DYNAMIC_ARRAY:
   - it is not type safe, makes for unreadable/unmaintainable code
   - it is slow: we always malloc in QUICK_RANGE_SELECT::QUICK_RANGE_SELECT
     and malloc is expensive, esp. with many threads.
------------------------------------------------------------
revno: 5728
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: wl7010-trunk
timestamp: Mon 2013-05-13 15:09:37 +0300
message:
  WL#7010: Remove unused --basedir and --datadir options from mysql_upgrade
  
  Removed the unused options. Added a test case.
------------------------------------------------------------
revno: 5727
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: wl6984-trunk
timestamp: Fri 2013-05-10 16:58:59 +0300
message:
  WL#6984:  Deprecate ENCODE()/DECODE() in 5.7
  
  ENCODE() and DECODE() return deprecation warnings
  in 5.7 (trunk).
  Re-recorded test cases that are calling the functions 
  with the new warnings.
  Removed an unused reference to SQL_CRYPT from
  open_binary_frm.
  Added warnings comments to both the .c file and the .h
  file implementing SQL_CRYPT.
------------------------------------------------------------
revno: 5726 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Mon 2013-05-13 17:18:35 +0530
message:
  Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                             WITH COMPOSITE KEY COLUMNS
        
        		Null Merge
    ------------------------------------------------------------
    revno: 3902.239.38 [merge]
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-05-13 17:17:05 +0530
    message:
      Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                           WITH COMPOSITE KEY COLUMNS
      
      		Null Merge
        ------------------------------------------------------------
        revno: 2875.525.14
        committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
        branch nick: 5.5
        timestamp: Mon 2013-05-13 17:15:25 +0530
        message:
          Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                         WITH COMPOSITE KEY COLUMNS
          
          Problem:-
          While running a SELECT query with several AGGR(DISTINCT) function 
          and these are referring to different field of same composite key, 
          Returned incorrect value.
          
          Analysis:-
          
          In a table, where we have composite key like (a,b,c)
          and when we give a query like
          
          select COUNT(DISTINCT b), SUM(DISTINCT a) from ....
          
          here, we first make a list of items in Aggr(distinct) function
          (which is a, b), where order of item doesn't matter. 
          and then we see, whether we have a composite key where the prefix 
          of index columns matches the items of the aggregation function.
          (in this case we have a,b,c).
          
          if yes, so we can use loose index scan and we need not perform 
          duplicate removal to distinct in our aggregate function.
          
          In our table, we traverse column marked with <-- and get the result as
          (a,b,c)      count(distinct b)           sum(distinct a)
                       treated as count b          treated as sum(a)
          (1,1,2)<--              1                      1		
          (1,2,2)<--              1++=2                  1+1=2
          (1,2,3)		
          (2,1,2)<--              2++=3                  1+1+2=4
          (2,2,2)<--              3++=4                  1+1+2+2=6
          (2,2,3)
          
          result will be 4,6, but it should be (2,3)
          
          As in this case, our assumption is incorrect. If we have
          query like 
          select count(distinct a,b), sum(distinct a,b)from ..
          then we can use loose index scan
          
          Solution:-
          In our query, when we have more then one aggr(distinct) function 
          then they should refer to same  fields like
          
          select count(distinct a,b), sum(distinct a,b) from .. 
          
          -->we can use loose scan index as both aggr(distinct) refer to same fields a,b.
          
          If they are referring to different field like
          
          select count(distinct a), sum(distinct b) from .. 
          
          -->will not use loose scan index as both aggr(distinct) refer to different fields.
------------------------------------------------------------
revno: 5725 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Mon 2013-05-13 17:08:35 +0530
message:
  Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                       WITH COMPOSITE KEY COLUMNS
           	Change for the test failure because of the patch 
              	for bug#12328597.
    ------------------------------------------------------------
    revno: 3902.239.37
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-05-13 17:07:19 +0530
    message:
      Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                           WITH COMPOSITE KEY COLUMNS
               	Change for the test failure because of the patch 
                  	for bug#12328597.
------------------------------------------------------------
revno: 5724 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 12:32:41 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.239.36 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-13 12:30:23 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.13 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-13 12:27:33 +0530
        message:
          Null merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.12
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Mon 2013-05-13 12:01:17 +0530
            message:
              Fixing a pb2 issue.  Do not list the files in datadir.  There
              might be other files created by previously run test cases.
              List only files or directories specific to this test case.
------------------------------------------------------------
revno: 5723
committer: sayantan dutta <sayantan.dutta@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-13 12:03:11 +0530
message:
  Bug #16353319 - I_MAIN.MYSQL_UPGRADE FAILS ON PB2 AFTER FIX FOR BUG #14697538 reenabling the test case
------------------------------------------------------------
revno: 5722 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Mon 2013-05-13 11:41:28 +0530
message:
  Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                 WITH COMPOSITE KEY COLUMNS
     	Change for the test failure because of the patch 
        	for bug#12328597.
    ------------------------------------------------------------
    revno: 3902.239.35
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-05-13 11:39:54 +0530
    message:
      Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                     WITH COMPOSITE KEY COLUMNS
      	Change for the test failure because of the patch 
      	for bug#12328597.
------------------------------------------------------------
revno: 5721
committer: Abhishek Ranjan <abhishek.ar.ranjan@oracle.com>
branch nick: bug11759306-trunk
timestamp: Sun 2013-05-12 21:17:54 +0530
message:
  BUG#11759306 - !INCLUDEDIR DOES NOT READ ALL .CNF FILES
  
  DESCRIPTION:
  
  Any configuration files to be included using !includedir
  directive is checked for valid extensions. While checking
  extensions, MySQL considered everything after the first
  dot (extension character) after the directory name as
  the extension for that file.
  
  FIX:
  
  Changed the function to check the extensions as everything
  after the last dot ('.') after the directory name. This will
  make possible to use dot is the configuration file name.
------------------------------------------------------------
revno: 5720 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-05-12 20:05:15 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.239.34 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Sun 2013-05-12 20:03:44 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.12 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Sun 2013-05-12 19:45:42 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.11
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Sun 2013-05-12 19:41:25 +0530
            message:
              Fixing a build issue.  In InnoDB plugin, the function
              innobase_convert_to_filename_charset() was by mistake kept within
              the conditional compilation of UNIV_COMPILE_TEST_FUNCS.  Now placing
              the function out of UNIV_COMPILE_TEST_FUNCS.  Also, removed the
              unnecessary log message (as in 5.6+).
------------------------------------------------------------
revno: 5719 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Sun 2013-05-12 19:20:58 +0530
message:
  Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                 WITH COMPOSITE KEY COLUMNS
  
  	Merge fix for Bug#12328597 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.33
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Sun 2013-05-12 19:18:38 +0530
    message:
      Bug#12328597 - MULTIPLE COUNT(DISTINCT) IN SAME SELECT FALSE 
                     WITH COMPOSITE KEY COLUMNS
      
      Problem:-
      While running a SELECT query with several AGGR(DISTINCT) function 
      and these are referring to different field of same composite key, 
      Returned incorrect value.
      
      Analysis:-
      
      In a table, where we have composite key like (a,b,c)
      and when we give a query like
      
      select COUNT(DISTINCT b), SUM(DISTINCT a) from ....
      
      here, we first make a list of items in Aggr(distinct) function
      (which is a, b), where order of item doesn't matter. 
      and then we see, whether we have a composite key where the prefix 
      of index columns matches the items of the aggregation function.
      (in this case we have a,b,c).
      
      if yes, so we can use loose index scan and we need not perform 
      duplicate removal to distinct in our aggregate function.
      
      In our table, we traverse column marked with <-- and get the result as
      (a,b,c)      count(distinct b)           sum(distinct a)
                   treated as count b          treated as sum(a)
      (1,1,2)<--              1                      1		
      (1,2,2)<--              1++=2                  1+1=2
      (1,2,3)		
      (2,1,2)<--              2++=3                  1+1+2=4
      (2,2,2)<--              3++=4                  1+1+2+2=6
      (2,2,3)
      
      result will be 4,6, but it should be (2,3)
      
      As in this case, our assumption is incorrect. If we have
      query like 
      select count(distinct a,b), sum(distinct a,b)from ..
      then we can use loose index scan
      
      Solution:-
      In our query, when we have more then one aggr(distinct) function 
      then they should refer to same  fields like
      
      select count(distinct a,b), sum(distinct a,b) from .. 
      
      -->we can use loose scan index as both aggr(distinct) refer to same fields a,b.
      
      If they are referring to different field like
      
      select count(distinct a), sum(distinct b) from .. 
      
      -->will not use loose scan index as both aggr(distinct) refer to different fields.
------------------------------------------------------------
revno: 5718
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-05-11 07:00:42 +0530
message:
  BUG#11763934- DELETE AN OLD FILE WHEN 
  CREATE_FILE_LOG_EVENT::DO_APPLY_EVENT FAILS
  
  Problem: When Create_file_log_event::do_apply_event or 
  Execute_log_event::do_apply_event fails, the temporary
  files, created in tmpdir, are not getting deleted.
  
  Analysis: Such files are not reused and we can delete them
  incase of failure happens.
  
  Fix:Execute mysql_file_delete() on those temporary
  files(.info and .data files).
------------------------------------------------------------
revno: 5717 [merge]
committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-10 19:26:28 +0530
message:
  Null merge from 5.6 to 5.7
    ------------------------------------------------------------
    revno: 3902.239.32 [merge]
    committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-10 19:23:48 +0530
    message:
      Null merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.11 [merge]
        committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-05-10 19:21:40 +0530
        message:
          Null merge from 5.1 to 5.5
            ------------------------------------------------------------
            revno: 2661.880.10
            committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2013-05-10 19:18:21 +0530
            message:
              Bug#16119355:PREPARED STATEMENT: READ OF FREED MEMORY WITH STRING CONVERSION FUNCTIONS
              
              Reverting fix for Bug#16119355 in 5.1 as this needs two patches 
              from 5.5+ to work for a certain case
------------------------------------------------------------
revno: 5716
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Fri 2013-05-10 15:41:55 +0200
message:
  Bug#16395778 SUBOPTIMAL CODE IN SKIP_TRAILING_SPACE()
  
  Post-push fix to unit test: on some platforms std::string.c_str()
  is aligned on 4-byte boundaries rather than 8-byte.
------------------------------------------------------------
revno: 5715 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-10 15:41:53 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.239.31 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-10 15:40:22 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.10 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-05-10 15:38:25 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.9
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Fri 2013-05-10 15:35:40 +0530
            message:
              Fixing a build issue.  The function innobase_convert_to_system_charset()
              is included only in the builtin InnoDB, and it is missed in InnoDB
              plugin.  Adding this function in InnoDB plugin as well.
------------------------------------------------------------
revno: 5714 [merge]
committer: Anitha Gopi <anitha.gopi@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-10 10:57:44 +0200
message:
  Null merge 
    ------------------------------------------------------------
    revno: 3902.239.30
    committer: Anitha Gopi <anitha.gopi@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-10 10:53:36 +0200
    message:
      Adding special collections for valgrind. These run a smaller set that the default per push/daily/weekly suites
------------------------------------------------------------
revno: 5713 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-10 11:20:16 +0300
message:
  merge 5.6->trunk
    ------------------------------------------------------------
    revno: 3902.239.29
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-10 11:19:05 +0300
    message:
      Addendum 2 to BUG#16241992
      Re-introduced the allocation handling calls around change_user to fix valgrind failures.
    ------------------------------------------------------------
    revno: 3902.239.28
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-10 10:25:32 +0300
    message:
      Addendum 2 to BUG#16241992
      Re-added missing free() calls after a successful change user.
------------------------------------------------------------
revno: 5712
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Fri 2013-05-10 17:47:29 +1000
message:
  WL#6456 - Get rid of IB_OFFSETOF() macro. Allow non-POD types in UT_LIST_*
        
  Followup fix, get rid of UNIV_LIST_DEBUG. Set the list node next/prev
  pointers to zero even in non-debug builds.
  	          
  Approved by Jimmy Yang over IM.
------------------------------------------------------------
revno: 5711
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-09 17:03:18 +0300
message:
  addendum #1 to bug #BUG#16241992 
  re-recorded test cases due to changed error number in trunk.
------------------------------------------------------------
revno: 5710 [merge]
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-09 10:34:46 +0100
message:
  BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION
  
  Merge from mysql-5.6 into mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.239.27
    committer: Nuno Carvalho <nuno.carvalho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-09 10:29:49 +0100
    message:
      BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION
      
      Reverting the patch due to regressions.
------------------------------------------------------------
revno: 5709 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B16241992-trunk
timestamp: Thu 2013-05-09 12:08:03 +0300
message:
  merge 5.6->trunk
    ------------------------------------------------------------
    revno: 3902.239.26
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16241992-5.6
    timestamp: Thu 2013-05-09 12:07:07 +0300
    message:
      Bug #16241992
      
      A COM_CHANGE_USER failure costs very little and
      is not a subject to the same accounting a login failure
      is. This creates an unfair advantage over the ordinary
      login process.
      Fixed by making COM_CHANGE_USER failing to login 
      poison the connection  (using an unique error number)
      and cause disptatch_command() to exit with an error
       instead of reverting back to the previous credentials.
      Test cases updated.
------------------------------------------------------------
revno: 5708 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-09 14:05:56 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.239.25 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-09 14:02:52 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.9
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-05-09 14:01:51 +0530
        message:
          Fixing a pb2 issue.  Do not list the files in datadir.  There
          might be other files created by previously run test cases.
          List only files or directories specific to this test case.
------------------------------------------------------------
revno: 5707 [merge]
committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
branch nick: mysql-trunk-16315351
timestamp: Thu 2013-05-09 10:56:32 +0530
message:
  Merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.239.24
    committer: Nisha Gopalakrishnan <nisha.gopalakrishnan@oracle.com>
    branch nick: mysql-5.6-16315351
    timestamp: Thu 2013-05-09 09:37:49 +0530
    message:
      BUG#16315351 - ALTER TABLE DROP COLUMN: NO WARNING IF DUPLICATE 
                     INDEX FOR THE SAME COLUMN 
      
      Analysis
      -------
      
      When a column associated with a multi-column index is dropped,
      a NOTE is not reported in case a duplicate index exist on the
      table after the DROP COLUMN operation.
      
      EX: CREATE TABLE t1( fld1 INT, fld2 INT, KEY(fld1, fld2),    
                           KEY(fld2));
          ALTER TABLE t1 DROP COLUMN fld1;
      
      The duplicate index check was not invoked in the above mentioned
      case.
      
      Fix:
      ----
      The flag 'check_for_duplicate_indexes' is set, to trigger the 
      duplicate index check when the column associated with an index 
      is dropped.
------------------------------------------------------------
revno: 5706
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-09 07:49:17 +0300
message:
  Fix a compilation problem introduced by WL#6947.
  
  rec_printer::rec_printer(): The base class is std::ostringstream(),
  not ostringstream().
------------------------------------------------------------
revno: 5705 [merge]
committer: Sunny Bains <Sunny.Bains@Oracle.Com>
branch nick: trunk
timestamp: Thu 2013-05-09 13:58:24 +1000
message:
  WL#6456 - Get rid of IB_OFFSETOF() macro. Allow non-POD types in UT_LIST_*
  
  Allow lists of non-POD (Plain Old Data structure) types. POD is any
  non-scalar type that maps strictly to a C struct or union. The current
  implementation limits their use in C++.
  
  When I did the switch from C to C++ I had to hack a macro to get at the
  list node field using an IB_OFFSETOF() macro.
  
  /*******************************************************************//**
  Return offset of F in POD T.
  @param T        - POD pointer
  @param F        - Field in T */
  #define IB_OFFSETOF(T, F)                                               \
  	(reinterpret_cast<byte*>(&(T)->F) - reinterpret_cast<byte*>(T))
  
  This assumes a simple POD layout. This style access of struct fields limits the 
  use of InnoDB's list to simple structs and unions.
  
  In this patch the list init/constructor takes a pointer to member field or
  an accessor functor for the case where the link node member is nested in
  a struct/class.
  
  rb#831 Approved by Inaam Rana and Jimmy Yang.
    ------------------------------------------------------------
    revno: 4228.2.45 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-05-09 13:53:46 +1000
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.44 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-05-08 09:15:15 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.43 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-05-07 08:11:32 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.42 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-05-03 10:18:10 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.41 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-05-02 12:24:26 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.40 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-05-01 10:21:03 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.39 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-04-30 17:04:55 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.38 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-04-17 08:27:46 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.37 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Mon 2013-04-15 07:36:41 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.36 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-04-12 09:36:50 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.35 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-04-10 09:17:33 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.34 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Mon 2013-04-08 08:19:47 +1000
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.33 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-04-05 14:59:41 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.32 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-04-04 08:25:25 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.31 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-04-03 13:26:37 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.30 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-04-02 12:41:47 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.29 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-03-28 14:33:57 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.28 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-03-27 10:10:59 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.27 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-03-26 13:10:36 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.26 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Sat 2013-03-23 11:57:41 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.25 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-03-20 09:13:04 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.24 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-03-19 08:49:36 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.23 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-03-15 08:37:26 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.22 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-03-14 11:05:18 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.21 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-03-13 09:03:38 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.20 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Mon 2013-03-11 19:34:36 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.19 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-03-08 09:17:07 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.18 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-03-07 08:28:01 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.17 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-03-06 10:44:12 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.16 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-03-05 10:45:39 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.15 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Sun 2013-03-03 12:34:03 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.14 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-03-01 15:59:02 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.13 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-02-27 10:26:18 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.12 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2013-02-26 09:11:39 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.11 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-02-21 12:20:55 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.10 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-02-15 14:53:19 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.9 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Fri 2013-02-08 09:02:50 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.8 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2013-01-31 18:48:36 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.7 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-01-30 16:11:13 +1100
    message:
      WL#6456 - Merge from mysql-trunk
    ------------------------------------------------------------
    revno: 4228.2.6 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2013-01-30 04:10:40 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.5 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Mon 2013-01-07 13:11:54 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.4 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2012-10-09 18:43:09 +1100
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.3 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Thu 2012-10-04 18:41:24 +1000
    message:
      Merge from mysql-trunk to mysql-trunk-wl6456.
    ------------------------------------------------------------
    revno: 4228.2.2 [merge]
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Tue 2012-09-11 10:03:23 +1000
    message:
      WL#6456 - Merge from mysql-trunk.
    ------------------------------------------------------------
    revno: 4228.2.1
    committer: Sunny Bains <Sunny.Bains@Oracle.Com>
    branch nick: wl-6456
    timestamp: Wed 2012-08-15 19:20:05 +1000
    message:
      WL#6456 - Initial version.
------------------------------------------------------------
revno: 5704 [merge]
committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-09 12:11:35 +0900
message:
  merge to mysql-trunk from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.239.23
    committer: Yasufumi Kinoshita <yasufumi.kinoshita@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-09 12:09:33 +0900
    message:
      Bug #16371942 : INNODB.INNODB_BUG14676111 IS UNSTABLE ON PB2
      
      The debug variable INNODB_PURGE_TRX_ID_AGE still had race condition.
      It was calculated based on trx_sys->rw_max_trx_id without &trx_sys->mutex.
      
      rb#2392 approved by Marko.
------------------------------------------------------------
revno: 5703
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-09 10:37:07 +0800
message:
  WL#6355 Semisync: externalize transactions only after ACK received
  
  Postfix
  rpl_semi_sync_after_sync got timeout sporadically. That happened because
  'end' signal was cleared too soon to receive by the waiting thread(server_1).
  So the waiting thread hung until timeout.
  
  'SET DEBUG_SYNC="RESET"' for master connection should be executed after the
  waiting thread(server_1) gets "end" signal. Because the SET statement clears
  not only current thread's debug action but the global signal as well.
------------------------------------------------------------
revno: 5702 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 23:18:12 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.239.22
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-08 23:16:55 +0300
    message:
      Bug#16774118 RACE CONDITION IN BLOB ACCESS DURING ONLINE ALTER TABLE
      
      This is a race condition in BLOB access during online ALTER TABLE,
      when applying the table modification log for other than the very last
      log block.
      
      row_log_table_apply_convert_mrec(): Acquire the index B-tree lock to
      protect the access to log->blobs and the BLOB page itself.
      
      rb#2401 approved by Kevin Lewis
    ------------------------------------------------------------
    revno: 3902.239.21
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-08 23:16:01 +0300
    message:
      Fix a compiler warning about unused variable.
------------------------------------------------------------
revno: 5701
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug16780120
timestamp: Wed 2013-05-08 15:46:36 +0200
message:
  Bug#16780120: ERROR CODES MUST HAVE SAME VALUE ACROSS MYSQL VERSIONS, TAKE 2 
  
  All MySQL error numbers should be stable between major versions
  as this allows client applications to handle errors based on
  error number without rebuilding/rewriting between MySQL versions.
  
  MySQL error numbers are determined by the order MySQL errors
  are listed in errmsg-utf8.txt.
  
  This patch reorders the MySQL errors so that new errors
  introduced in 5.7 are listed last and that MySQL errors
  also present in 5.6 are listed in the same order so that they
  keep their error number.
------------------------------------------------------------
revno: 5700 [merge]
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 17:47:05 +0530
message:
  BUG#16414916 - I_RPL.RPL_CHANGE_REPOSITORY_STRESS CAUSES OTHER RPL TEST FAILURES
  
  merge from mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.20
    committer: Manish Kumar<manish.4.kumar@oracle.com>
    branch nick: mysql-5.6_16414916
    timestamp: Wed 2013-05-08 17:45:40 +0530
    message:
      BUG#16414916 - I_RPL.RPL_CHANGE_REPOSITORY_STRESS CAUSES OTHER RPL TEST FAILURES
            
      Problem : rpl_change_repository_stress.test has a few restarts in the test which 
                results in improper cleanup of server variables and as a result of 
                which the next test in the mtr sequence is failing.
            
      Solution : added few lines in the cleanup section to restart the server 
                 variables at the end of the test. This prevents other test to fail.
------------------------------------------------------------
revno: 5699
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 19:11:43 +0800
message:
  WL#6355 Semisync: externalize transactions only after ACK received
  
  Postfix
  There was a assert failure in Binlog_storage_delegate::after_sync.
  It asserts that the argument log_pos is never 0. But It happened
  if the last thd in the commit queue encountered an flush error.
  
  To fix the problem, the log_pos of the last thd without error
  is passed to after_sync.
------------------------------------------------------------
revno: 5698 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 12:56:37 +0200
message:
  Null merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.19 [merge]
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-08 12:53:53 +0200
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.8
        committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
        branch nick: mysql-5.5-test
        timestamp: Wed 2013-05-08 12:52:12 +0200
        message:
          Bug#16779374: NEW ERROR MESSAGE ADDED TO 5.5 AFTER 5.6 GA - REUSING
                        NUMBER ALREADY USED BY 5.6
          
          The problem was that the patch for Bug#13004581 added a new error
          message to 5.5. This causes it to use an error number already used
          in 5.6 by ER_CANNOT_LOAD_FROM_TABLE_V2. Which means that error
          message number stability between GA releases is broken.
          
          This patch fixes the problem by removing the error message and
          using ER_UNKNOWN_ERROR instead.
------------------------------------------------------------
revno: 5697
committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
branch nick: migration
timestamp: Wed 2013-05-08 14:15:25 +0530
message:
  removed mysql-test/collections/mysql-trunk-stage.push
------------------------------------------------------------
revno: 5696 [merge]
committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 11:57:34 +0530
message:
  Merge from 5.6 to 5.7
    ------------------------------------------------------------
    revno: 3902.239.18 [merge]
    committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-05-08 11:44:44 +0530
    message:
      Merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.525.7 [merge]
        committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-05-07 18:00:00 +0530
        message:
          Merge from 5.1 to 5.5
            ------------------------------------------------------------
            revno: 2661.880.8
            committer: Chaithra Gopalareddy <chaithra.gopalareddy@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2013-05-07 16:08:48 +0530
            message:
              Bug #16119355: PREPARED STATEMENT: READ OF FREED MEMORY WITH
                                         STRING CONVERSION FUNCTIONS
                          
              Problem:
              While executing the prepared statement, user variable is
              set to memory which would be freed at the end of
              execution.
              If the statement is executed again, valgrind throws
              error when accessing this pointer.
                          
              Analysis:
                          
              1. First time when Item_func_set_user_var::check is called,
              memory is allocated for "value" to store the result.
              (In the call to copy_if_not_alloced).
              2. While sending the result, Item_func_set_user_var::check
              is called again. But, this time, its called with
              "use_result_field" set to true. 
              As a result, we call result_field->val_str(&value).
              3. Here memory allocated for "value" gets freed. And "value"
              gets set to "result_field", with "str_length" being that of
              result_field's.
              4. In the call to JOIN::cleanup, result_field's memory gets
              freed as this is allocated in a chunk as part of the
              temporary table which is needed to execute the query.
              5. Next time, when execute of the same statement is called,
              "value" will be set to memory which is already freed.
              Valgrind error occurs as "str_length" is positive 
              (set at Step 3)
                          
              Note that user variables list is stored as part of the Lex object
              in set_var_list. Hence the persistance across executions.
                    
              Solution:
              Patch for Bug#11764371 fixed in mysql-5.6+ fixes this problem 
              as well.So backporting the same.
                    
              In the solution for Bug#11764371, we create another object of 
              user_var and repoint it to temp_table's field. As a result while 
              deleting the alloced buffer in Step 3, since the cloned object 
              does not own the buffer, deletion will not happen.
              So at step 5 when we execute the statement second time, the 
              original object will be used and since deletion did not happen 
              valgrind will not complain about dangling pointer.
------------------------------------------------------------
revno: 5695
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 08:33:16 +0300
message:
  WL#6947 InnoDB: Use DBUG_PRINT for tracing
  
  InnoDB contains a number of Boolean flags that are only settable at
  compilation time or from a debugger, to enable certain diagnostic
  printouts. Most of this has not been used in the past decade.
  
  Replace the InnoDB-internal flags with DBUG_PRINT labels as follows:
  
  ib_buf	buf_debug_prints
  ib_cur	btr_cur_print_record_ops
  ib_lock	lock_print_waits
  ib_log	log_debug_writes
  ib_que	que_trace_on
  ib_purge	srv_print_thread_releases
  
  The following flags are unused and will be removed:
  
  srv_print_buf_io
  srv_print_lock_waits
  srv_print_log_io
  srv_print_latch_waits
  
  The following flags are close to useless and will be removed:
  
  os_aio_print_debug	(error handling enables a never-seen printout)
  pars_print_lexed	(only used in UNIV_SQL_DEBUG)
  
  rb#2190 approved by Jimmy Yang, Inaam Rana
------------------------------------------------------------
revno: 5694 [merge]
committer: bin.x.su@oracle.com
branch nick: mysql-trunk
timestamp: Wed 2013-05-08 10:56:37 +0800
message:
  Bug#16362046 READONLY, ASSERT GLOBAL_SEGMENT < OS_AIO_N_SEGMENTS WHEN READING
  A PAGE
  
  == Analysis ==
  In read only mode, we do not use IO_IBUF_SEGMENT and IO_LOG_SEGMENT.
  
  == Solution ==
  If the server is in read only mode, we should skip IO_IBUF_SEGMENT and
  IO_LOG_SEGMENT when we calculate segment number for a slot belonging to aio
  read array.
    ------------------------------------------------------------
    revno: 3902.239.17
    committer: bin.x.su@oracle.com
    branch nick: mysql-5.6-bug16362046
    timestamp: Wed 2013-05-08 10:45:12 +0800
    message:
      Bug#16362046 READONLY, ASSERT GLOBAL_SEGMENT < OS_AIO_N_SEGMENTS WHEN READING
      A PAGE
      
      == Analysis ==
      In read only mode, we do not use IO_IBUF_SEGMENT and IO_LOG_SEGMENT.
      
      == Solution ==
      If the server is in read only mode, we should skip IO_IBUF_SEGMENT and
      IO_LOG_SEGMENT when we calculate segment number for a slot belonging to aio
      read array.
------------------------------------------------------------
revno: 5693
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Tue 2013-05-07 23:22:58 +0200
message:
  Unbreak trunk: Add sql/auth to the list of directories to search
  when building InnoDB unit tests so that sql_acl.h can actually be found.
------------------------------------------------------------
revno: 5692
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: trunk
timestamp: Wed 2013-05-08 02:31:37 +0530
message:
  WL#6045 - Improve Innochecksum
  -- Fixed the window build failure as changing the
     __WIN__ to _WIN32 in extra/innochecksum.cc file.
     The fixed is brought after Bug#11745828 patch pushed
     to mysql-trunk.
  
     Approved by: Kevin over IM 
------------------------------------------------------------
revno: 5691
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-07 22:22:41 +0300
message:
  Unbreak the build on Linux with GNU libc.
  
  sched_getcpu() needs <sched.h>, not <utmpx.h>.
  <bits/utmpx.h> could #define EMPTY 0, breaking mdl.h,
  which would use EMPTY = 0 in enum enum_wait_status.
  
  Approved by Kevin Lewis.
------------------------------------------------------------
revno: 5690
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Tue 2013-05-07 11:12:32 -0500
message:
  Move sql engine #include files to ha_prototypes.h
  
  This is a non-functional patch that moves all #include references
  to files outside InnoDB into a single file; ha_prototypes.h.
  It collects all these includes into one place for better tracking.
  The advantage is that this could become a precompiled header on some
  compilers.  The disadvantage is that most changes to header files in
  the server will cause most of InnoDB to recompile.
  
  Grouping these headers together exposed a couple naming conflicts;
  
  1) The InnoDB function ha_create() needed to be renamed to
  ib_create() because it now conflicts with a handler.h function of
  the same name.
  
  2) The enum value "ERROR" in Group_cache::enum_add_group_status
  needed to be renamed, according to an error in the VS2010 compile.
  
  All dependencies from InnoDB into the server can now be found by
  searching for ha_prototypes.h which is included in about 50 files.
  
  Approved by Sunny in RB#2364
------------------------------------------------------------
revno: 5689 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B16604641-trunk
timestamp: Tue 2013-05-07 17:58:49 +0300
message:
  merge
    ------------------------------------------------------------
    revno: 3902.239.16 [merge]
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16604641-5.6
    timestamp: Tue 2013-05-07 17:47:30 +0300
    message:
      merge to mysql-5.6
------------------------------------------------------------
revno: 5688 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B16604641-trunk
timestamp: Tue 2013-05-07 17:56:38 +0300
message:
  merge to trunk
    ------------------------------------------------------------
    revno: 3902.241.1
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16604641-5.6
    timestamp: Tue 2013-04-30 11:12:19 +0300
    message:
      Bug #16604641: "SET PASSWORD FOR" CMD SUCCESS FOR USER PWD
       EXPIRED & FLAG NOT SET ACCORDINGLY
      
      The expired flag in the thread specific copy of the user information 
      was frivolously reset without first checking if the user whose password
      is updated is the same user as in the thread cache.
      
      Fixed by properly checking if the thread cache needs to be updated too
      (together with the global user cache and the disk version).
      
      Also fixed the omision to enforce the password expiration mode on 
      SET PASSWORD FOR ... statement for cases where the password for
      the current user is not reset.
      
      Test case added.
------------------------------------------------------------
revno: 5687 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Tue 2013-05-07 16:34:15 +0200
message:
  Null-merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.15
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-05-07 16:32:50 +0200
    message:
      Backport from mysql-5.6 to mysql-trunk of:
      ------------------------------------------------------------
      revno: 5627
      committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
      branch nick: mysql-trunk-test
      timestamp: Fri 2013-04-26 15:05:25 +0200
      message:
        Bug#16729109: FIX COMPILATION WARNINGS WITH GCC 4.8
        
        Fix GCC 4.8 compilation warnings from new checks:
        -Werror=unused-local-typedefs
        -Werror=sizeof-pointer-memaccess
------------------------------------------------------------
revno: 5686 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Tue 2013-05-07 15:24:52 +0200
message:
  Null merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.14
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-backport
    timestamp: Tue 2013-05-07 15:23:41 +0200
    message:
      Backport from mysql-trunk to mysql-5.6 of:
      ------------------------------------------------------------
      revno: 5647
      committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
      branch nick: mysql-trunk-bug16736461
      timestamp: Tue 2013-04-30 20:17:42 +0200
      message:
        Bug#16736461: ATOMIC OPERATIONS USING LOCKS ARE BROKEN, WON'T COMPILE 
        
        Compiling with -DMY_ATOMIC_MODE_RWLOCKS=1 or on a platform where
        we don't support lock-less atomics (e.g. ARM), was broken.
        
        With rwlocks atomics, my_atomic_rwlock_t was declared to consist of
        pthread_mutex_t, while the atomics macros assumed that it contained
        mysql_mutex_t.
    ------------------------------------------------------------
    revno: 3902.239.13
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-backport
    timestamp: Tue 2013-05-07 15:22:32 +0200
    message:
      Backport from mysql-trunk to mysql-5.6 of:
      ------------------------------------------------------------
      revno: 5657
      committer: Tor Didriksen <tor.didriksen@oracle.com>
      branch nick: trunk-merge
      timestamp: Thu 2013-05-02 11:24:38 +0200
      message:
        Bug#13252623 UNPORTABLE USAGE OF VA_LIST IN SQL-COMMON/CLIENT_PLUGIN.C
        
        The literal '0' isn't necessarily a valid VA_LIST.
    ------------------------------------------------------------
    revno: 3902.239.12
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-backport
    timestamp: Tue 2013-05-07 15:21:50 +0200
    message:
      Backport from mysql-trunk to mysql-5.6 of:
      ------------------------------------------------------------
      revno: 5667
      committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
      branch nick: mysql-trunk-bug11864205
      timestamp: Mon 2013-05-06 08:54:53 +0200
      message:
        Bug#11864205: PLUGIN BOOLEAN VARIABLES DON'T BEHAVE WELL ON
                      UNSIGNED-CHAR MACHINES
        
        Don't assign negative values to my_bool. On platforms where char is
        unsigned, (or with -funsigned-char) -1 wraps around to 255.
------------------------------------------------------------
revno: 5685 [merge]
committer: Vasil Dimov <vasil.dimov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-07 16:14:04 +0300
message:
  Null-merge mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.11
    committer: Vasil Dimov <vasil.dimov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-05-07 16:12:29 +0300
    message:
      Backport the following changeset from mysql-trunk into mysql-5.6:
      
        | revision-id: vasil.dimov@oracle.com-20130326104352-j7kqlopg0l1vtpr6
        | committer: Vasil Dimov <vasil.dimov@oracle.com>
        | branch nick: mysql-trunk
        | timestamp: Tue 2013-03-26 12:43:52 +0200
        | message:
        |   Fix Bug#16504900 SWITCH TO USING STD::VECTOR INSTEAD OF DYN_ARRAY_T
        |   IN DICT0STATS.CC
        |
        |   Use std::vector in dict0stats.cc instead of dyn_array_t.
        |
        |   Suggested by:	Sunny
        |   Reviewed by:	Sunny (rb:2201)
------------------------------------------------------------
revno: 5684 [merge]
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-07 18:01:24 +0530
message:
  WL#6045 - Improve Innochecksum
  
  This WL is to enhance the functionality of innochecksum utility.
  Implemention done for all features as mention for WL.
  R01 - It shall be possible to specify the checksum algorithm to innochecksum
        utility.
  R02 - innochecksum shall provide option to rewrite the current checksum using
        the specified algorithm.
  R03 - innochecksum shall provide option to rewrite checksum even if the current
        checksum is invalid.
  R04 - innochecksum shall allow to configure the maximum checksum mismatch
        allowed before terminating the program.
  R05 - innochecksum shall operate on multiple tablespace files.
  R06 - innochecksum shall operate on multiple files in the same tablespace.
  R07 - innochecksum shall operate on files greater than 2GB.
  R08 - Innochecksum shall chart out page type summaries for each page in the
        filespace, and would dump the info on standard output(stdout) or standard
        error(stderr) as it goes.
  R09 - Debug option for innochecksum tool shall change & must work similar as
        mysqld debug option works.
  
  Approved by Kevin and Satya. rb#1997
    ------------------------------------------------------------
    revno: 5107.32.55 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Tue 2013-05-07 11:33:50 +0530
    message:
      WL#6045 Improve Innochecksum
      --Merge with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.54
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Tue 2013-05-07 11:04:48 +0530
    message:
      WL#6045 Improve Innochecksum
      --Fixed windows msi failure and valgrind failure in PB2
    ------------------------------------------------------------
    revno: 5107.32.53
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Thu 2013-04-25 07:03:43 +0530
    message:
      WL#6045 Improve Innochecksum
      --Separated the some test case of innodb-wl6045.test into
      innodb-wl6045-2.test in order to overcome the timeout failure in pb2 for window.
    ------------------------------------------------------------
    revno: 5107.32.52
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Wed 2013-04-24 12:46:35 +0530
    message:
      WL#6045 Improve Innochecksum
      Removed the trailing space in a test case.
    ------------------------------------------------------------
    revno: 5107.32.51
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Wed 2013-04-24 12:21:37 +0530
    message:
      WL#6045 Improve Innochecksum
      Fixed the test case mismatches issue
    ------------------------------------------------------------
    revno: 5107.32.50 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Wed 2013-04-24 12:06:25 +0530
    message:
      WL#6045 Improve Innochecksum
      Merge with trunk
    ------------------------------------------------------------
    revno: 5107.32.49
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-04-24 11:59:44 +0530
    message:
      WL#6045 Improve Innochecksum
      --Added test cases for different key_block_size for compressed
        tablespaces.
    ------------------------------------------------------------
    revno: 5107.32.48
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-04-23 12:29:07 +0530
    message:
      wl6045: updated the result file as per the changes in page-type-dump
    ------------------------------------------------------------
    revno: 5107.32.47 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-04-22 13:40:27 +0530
    message:
      WL#6045 Improve Innochecksum
      Merge with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.46 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Fri 2013-04-19 14:23:29 +0530
    message:
      WL#6045 Improve Innochecksum
      Merge with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.45
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Fri 2013-04-19 14:18:10 +0530
    message:
      WL#6045 Improve Innochecksum
      Included "string.h" in buf0buf.cc file as causing compilation failure
      when cmake fLag -DWITH_PERFSCHEMA_STORAGE_ENGINE:BOOL=OFF
    ------------------------------------------------------------
    revno: 5107.32.44
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Thu 2013-04-18 09:27:13 +0300
    message:
      WL#6045: Simplify the innochecksum function read_file().
    ------------------------------------------------------------
    revno: 5107.32.43
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Thu 2013-04-18 09:20:52 +0300
    message:
      WL#6045: Properly rename innochecksum -d to -#, and adjust tests.
    ------------------------------------------------------------
    revno: 5107.32.42
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Wed 2013-04-17 23:38:57 +0530
    message:
      WL#6045 Improve Innochecksum
      --Fix pb2 failure and testing in itch
    ------------------------------------------------------------
    revno: 5107.32.41
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-satya
    timestamp: Mon 2013-04-15 03:01:41 +0530
    message:
      WL#6045 Improve Innochecksum
      --Change the innochecksum to be debug variant during build.
      --Fixed the test failure in Solaris platform.
    ------------------------------------------------------------
    revno: 5107.32.40
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Wed 2013-04-10 05:36:55 +0530
    message:
      WL#6045 Improve Innochecksum
      --Addressed Kevin's comments.
      --Make binaries to build the innochecksum-debug to fixed the pb2 failure for test.
      --Change the mtr framework to point to innochecksum-debug path.
    ------------------------------------------------------------
    revno: 5107.32.39
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-window
    timestamp: Thu 2013-04-04 17:35:12 +0530
    message:
      WL#6045 Improve Innochecksum
      --Check the failure of testcase in pb2 with more information.
    ------------------------------------------------------------
    revno: 5107.32.38 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-anil
    timestamp: Thu 2013-04-04 00:22:27 +0530
    message:
      WL#6045 Improve Innochecksum
      --Merge with trunk.
    ------------------------------------------------------------
    revno: 5107.32.37
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-anil
    timestamp: Thu 2013-04-04 00:17:40 +0530
    message:
      WL#6045 Improve Innochecksum
      --Address Kevin's comments.
    ------------------------------------------------------------
    revno: 5107.32.36
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-anil
    timestamp: Tue 2013-04-02 19:13:58 +0530
    message:
      WL#6045 Improve Innochecksum
      --Removed a extra white space in test file.
    ------------------------------------------------------------
    revno: 5107.32.35 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-anil
    timestamp: Tue 2013-04-02 18:44:30 +0530
    message:
      WL#6045 Improve Innochecksum
      --Merge with trunk
    ------------------------------------------------------------
    revno: 5107.32.34
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-anil
    timestamp: Tue 2013-04-02 18:29:16 +0530
    message:
      WL#6045 Improve Innochecksum
      --Fixed the test cases as MYSQL_TMP_DIR != MYSQLTEST_VARDIR/tmp
    ------------------------------------------------------------
    revno: 5107.32.33
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-04-02 11:58:50 +0530
    message:
      updated the new result file after changes in the page_type_summary output
    ------------------------------------------------------------
    revno: 5107.32.32
    committer: Satya Bodapati <satya.bodapati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Fri 2013-03-29 17:30:21 +0530
    message:
      WL#6045 Improve Innochecksum
      --Address Kevin comments.
      --Change the --page-type-summary format.
      --Fixed the Sporadic failing of innodb-wl6045-linux.test
    ------------------------------------------------------------
    revno: 5107.32.31
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-03-25 17:31:29 +0530
    message:
      added the review comments from Anil and regenerated the result file
    ------------------------------------------------------------
    revno: 5107.32.30 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-push
    timestamp: Mon 2013-03-25 10:29:42 +0530
    message:
      WL#6045
      --Merge with trunk
    ------------------------------------------------------------
    revno: 5107.32.29
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-push
    timestamp: Sat 2013-03-23 03:45:48 +0530
    message:
      WL#6045 Improve Innochecksum
      --Addressed Kevin's comments.
      rb://1997
    ------------------------------------------------------------
    revno: 5107.32.28
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045-push
    timestamp: Fri 2013-03-22 12:34:38 +0530
    message:
      WL#6045 Improve Innochecksum
      --Added Patch
      1) Bug #16491145 DOES NOT ALLOW 9223372036854775808 OR BIGGER
                      VALUES FOR ULONGLONG
      rb://2226 Approved by Kevin and Nirbhay
      
      2) Bug #16444934 WRITE --VERBOSE OUTPUT TO STDERR FOR INNOCHECKSUM TOOL
                       ONLY
      Approved by Nirbhay
    ------------------------------------------------------------
    revno: 5107.32.27 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: WL6045-window
    timestamp: Wed 2013-03-20 18:46:42 +0530
    message:
      WL#6045 Improve Innochecksum
      --Merge with trunk
    ------------------------------------------------------------
    revno: 5107.32.26
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: WL6045-window
    timestamp: Wed 2013-03-20 18:34:40 +0530
    message:
      WL#6045 Improve Innochecksum
      --Solve the window various issues.
      --For page-type-dump in Window, use CreateFile() rather than fopen()
        to grant the permission to delete the file when innochecksum is
        running. As needed when doing testing for lock mechanism for window. 
    ------------------------------------------------------------
    revno: 5107.32.25 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: WL6045-window
    timestamp: Tue 2013-03-19 19:44:16 +0530
    message:
      WL#6045 Improve Innochecksum
      --Merge with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.24
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: WL6045-window
    timestamp: Tue 2013-03-19 19:22:54 +0530
    message:
      WL#6045 Improve Innochecksum
      --Addressed Kevin comments.
      --Solved out the compilation failure for windows.
    ------------------------------------------------------------
    revno: 5107.32.23
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-03-13 10:19:13 +0530
    message:
      As per the rb comments removed the info of the page-type-dump
    ------------------------------------------------------------
    revno: 5107.32.22
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-03-12 13:51:34 +0530
    message:
      Added a new result file 
    ------------------------------------------------------------
    revno: 5107.32.21
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-03-12 10:24:02 +0530
    message:
      modified the testcase by disabling the unnecessary logging 
    ------------------------------------------------------------
    revno: 5107.32.20
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Mon 2013-03-11 19:10:08 +0530
    message:
      WL#6045: Improve Innochecksum
      
      Fixed the fail test case as after merge with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.19 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Mon 2013-03-11 17:22:51 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Merge with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.18
    committer: viswanatham gudipati <viswanatham.gudipati@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-03-11 16:49:38 +0530
    message:
      added result file for the 3GB testcase
    ------------------------------------------------------------
    revno: 5107.32.17
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-03-11 15:45:18 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Added 3GB test for innochecksum tool.
    ------------------------------------------------------------
    revno: 5107.32.16
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-03-11 15:28:48 +0530
    message:
      WL#6045 Improve Innochecksum
      
      1) Addressed the issue related to code indentation.
    ------------------------------------------------------------
    revno: 5107.32.15
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-03-11 10:58:28 +0530
    message:
      WL#6045 Improve Innochecksum
      
      1) Fixed the indentation.
      2) Redirected all option output to stderr rather than stdout( except the
         --write option).
      3) Added a new mtr test cases.
         innodb-wl6045-linux.test : It need to test for non-window system
         for the feature when we have to read from stdin.
    ------------------------------------------------------------
    revno: 5107.32.14
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Mon 2013-03-04 19:19:12 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Addressed the issues as per rb://1997
    ------------------------------------------------------------
    revno: 5107.32.13 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-02-27 13:27:08 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Merged with mysql-trunk
    ------------------------------------------------------------
    revno: 5107.32.12
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-02-27 13:12:56 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Resolved the issues for failing of innodb-wl6045.test
    ------------------------------------------------------------
    revno: 5107.32.11
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-02-27 11:04:16 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Resolved the issues as innodb-wl6045.test was failing in mysql-trunk-itch.
    ------------------------------------------------------------
    revno: 5107.32.10
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-02-26 19:26:26 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Did Cleanup of the innodb-wl6045.test and added new test.
      Modified the indentation as per innodb coding guidelines.
    ------------------------------------------------------------
    revno: 5107.32.9
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Thu 2013-02-21 10:17:52 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Removed old result file.
    ------------------------------------------------------------
    revno: 5107.32.8
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: wl6045
    timestamp: Thu 2013-02-21 10:07:46 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Added mtr test & result file.
    ------------------------------------------------------------
    revno: 5107.32.7 [merge]
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-02-19 19:08:18 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Merged to mysql-trunk-wl6045
        ------------------------------------------------------------
        revno: 5107.24.7
        committer: Anil Toshniwal <anil.toshniwal@oracle.com>
        branch nick: mysql-trunk
        timestamp: Tue 2013-02-19 19:02:45 +0530
        message:
          WL#6045 Improve Innochecksum
          
          Merge with mysql-trunk.
    ------------------------------------------------------------
    revno: 5107.32.6
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-02-13 20:24:50 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Adding test case to check the functionality and also updating the branch
      with the lastest trunk.
    ------------------------------------------------------------
    revno: 5107.32.5
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Wed 2013-02-13 19:21:36 +0530
    message:
      WL#6045 Improve Innochecksum
      
      1) Added comments and fixed some indentations.
    ------------------------------------------------------------
    revno: 5107.32.4
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-02-12 17:51:25 +0530
    message:
      WL#6045 Improve Innochecksum
      
      1) Fixed the Bug #16296558 INNOCHECKSUM: SERVER CRASHES WHEN THE
      ALGORITHM CHANGES FROM DEFAULT TO CRC32
      
      2) Change the output format for --strict-check.
    ------------------------------------------------------------
    revno: 5107.32.3
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Thu 2013-02-07 13:48:34 +0530
    message:
      WL#6045 Improve Innochecksum
      
      1) Minor changes with resolve --write issue with previous patch.  
    ------------------------------------------------------------
    revno: 5107.32.2
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Thu 2013-02-07 12:14:03 +0530
    message:
      WL#6045 Improve Innochecksum
      
      1) Change mysql.test.run.pl to support for innochecksum tool.
      Example:
      --exec $INNOCHECKSUM <argument>
      
      2) Change indentation,removed trailing spaces & fixed issue for --write option 
         as earlier patch forgot the change in file positioning while checksum rewrite.
        
    ------------------------------------------------------------
    revno: 5107.32.1
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-trunk-wl6045
    timestamp: Tue 2013-02-05 17:25:55 +0530
    message:
      WL#6045 Improve Innochecksum
      
      Done Implementation::
      R01 - It shall be possible to specify the checksum algorithm to
            innochecksum utility.
      R02 - innochecksum shall provide option to rewrite the current
            checksum using the specified algorithm.
      R03 - innochecksum shall provide option to rewrite checksum even
            if the current checksum is invalid.
      R04 - innochecksum shall allow to configure the maximum checksum
            mismatch allowed before terminating the program.
      R05 - innochecksum shall operate on multiple tablespace files.
      R06 - innochecksum shall operate on multiple files in the same tablespace.
      R07 - innochecksum shall operate on files greater than 2GB.
      R08 - innochecksum shall work online on a running database.
      R09 - Innochecksum shall chart out page type summaries for each
            page in the filespace, and would dump the info on standard
            output(stdout) or standard error(stderr) as it goes.
      R10 - Debug option for innochecksum tool shall change & must work
            similar as mysqld debug option works.
------------------------------------------------------------
revno: 5683 [merge]
committer: Sergey Glukhov <sergey.glukhov@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-07 14:05:50 +0400
message:
  5.6 -> trunk merge
    ------------------------------------------------------------
    revno: 3902.239.10 [merge]
    committer: Sergey Glukhov <sergey.glukhov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-05-07 13:38:08 +0400
    message:
      5.5 -> 5.6 merge
        ------------------------------------------------------------
        revno: 2875.525.6 [merge]
        committer: Sergey Glukhov <sergey.glukhov@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-05-07 13:14:01 +0400
        message:
          5.1 -> 5.5 merge
            ------------------------------------------------------------
            revno: 2661.880.7
            committer: Sergey Glukhov <sergey.glukhov@oracle.com>
            branch nick: mysql-5.1
            timestamp: Tue 2013-05-07 13:10:58 +0400
            message:
              Bug#16095534 CRASH: PREPARED STATEMENT CRASHES IN ITEM_BOOL_FUNC2::FIX_LENGTH_AND_DEC
              The problem happened due to broken left expression in Item_in_optimizer object.
              In case of the bug left expression is runtime created Item_outer_ref item which
              is deleted at the end of the statement and one of Item_in_optimizer arguments
              becomes bad when re-executed. The fix is to use real_item() instead of original
              left expression. Note: It feels a bit weird that after preparing, the field is
              directly part of the generated Item_func_eq, whereas in execution it is replaced
              with an Item_outer_ref wrapper object.
------------------------------------------------------------
revno: 5682
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-win32
timestamp: Tue 2013-05-07 10:28:26 +0200
message:
  Bug#11745828: MYSQL.H #DEFINES __WIN__
  
  The problem was that we define __WIN__ when building on Windows.
  According to C/C++ standard:
  "All identifiers that begin with an underscore and either an uppercase
  letter or another underscore are always reserved for any use."
  Another problem was that we currently have a confusing mix of
  __WIN__ and _WIN32 checks.
  
  According to the MSDN documentation we always can use _WIN32.
  "Defined for applications for Win32 and Win64. Always defined."
  Since we don't support other Windows compilers, we can use _WIN32.
  
  Note that _WIN32 means 64 bit Windows as well, not just 32 bit.
  Where 32/64 bit checks are needed, we should use a combination of
  _WIN32 and _WIN64 checks.
  
  This patch removes  the __WIN__ define and replaces all usages by _WIN32.
------------------------------------------------------------
revno: 5681 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug16513588_mysql-trunk
timestamp: Tue 2013-05-07 13:39:01 +0530
message:
  Null Merge
    ------------------------------------------------------------
    revno: 3902.239.9 [merge]
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug16513588_mysql-5.6
    timestamp: Tue 2013-05-07 13:35:38 +0530
    message:
      Null Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.5
        committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
        branch nick: Bug16513588_mysql-5.5
        timestamp: Tue 2013-05-07 13:30:25 +0530
        message:
          Bug#16513588:"PREPARE_COMMIT_MUTEX" IS NOT FREED DURING
          TRANSACTION ROLLBACK
          
          Problem:
          =======
          "prepare_commit_mutex" is acquired during "innobase_xa_prepare"
          and it is freed only in "innobase_commit". After prepare,
          if the commit operation fails the transaction is rolled back
          but the mutex is not released.
          
          Analysis:
          ========
          During transaction commit process transaction is prepared and
          the "prepare_commit_mutex" is acquired to preserve the order
          of commit. After prepare write to binlog is initiated.
          
          File: sql/handler.cc
                if (error || (is_real_trans && xid &&
          ----->             (error= !(cookie= tc_log->log_xid(thd, xid)))))
                {
                  ha_rollback_trans(thd, all);
          
          In the above code "tc_log->log_xid" operation fails.
          
          When the write to binlog fails the transaction is rolled back
          with out freeing the mutex. A subsequent "INSERT" operation
          tries to acquire the same mutex during its commit process
          and the server aborts.
          
          Fix:
          ===
          "prepare_commit_mutex" is freed during "innobase_rollback".
------------------------------------------------------------
revno: 5680 [merge]
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-05-07 08:56:04 +0100
message:
  BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION
  
  Merge from mysql-5.6 into mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.239.8
    committer: Nuno Carvalho <nuno.carvalho@oracle.com>
    branch nick: mysql-5.6-cleanup_after_query
    timestamp: Tue 2013-05-07 08:46:27 +0100
    message:
      BUG#16223835: UNEXPECTED EMPTY RESULTS OUT OF SHOW COMMANDS AFTER DUP GTID_NEXT TRANSACTION
      
      When a transaction was skipped due to its GTID was already logged,
      until GTID_NEXT was set to a different GTID, all the following
      executed transactions were incorrectly skipped.
      
      To avoid this incorrect behaviour, all executed transactions and
      skipped transactions on AUTOCOMMIT=0 mode or which implicit commit
      are marked as undefined (GTID_NEXT.type = UNDEFINED_GROUP) when them
      commit or rollback. So when a second transaction is executed for the
      same SET @@SESSION.GTID_NEXT command a error is thrown.
------------------------------------------------------------
revno: 5679
committer: Matthias.Leich <matthias.leich@oracle.com>
branch nick: mysql-trunk_WL6924_merge
timestamp: Mon 2013-05-06 20:57:34 +0200
message:
  WL#6924 Migrate funcs_1 suite to run with innodb engine
------------------------------------------------------------
revno: 5678 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 20:00:21 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.239.7 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 19:59:38 +0530
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.4 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-06 19:57:49 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
------------------------------------------------------------
revno: 5677 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 19:55:02 +0530
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.239.6 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 19:52:48 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
------------------------------------------------------------
revno: 5676 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 19:49:14 +0530
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.240.1 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 18:45:55 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.526.1 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-06 17:13:20 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.6
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Mon 2013-05-06 16:28:56 +0530
            message:
              Bug #16722314 FOREIGN KEY ID MODIFIED DURING EXPORT
              Bug #16754901 PARS_INFO_FREE NOT CALLED IN DICT_CREATE_ADD_FOREIGN_TO_DICTIONARY
              
              Problem:
              
              There are two situations here.  The constraint name is explicitly
              given by the user and the constraint name is automatically generated
              by InnoDB.  In the case of generated constraint name, it is formed by
              adding table name as prefix.  The table names are stored internally in
              my_charset_filename.  In the case of constraint name explicitly given
              by the user, it is stored in UTF8 format itself.  So, in some
              situations the constraint name is in utf8 and in some situations it is
              in my_charset_filename format.  Hence this problem.
              
              Solution:
              
              Always store the foreign key constraint name in UTF-8 even when
              automatically generated.
              
              Bug #16754901 PARS_INFO_FREE NOT CALLED IN DICT_CREATE_ADD_FOREIGN_TO_DICTIONARY
              
              Problem:
              
              There was a memory leak in the function dict_create_add_foreign_to_dictionary().
              The allocated pars_info_t object is not freed in the error code path.
              
              Solution:
              
              Allocate the pars_info_t object after the error checking.
              
              rb#2368 in review
------------------------------------------------------------
revno: 5675
committer: Nirbhay Choubey <nirbhay.choubey@oracle.com>
branch nick: B11761458-postfix-trunk
timestamp: Mon 2013-05-06 19:13:39 +0530
message:
  Bug#11761458 - postfix
------------------------------------------------------------
revno: 5674 [merge]
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Mon 2013-05-06 15:30:07 +0200
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.239.5 [merge]
    committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
    branch nick: mysql-5.6-test
    timestamp: Mon 2013-05-06 15:09:20 +0200
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.525.3
        committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
        branch nick: mysql-5.5-test
        timestamp: Mon 2013-05-06 15:01:57 +0200
        message:
          Bug#16757869: INNODB: POSSIBLE REGRESSION IN 5.5.31, BUG#16004999
          
          The problem was that if UPDATE with subselect caused a
          deadlock inside InnoDB, this deadlock was not properly
          handled by the SQL layer. This meant that the SQL layer
          would try to unlock the row after InnoDB had rolled
          back the transaction. This caused an assertion inside
          InnoDB.
            
          This patch fixes the problem by checking for errors
          reported by SQL_SELECT::skip_record() and not calling
          unlock_row() if any errors have been reported.
          
          This bug is similar to Bug#13586591, but for UPDATE
          rather than DELETE. Similar issues in filesort/opt_range/
          sql_select will be investigated and handled in the scope
          of Bug#16767929
------------------------------------------------------------
revno: 5673
committer: Akhila Maddukuri<akhila.x.maddukuri@oracle.com>
branch nick: migration
timestamp: Mon 2013-05-06 17:55:16 +0530
message:
  WL#6920 Migrate internal test suites to run with innodb storage engine
------------------------------------------------------------
revno: 5672 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 14:39:49 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.239.4
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 14:34:12 +0300
    message:
      Bug#16765255 Bug#16735660 ASSERT TABLE2 == NULL NOT FIXED COMPLETELY
      
      Fix a regression introduced by
      Bug#16593427 ROLLBACK OF RECOVERED TRANSACTION CORRUPTS CREATE INDEX
      
      The fix in Bug#16735660 was incomplete.
      
      Approved on IM by Jimmy Yang.
------------------------------------------------------------
revno: 5671 [merge]
committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 12:37:38 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 3902.239.3
    author: balasubramanian.kandasamy@oracle.com
    committer: MySQL Build Team <mysql-build@oss.oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 12:33:06 +0200
    message:
      Raise version number after cloning 5.6.12
------------------------------------------------------------
revno: 5670 [merge]
committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 11:08:21 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 3902.239.2 [merge]
    tags: clone-5.6.12-build
    committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 11:02:01 +0200
    message:
      Empty version change upmerge
        ------------------------------------------------------------
        revno: 2875.525.2 [merge]
        committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-06 10:56:48 +0200
        message:
          Empty version change upmerge
            ------------------------------------------------------------
            revno: 2661.880.5
            author: murthy.narkedimilli@oracle.com
            committer: Murthy Narkedimilli <murthy.narkedimilli@oracle.com>
            branch nick: mysql-5.1
            timestamp: Mon 2013-05-06 10:25:03 +0200
            message:
              Raise version number after cloning 5.1.70
------------------------------------------------------------
revno: 5669 [merge]
committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 10:31:47 +0200
message:
  Empty version change upmerge
    ------------------------------------------------------------
    revno: 3902.239.1 [merge]
    committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 10:22:08 +0200
    message:
      Empty version change upmerge
        ------------------------------------------------------------
        revno: 2875.525.1
        author: balasubramanian.kandasamy@oracle.com
        committer: Balasubramanian Kandasamy <balasubramanian.kandasamy@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-06 09:51:25 +0200
        message:
          Raise version number after cloning 5.5.32
------------------------------------------------------------
revno: 5668 [merge]
committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-05-06 12:58:32 +0530
message:
  BUG#16194302: Merge from 5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.235.36 [merge]
    committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-05-06 12:32:25 +0530
    message:
      BUG#16194302: Merge from 5.5 to 5.6
        ------------------------------------------------------------
        revno: 2875.524.11
        committer: Ashish Agarwal<ashish.y.agarwal@oracle.com>
        branch nick: mysql-5.5
        timestamp: Mon 2013-05-06 11:50:23 +0530
        message:
          Bug#16194302: SUPPORT FOR FLOATING-POINT SYSTEM VARIABLES
                        USING THE PLUGIN INTERFACE.
          
          ISSUE: No support for floating-point plugin
                 system variables.
          
          SOLUTION: Allowing plugins to define and expose floating-point
                    system variables of type double. MYSQL_SYSVAR_DOUBLE
                    and MYSQL_THDVAR_DOUBLE are added.
          
          ISSUE: Fractional part of the def, min, max values of system
                 variables are ignored.
          
          SOLUTION: Adding functions that are used to store the raw
                    representation of a double in the raw bits of unsigned
                    longlong in a way that the binary representation
                    remains the same.
------------------------------------------------------------
revno: 5667
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug11864205
timestamp: Mon 2013-05-06 08:54:53 +0200
message:
  Bug#11864205: PLUGIN BOOLEAN VARIABLES DON'T BEHAVE WELL ON
                UNSIGNED-CHAR MACHINES
  
  Don't assign negative values to my_bool. On platforms where char is
  unsigned, (or with -funsigned-char) -1 wraps around to 255.
------------------------------------------------------------
revno: 5666 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-03 17:01:20 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.35 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-05-03 16:56:38 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.524.10
        tags: clone-5.5.32-build
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Fri 2013-05-03 16:39:17 +0300
        message:
          Attempt to fix a test failure on Windows
          by not accessing a file while the server is running.
------------------------------------------------------------
revno: 5665
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-05-03 12:03:52 +0300
message:
  Bug#16759605 PAGE_ZIP_VALIDATE() SHOULD NOT AFFECT COMPRESSION STATISTICS
  
  The debug function page_zip_validate(), which is enabled when
  UNIV_ZIP_DEBUG is defined at compilation time, is invoking
  page_zip_decompress(), which in turn would update some statistics on
  compression. This would make some mysql-test-run tests fail when
  UNIV_ZIP_DEBUG is defined.
  
  page_zip_decompress_low(): Renamed from page_zip_decompress(). Remove
  some header and trailer for updating compression statistics.
  
  page_zip_decompress(): wrapper for page_zip_decompress_low(), with the
  header and trailer for updating the compression statistics.
  
  page_zip_validate_low(): Invoke page_zip_decompress_low() instead of
  page_zip_decompress(). This fixes the bug.
  
  Approved on IM by Jimmy Yang
------------------------------------------------------------
revno: 5664 [merge]
committer: Libing Song <libing.song@oracle.com>
branch nick: mysql-trunk-wl6355
timestamp: Fri 2013-05-03 07:43:27 +0800
message:
  Manual Merge
    ------------------------------------------------------------
    revno: 5330.1.1 [merge]
    committer: Libing Song <libing.song@oracle.com>
    branch nick: mysql-trunk-wl6355
    timestamp: Tue 2013-03-19 15:30:54 +0800
    message:
      WL#6355 Semisync: externalize transactions only after ACK received
      
      Abstraction
      ===========
      Before this worklog, semisync waits for slave's ACKs just after engine
      committing. It means other sessions could see the data before it is
      replicated to slave, even through current session is till waiting that
      the 'COMMIT' statement ends successfully.
      
      So there is a chance that data losts integrity if the server crashes just
      before data is replicated to slave and any other session already read the
      data and is done some operations.
      
      This worklog provides users an alternative semisync wait point which
      can guaratee that other sessions could not see the data before it
      replicated to slave.
      
      
      Implementation
      ==============
      The worklog added a semisync master option called
      rpl_semi_sync_master_wait_point. It also a global system variable which
      can be changed dynamically.
      
      It is an enumaration and has two possible values:
      - AFTER_COMMIT
        It means the original behaviur. Semisync waits just after engine
        committing.
      
      - AFTER_SYNC
        It means semisync waits just after binlog file is synced to disk. It is
        before engine committing and can guaratee other sessions could not
        see the data before it is replicated to slave.
        It is the new thing implemented in this patch.
      
      The default value of rpl_semi_sync_master_wait_point is AFTER_SYNC.
      
      Replication interface is changed, so the major version of replication
      interface is increased. It means the plugin can not be used on the old
      servers, vice versa.
        ------------------------------------------------------------
        revno: 5204.1.1
        committer: Libing Song <libing.song@oracle.com>
        branch nick: mysql-trunk-wl6355
        timestamp: Wed 2013-03-06 17:39:02 +0800
        message:
          WL#6355 Semisync: externalize transactions only after ACK received
          
          Abstraction
          ===========
          Before this worklog, semisync waits for slave's ACKs just after engine
          committing. It means other sessions could see the data before it is
          replicated to slave, even through current session is till waiting that
          the 'COMMIT' statement ends successfully.
          
          So there is a chance that data losts integrity if the server crashes just
          before data is replicated to slave and any other session already read the
          data and is done some operations.
          
          This worklog provides users an alternative semisync wait point which
          can guaratee that other sessions could not see the data before it
          replicated to slave.
          
          
          Implementation
          ==============
          The worklog added a semisync master option called
          rpl_semi_sync_master_wait_point. It also a global system variable which
          can be changed dynamically.
          
          It is an enumaration and has two possible values:
          - AFTER_COMMIT
            It means the original behaviur. Semisync waits just after engine
            committing.
          
          - AFTER_SYNC
            It means semisync waits just after binlog file is synced to disk. It is
            before engine committing and can guaratee other sessions could not
            see the data before it is replicated to slave.
            It is the new thing implemented in this patch.
          
          The default value of rpl_semi_sync_master_wait_point is AFTER_SYNC.
------------------------------------------------------------
revno: 5663 [merge]
committer: Nuno Carvalho <nuno.carvalho@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 21:55:39 +0100
message:
  BUG#16715809: REPLICATION WAS BROKEN WHILE EXECUTING FLUSH TABLES
  
  Merge from mysql-5.6 into mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.34
    committer: Nuno Carvalho <nuno.carvalho@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 21:52:14 +0100
    message:
      BUG#16715809: REPLICATION WAS BROKEN WHILE EXECUTING FLUSH TABLES
      
      Fix for BUG 16062608, which disallowed commands that were not
      flagged as write commands but implicit commit when GTID_NEXT type
      is different of AUTOMATIC, introduced some regressions, more
      precisely made some commands to break replication.
      
      In order to fix this incorrect behaviour, that fix was reverted.
------------------------------------------------------------
revno: 5662 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 22:16:27 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.33
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 22:02:59 +0300
    message:
      Bug#16754776 MEMORY LEAK IN TRX_ROLLBACK_OR_CLEAN_RECOVERED()
      
      trx_rollback_resurrected(): Free the trx object after calling
      trx_cleanup_at_db_startup() or trx_rollback_active().
      
      rb#2366 approved by Kevin Lewis
------------------------------------------------------------
revno: 5661 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-16437940
timestamp: Thu 2013-05-02 13:56:16 +0200
message:
  Automerge BUG#16437940: 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.235.32
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 13:53:53 +0200
    message:
      Bug#16437940: BAD CHANGE FROM REF TO RANGE DUE TO HEURISTICS
      
      The MySQL optimizer has the following heuristic: "if decision 
      is to use ref access on index 'i', and it is possible to use 
      range access utilizing more keyparts than ref on the same 
      index 'i' => switch to range access".
      
      This heuristic makes sense when ref access refers to a 
      constant, but is not so good when it refers to a column of a 
      table earlier in the join sequence. In this case the range 
      access method will not utilize the join condition.
      
      Fix: don't apply the heuristic if 'ref' access refers to a 
      column of another table.
------------------------------------------------------------
revno: 5660 [merge]
committer: Anil Toshniwal <anil.toshniwal@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 16:52:17 +0530
message:
  Merge fix for Bug#16737332 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.235.31
    committer: Anil Toshniwal <anil.toshniwal@oracle.com>
    branch nick: mysql-5.6.11
    timestamp: Thu 2013-05-02 16:50:08 +0530
    message:
      Bug#16737332 MEMORY LEAK IN DICT_CHECK_TABLESPACES_AND_STORE_MAX_ID()
      Problem: Memory leak in dict_check_tablespaces_and_store_max_id() when
      space_id is zero.
      
      Approved by Marko. rb#2360
------------------------------------------------------------
revno: 5659 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 16:24:32 +0530
message:
  Merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.235.30
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 16:22:57 +0530
    message:
      BUG#11765644: DEBUG 'D' LIST SHOULD STAY EMPTY AFTER SET
                    DEBUG="+D,<SYMBOL>"
      PROBLEM AND FIX:
      When the debug 'd' flag has been set to empty, then all
      DBUG_ macros are enabled. But if one then sets debug="
      +d,foo" then only foo, all others are turned off. The
      expected/intended behaviour should be to add debug for
      'symbol' in addition to whatever was enabled before.
      The fix adds keyword to the stack of active keyword list
      if debug was not enabled for all symbols. Also turn debug
      off if the last keyword is removed from the stack of
      keywords. NOTE: This shall require a change in the docs
      to reflect the changed behaviour in this bug
------------------------------------------------------------
revno: 5658 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 13:06:38 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.29
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 13:02:45 +0300
    message:
      Fix a race condition in the test.
    ------------------------------------------------------------
    revno: 3902.235.28
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 13:02:06 +0300
    message:
      Make the test work with different page sizes.
------------------------------------------------------------
revno: 5657
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Thu 2013-05-02 11:24:38 +0200
message:
  Bug#13252623 UNPORTABLE USAGE OF VA_LIST IN SQL-COMMON/CLIENT_PLUGIN.C
  
  The literal '0' isn't necessarily a valid VA_LIST.
------------------------------------------------------------
revno: 5656
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 14:37:13 +0530
message:
  - removing failing TCs as bug is still open. Idea was to keep it on trunk and once bug is fixed it should pass normally
------------------------------------------------------------
revno: 5655 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Thu 2013-05-02 13:58:20 +0530
message:
  Bug#16346367 : QUERY PROC RE-EXECUTE OF STORED ROUTINE, INEFFICIENT QUERY PLAN
  
  patch for the test case failure in DAILY-TRUNK with 
  "--mysqld=--query_cache_type=1 --mysqld=--query_cache_size=1M"
    ------------------------------------------------------------
    revno: 3902.235.27
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Thu 2013-05-02 13:57:09 +0530
    message:
      Bug#16346367 : QUERY PROC RE-EXECUTE OF STORED ROUTINE, 
      INEFFICIENT QUERY PLAN
            
        --patch for the test case failure in DAILY-TRUNK with 
        "--mysqld=--query_cache_type=1 --mysqld=--query_cache_size=1M"
------------------------------------------------------------
revno: 5654 [merge]
committer: Jorgen Loland <jorgen.loland@oracle.com>
branch nick: mysql-trunk-16697792
timestamp: Thu 2013-05-02 09:38:08 +0200
message:
  Automerge BUG#16697792 5.6 -> trunk
    ------------------------------------------------------------
    revno: 3902.235.26
    committer: Jorgen Loland <jorgen.loland@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 09:36:04 +0200
    message:
      Bug#16697792: POOR EXECUTION PLAN WHEN ORDER BY WITH LIMIT X
      
      When we have a LIMIT that is lower than the row estimate on 
      the first table, the optimizer checks whether or not it's 
      possible to switch to an index that provides correct ordering.
      If there is, execution can be short-cut'ed immediately after
      finding 'limit' number of records. The optimizer (in 
      make_join_select()) will in such cases go through all ORDER BY
      items and make note of all indexes that can be used to 
      provide ordering for that item and then run the range optimizer
      to see if changing index makes sense.
      
      That happens for this bug too. make_join_select() looks at 
      the ORDER BY clause and finds indexes that cover the fields.
      The range optimizer is then run to see if those indexes are
      useful. In the bug, the indexes with that index number may not
      be used, so range access is discarded. The problem is that the 
      first table - the one we run range optimizer for - is not the 
      same table referred to in the ORDER BY clause. Thus, the range 
      optimizer will check if an index in a different table is 
      useful.
      
      The fix is to check if the fields in the ORDER BY clause are 
      from the table being analyzed, and leave the query plan as 
      earlier computed if any of them belong to a different table.
------------------------------------------------------------
revno: 5653 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 10:29:38 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.25
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-05-02 10:23:54 +0300
    message:
      Remove a race condition and unnecessary filtering from a test case.
------------------------------------------------------------
revno: 5652
committer: Krunal Bauskar krunal.bauskar@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 12:46:58 +0530
message:
  - bug#16752546: HITTING ASSERT: (TRX)->IN_RO_TRX_LIST == ((TRX)->READ_ONLY || !(TRX)->RSEG)
    - Added TCs for bug. bug is yet to be fixed.
------------------------------------------------------------
revno: 5651
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-05-02 09:46:45 +0300
message:
  Bug#16559119 MY_VSNPRINTF DOES NOT UNDERSTAND MICROSOFT I64 AND I32
  LENGTH MODIFIERS
  
  Replace the non-standard "I64" and "I32" length modifiers with "ll"
  and "l" on Windows, so that they will be understood both by
  my_snprintf() and ut_snprintf(). This was tested by Mattias Jonsson
  and Kevin Lewis.
  
  Add unit tests for ut_snprintf() and my_snprintf(), but comment out
  most unit tests for Windows, waiting for Bug#16559254 to be fixed.
  
  rb#2321 approved by Kevin Lewis
------------------------------------------------------------
revno: 5650 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Wed 2013-05-01 12:50:24 +0530
message:
  Bug#16296268 : UNEXCEPTED "USING WHERE" IN "EXPLAIN UPDATE/DELETE"
  
  Merge fix for Bug#16296268 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.235.24
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Wed 2013-05-01 12:43:04 +0530
    message:
      Bug#16296268 : UNEXCEPTED "USING WHERE" IN "EXPLAIN UPDATE/DELETE"
      
      Problem:-
      In a single-table update, when there is a constant equality predicate
      on a key.The bug reporter is expecting explain output type as const.
      
      Analysis:-
      In query like
      create table tb(id int primary key , c int); 
      
      mysql> explain update tb set c=2 where id=1\G
      id    1
      select_type    SIMPLE
      table    tb
      type    range            
      possible_keys    PRIMARY
      key    PRIMARY
      key_len    4
      ref    NULL
      rows    1                
      Extra    Using where 
      
      EXPLAIN does not print type: eq_ref/const even though we have an equality 
      predicate on a Unique key field.
      
      However, we can't  show const/eq_ref as range access is used, and 
      single-table UPDATE/DELETE "optimizer" does not even consider index 
      lookups. The proper fix for this bug would be to make single-table U/D go 
      through the normal query optimizer, but that's a complex task(for which WL#6367 
      Single code path for multi-table and single-table UPDATE(DELETE) is created).
      
      But to improve readability, we are changing value of the ref column to ref:const.
------------------------------------------------------------
revno: 5649 [merge]
committer: Luis Soares <luis.soares@oracle.com>
branch nick: mysql-trunk-push
timestamp: Tue 2013-04-30 22:22:09 +0100
message:
  BUG#16532543
  
  Manual merged mysql-5.6 into latest mysql-trunk.
  
  CONFLICTS
  =========
  
  Text conflict in mysql-test/suite/binlog/r/binlog_gtid_mysqlbinlog_row_innodb.result
  Text conflict in mysql-test/suite/binlog/r/binlog_gtid_mysqlbinlog_row_myisam.result
  Text conflict in mysql-test/suite/binlog/r/binlog_gtid_mysqlbinlog_start_stop.result
  Text conflict in mysql-test/suite/binlog/r/binlog_gtid_row_ctype_ucs.result
  Text conflict in mysql-test/suite/binlog/r/binlog_gtid_stm_ctype_ucs.result
    ------------------------------------------------------------
    revno: 3902.235.23 [merge]
    committer: Luis Soares <luis.soares@oracle.com>
    branch nick: mysql-5.6-push
    timestamp: Tue 2013-04-30 22:09:49 +0100
    message:
      BUG#16532543
      
      Automerged bzr bundle into latest mysql-5.6.
        ------------------------------------------------------------
        revno: 3902.238.1
        committer: Luis Soares <luis.soares@oracle.com>
        branch nick: mysql-5.6
        timestamp: Tue 2013-04-30 01:18:43 +0100
        message:
          BUG#16532543: MYSQLBINLOG + MULTIPLE GTID BINLOGS + MYSQL => UNABLE TO
          APPLY LOGS: ERROR 1837
          
          When using mysqlbinlog and mysql client to roll forward two (or more)
          binary logs with GTIDs enabled, the server will report an error when
          switching from the first to the second binary log.
          
          This happens because the variable GTID_NEXT is not properly reset when
          the first log file ends. Therefore, when executing the format
          description event of the second log file, GTID_NEXT will still be set
          to the last transaction identifier from the first log. Ultimately,
          this results in the following error: 1837.
          
          The fix is to make mysqlbinlog to output SET
          @@SESSION.GTID_NEXT=AUTOMATIC when processing a non-fake rotate
          event. Furthermore, even though transactions do not span multiple
          binary log files, they can span multiple relay-log files. Therefore,
          the resetting of GTID_NEXT should only occur if mysqlbinlog is not
          handling a rotate event in the middle of a transaction (as it may be
          the case when parsing relay-logs).
          
          In this patch, I also fixed:
            1. a few replace_regex in some .inc files
            2. some result files that had strange results after the defective
               regex kicked in
------------------------------------------------------------
revno: 5648 [merge]
committer: michael.izioumtchenko@oracle.com
branch nick: mysql_src_cmt3
timestamp: Tue 2013-04-30 20:43:55 +0200
message:
  merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.235.22 [merge]
    committer: michael.izioumtchenko@oracle.com
    branch nick: mysql_src_c563
    timestamp: Tue 2013-04-30 20:42:01 +0200
    message:
      merge from mysql-5.5
        ------------------------------------------------------------
        revno: 2875.524.9 [merge]
        committer: michael.izioumtchenko@oracle.com
        branch nick: mysql_src_c553
        timestamp: Tue 2013-04-30 20:40:38 +0200
        message:
          merge from mysql-5.1
            ------------------------------------------------------------
            revno: 2661.880.4
            tags: clone-5.1.70-build
            committer: michael.izioumtchenko@oracle.com
            branch nick: mysql_src_c2s3
            timestamp: Tue 2013-04-30 20:39:12 +0200
            message:
              Bug#16405422 - RECOVERY FAILURE, ASSERT !RECV_NO_LOG_WRITE
              
              eliminate a race condition over recv_sys->n_addrs which might result in a database corruption
              in recovery, without reporting a recovery error.
              
              recv_recover_page_func(): move the code segment that decrements recv_sys->n_addrs
                to the end of the function, after the call to mtr_commit()
              
              rb://2282 approved by Inaam
------------------------------------------------------------
revno: 5647
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-bug16736461
timestamp: Tue 2013-04-30 20:17:42 +0200
message:
  Bug#16736461: ATOMIC OPERATIONS USING LOCKS ARE BROKEN, WON'T COMPILE 
  
  Compiling with -DMY_ATOMIC_MODE_RWLOCKS=1 or on a platform where
  we don't support lock-less atomics (e.g. ARM), was broken.
  
  With rwlocks atomics, my_atomic_rwlock_t was declared to consist of
  pthread_mutex_t, while the atomics macros assumed that it contained
  mysql_mutex_t.
------------------------------------------------------------
revno: 5646 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Tue 2013-04-30 22:50:53 +0530
message:
  BUG#16222245 - CRASH WITH EXPLAIN FOR A QUERY WITH LOOSE SCAN FOR 
  GROUP BY, MYISAM 
  Merge fix for Bug#16222245 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.235.21 [merge]
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2013-04-30 22:48:21 +0530
    message:
      BUG#16222245 - CRASH WITH EXPLAIN FOR A QUERY WITH LOOSE SCAN FOR 
      GROUP BY, MYISAM 
      Merge fix for Bug#16222245 from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.524.8 [merge]
        committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
        branch nick: 5.5
        timestamp: Tue 2013-04-30 22:46:37 +0530
        message:
          BUG#16222245 - CRASH WITH EXPLAIN FOR A QUERY WITH LOOSE SCAN FOR 
          GROUP BY, MYISAM 
          
          Merge fix for Bug#16222245 from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.3
            committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
            branch nick: 5.1
            timestamp: Tue 2013-04-30 22:38:34 +0530
            message:
              BUG#16222245 - CRASH WITH EXPLAIN FOR A QUERY WITH LOOSE SCAN FOR 
              GROUP BY, MYISAM 
              
              Problem:-
              In a query, where we are using loose index scan optimization and 
              we have MIN() causes segmentation fault(where table row length 
              is less then key_length).
              
              Analysis:
              
              While using loose index scan for MIN(), we call key_copy(), to copy 
              the key data from record.
              This function is using temporary record buffer to store key data 
              from the record buffer.But in case where the key length is greater 
              then the buffer length, this will cause a segmentation fault.
              
              
              Solution:
              Give a proper buffer to store a key record.
------------------------------------------------------------
revno: 5645 [merge]
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk-bug16388996
timestamp: Tue 2013-04-30 21:09:30 +0700
message:
  Null-merge from 5.6
    ------------------------------------------------------------
    revno: 3902.235.20
    committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
    branch nick: mysql-5.6-bug16388996
    timestamp: Tue 2013-04-30 20:51:41 +0700
    message:
      This is a patch for bug#16388996 - ASSERTION IN TRX_START_IF_NOT_STARTED_LOW
                                         WITH QUERY CACHE ENABLED.
      
      This bug relates to working with XA-transaction when query cache is enabled.
      In some cases when XA-transaction is in a state either IDLE or PREPARED
      the execution of QUERY with query_cache enable could led to a crash for the
      server built in debug mode.
      
      To fix this bug we added checking for a state of XA-transaction before
      looking for the query in the cache. If a state of XA-transaction is an IDLE or
      PREPARED the query cache isn't called to look for the result of query
      execution.
------------------------------------------------------------
revno: 5644 [merge]
committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
branch nick: mysql-trunk-bug16388996
timestamp: Tue 2013-04-30 20:38:35 +0700
message:
  Merge from 5.6 for bug#16388996.
    ------------------------------------------------------------
    revno: 3902.237.1
    committer: Dmitry Shulga <Dmitry.Shulga@oracle.com>
    branch nick: mysql-5.6-bug16388996
    timestamp: Tue 2013-04-30 19:19:44 +0700
    message:
      This is a patch for bug#16388996 - ASSERTION IN TRX_START_IF_NOT_STARTED_LOW
                                         WITH QUERY CACHE ENABLED.
      
      This bug relates to working with XA-transaction when query cache is enabled.
      In some cases when XA-transaction is in a state either IDLE or PREPARED
      the execution of QUERY with query_cache enable could led to a crash for the
      server built in debug mode.
      
      To fix this bug we added checking for a state of XA-transaction before
      looking for the query in the cache. If a state of XA-transaction is an IDLE or
      PREPARED the query cache isn't called to look for the result of query
      execution.
------------------------------------------------------------
revno: 5643
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-review
timestamp: Tue 2013-04-30 15:18:53 +0200
message:
  Bug#16395778 SUBOPTIMAL CODE IN SKIP_TRAILING_SPACE()
  
  Post-push fix: only 4-byte alignment for strings on windows.
------------------------------------------------------------
revno: 5642 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-04-30 15:29:03 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.19
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-04-30 14:57:39 +0300
    message:
      Bug#16735660 ASSERT TABLE2 == NULL, ROLLBACK OF RESURRECTED TXNS,
      DICT_TABLE_ADD_TO_CACHE
      
      trx_resurrect_table_locks(): Do not resurrect locks for tables whose
      tablespace file is missing.
      
      rb#2357 approved by Jimmy Yang
    ------------------------------------------------------------
    revno: 3902.235.18 [merge]
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Tue 2013-04-30 14:45:16 +0300
    message:
      Merge mysql-5.5 to mysql-5.6.
        ------------------------------------------------------------
        revno: 2875.524.7
        committer: Marko M?kel? <marko.makela@oracle.com>
        branch nick: mysql-5.5
        timestamp: Tue 2013-04-30 13:39:50 +0300
        message:
          Bug#16720368 INNODB IGNORES *.IBD FILE BREAKAGE AT STARTUP
          
          After a clean shutdown, InnoDB will not check the *.ibd file headers,
          for maximum performance. This is unchanged before and after this
          patch.
          
          What this fix addresses is the case when crash recovery is
          needed. Previously, InnoDB could load a corrupted tablespace file.
          
          buf_page_is_corrupted(): Add the parameter check_lsn.
          
          fil_check_first_page(): New function, to perform a consistency check
          on the first page of a file. This can be overridden by setting
          innodb_force_recovery.
          
          fil_read_first_page(), fil_open_single_table_tablespace(),
          fil_load_single_table_tablespace(): Invoke fil_check_first_page().
          
          open_or_create_data_files(): Check the status of
          fil_open_single_table_tablespace().
          
          rb#2352 approved by Jimmy Yang
------------------------------------------------------------
revno: 5641
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Tue 2013-04-30 14:59:09 +0300
message:
  Fix a compilation failure with UNIV_DEBUG, without UNIV_SYNC_DEBUG.
------------------------------------------------------------
revno: 5640 [merge]
committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
branch nick: trunk
timestamp: Tue 2013-04-30 14:56:18 +0530
message:
  Bug#16346367 : QUERY PROC RE-EXECUTE OF STORED ROUTINE, INEFFICIENT QUERY PLAN
  
  Merge fix for Bug#16073689 from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.235.17
    committer: Neeraj Bisht <neeraj.x.bisht@oracle.com>
    branch nick: 5.6
    timestamp: Tue 2013-04-30 14:54:09 +0530
    message:
      Bug#16346367 : QUERY PROC RE-EXECUTE OF STORED ROUTINE, INEFFICIENT QUERY PLAN
      
      Problem:-
      In derived tables implementation, We only get to use indexes on derived tables 
      on the first execution of a procedure and  in later execution we are not able 
      to use indexes.
      
      
      Analysis:-
      In case of derived tables, we call add_key_field() to add new fake keys for 
      range optimizer. To choose the best key to read data. After creating the actual 
      keys from this fake keys. 
      We set the variable in TABLE_LIST::derived_keys_ready, to show that actual 
      keys are created.
      This table_list is maintained in the memory after our exection is completed.                       
      So when we call our procedure second time, this TABLE_LIST::derived_keys_ready 
      is already set and we assume that actual keys are already being created, but we 
      will not find any key, which cause change in query execution plan.
      
      Solution:-
      Reset the TABLE_LIST::derived_keys_ready at the time JOIN_TAB::cleanup.
------------------------------------------------------------
revno: 5639 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Tue 2013-04-30 08:57:02 +0200
message:
  local merge
    ------------------------------------------------------------
    revno: 5638.1.1
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: trunk-clean
    timestamp: Tue 2013-04-30 08:25:38 +0200
    message:
      Bug#16395778 SUBOPTIMAL CODE IN SKIP_TRAILING_SPACE()
      
      The aligned reading is only necessary on sparc.
      Removed a strange assert(pointer > 4)
      Added assert(end_words > ptr) instead, which shows that we could remove an if()
      
      Added a simpler 8-byte read for non-sparc platforms, which is a lot faster.
      
      See the accompanying microbenchmark unit tests.
------------------------------------------------------------
revno: 5638 [merge]
committer: Luis Soares <luis.soares@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-04-29 22:58:58 +0100
message:
  BUG#16621923
  
  Manual merge from mysql-5.6.
  
  CONFLICTS
  =========
  
  Text conflict in sql/log_event.cc
    ------------------------------------------------------------
    revno: 3902.235.16 [merge]
    committer: Luis Soares <luis.soares@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-04-29 22:55:26 +0100
    message:
      BUG#16621923
      
      Automerge into latest mysql-5.6.
        ------------------------------------------------------------
        revno: 3902.236.1
        committer: Luis Soares <luis.soares@oracle.com>
        branch nick: mysql-5.6
        timestamp: Mon 2013-04-29 22:51:54 +0100
        message:
          BUG#16621923: RBR: HASH_SCAN LOOKUP MAY FAIL WHEN NULL FIELDS ARE
          INVOLVED
          
          The HASH_SCAN lookup mechanism was not working properly.
          
          This mechanism works as follow: (i) For each before image in an
          Update_rows_log_event or Delete_rows_log_event, it hashes this
          image and saves its coordinates on an hash table. If it is an
          Update_rows_log_event, it also saves the coordinates of the after
          image. (ii) Then the table is scanned once, and each record
          fetched from the physical table is hashed and looked up on the
          hash table. If the lookup succeeds, then the changes are applied.
          And this is fine.
          
          Unfortunately, when a field contains a NULL value, the engine may
          return garbage as the field content. Then the hash of the
          physical record will not match the hash calculated from the
          (Delete_|Update_)rows_log_event. This makes the applier assume
          that it cannot find the record to apply and stop.
          
          This patch fixes this, by discarding from the hash calculation
          those fields that are marked as NULL. This is the bulk of the
          fix. 
          
          Additionally, this patch also: (i) fixes the limitation of not
          considering BLOBs and BIT fields as part of the hash
          calculation. They had not been considered since their data may
          not be stored inside the record itself, but on a different memory
          area. We circumvent this by getting the value explicitly through
          the member function: val_str. Similar pattern may be found in the
          function: mysql_checksum_table. (ii) Fixes some comments and
          indentation. (iii) Refactors a few parts in
          do_hash_scan_and_update_record (splits it into two simpler member
          functions). (iv) Fixes a potential issue with the fact that we
          unpack the before image on top of previous unpacked data, thus
          might have implications with partial rows. We call prepare_record
          before we unpack now. (v) Removes unnecessary memory structures
          for after image positions that are not used.
------------------------------------------------------------
revno: 5637 [merge]
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-review
timestamp: Mon 2013-04-29 16:19:33 +0200
message:
  merge 5.6 => trunk
    ------------------------------------------------------------
    revno: 3902.235.15
    committer: Tor Didriksen <tor.didriksen@oracle.com>
    branch nick: 5.6
    timestamp: Mon 2013-04-29 15:07:37 +0200
    message:
      BUG#16556597: DBUG_PRINT EXPRESSION IS EVALUATED EVEN WHEN
      
      Postpush fix for:
      : error LNK2001: unresolved external symbol _dbug_on_
------------------------------------------------------------
revno: 5636 [merge]
committer: Igor Solodovnikov <igor.solodovnikov@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-04-29 13:44:20 +0300
message:
  Merge from mysql-5.6
    ------------------------------------------------------------
    revno: 3902.235.14
    committer: Igor Solodovnikov <igor.solodovnikov@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-04-29 13:43:32 +0300
    message:
      Bug #16591288 	WINAUTH PLUGIN LEAKS MEMORY AFTER EACH CONNECTION
      
      Memory leak was caused by Security_buffer helper class. Its free() method was implemented to set m_allocated=false after freeing context buffer. Since Security_buffer has no means to set m_allocated back to true this leads to not freeing all subsequent context buffers.
      
      Fixed by:
      - making Security_buffer::m_allocated const object (so it can be assigned by constructor only)
      - rewriting Security_buffer::free() to not alter value of Security_buffer::m_allocated
      - Disallow copying/assignment of Security_buffer class instances to prevent new memory leaks in the future
      
      This patch also fixes minor bugs in Map_cache class.
------------------------------------------------------------
revno: 5635 [merge]
committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-04-29 13:59:23 +0530
message:
  Merge from 5.6 to trunk.
    ------------------------------------------------------------
    revno: 3902.235.13
    committer: Thayumanavar <thayumanavar.x.sachithanantha@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-04-29 13:52:46 +0530
    message:
      BUG#16556597: DBUG_PRINT EXPRESSION IS EVALUATED EVEN WHEN
                    THE CONDITION DOES NOT HOLD. 
      PROBLEM AND FIX:
      DBUG_PRINT("label",("printf-style format",...)) is a macro
      that should evaluate the printf style part when DEBUG is
      enabled and the label keyword is active. However in the
      current code, the printf-style part gets evaluated and the
      condition evaluation for checking whether DEBUG and label
      keyword is active is being done in the function _db_doprnt_
      .This result in CPU cycles being consumed even when no
      --debug option or SET DEBUG is being used.
        The fix redefines the macro DBUG_PRINT so that _db_prnt_
      is being called only when DEBUG and the label keyword is
      active. 
------------------------------------------------------------
revno: 5634 [merge]
committer: Ramil Kalimullin <ramil.kalimullin@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-04-29 11:50:03 +0400
message:
  Auto-merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.235.12
    committer: Ramil Kalimullin <ramil.kalimullin@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-04-29 11:28:02 +0400
    message:
      Bug#12772601 CENTROID FUNCTION ASSERTS: ASSERTION FAILED: N_LINEAR_RINGS > 0
      Bug#16510712 SERVER CRASHES IN GET_POINT ON A GEOMETRY QUERY
      
      Addendum: variable initialization added to keep compiler happy.
------------------------------------------------------------
revno: 5633 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-04-29 09:51:38 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.11
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-04-29 09:48:05 +0300
    message:
      Fix regression from Bug#16593427 fix.
      
      fil_space_create(): Use "%lu" instead of IB_ID_FMT for printing out
      tablespace id, which is 32-bit, not 64-bit in the data files.
------------------------------------------------------------
revno: 5632 [merge]
committer: Manish Kumar<manish.4.kumar@oracle.com>
branch nick: mysql-trunk
timestamp: Mon 2013-04-29 11:19:14 +0530
message:
  Bug#16475866 - START SLAVE AFTER IMPORT OF TABLE-BASED REPOSITORIES GIVES EMPTY
                 ERROR MESSAGE
  
  Upmerge from mysql-5.6 -> mysql-trunk
    ------------------------------------------------------------
    revno: 3902.235.10
    committer: Manish Kumar<manish.4.kumar@oracle.com>
    branch nick: mysql-5.6
    timestamp: Mon 2013-04-29 11:00:16 +0530
    message:
      Bug#16475866 - START SLAVE AFTER IMPORT OF TABLE-BASED REPOSITORIES GIVES EMPTY
                     ERROR MESSAGE
            
      Problem - Trying to START SLAVE after loading slave_master_info and
                slave_relay_log_info into a clean MySQL instance results in an 
                empty error message:
            
                mysql 5.6.10-log (root) [test]> start slave;
                ERROR 1593 (HY000): Fatal error: %s
                      
      Analysis - The slave code just prints the ER(slave_errno) in the start_slave
                 function call and since the error is due to non initialization
                 of the master info and relay log info structures, ie. error number 1593, 
                 the corresponding error message is printed which is " Fatal error: %s ".
            
      Fix - Fixed the problem by introducing a two new error codes for handeling the 
            failure during the initialization of the master info and relay log info
            structure from the repository.
------------------------------------------------------------
revno: 5631 [merge]
committer: Bill Qu <bill.qu@Oracle.com>
branch nick: mysql-trunk
timestamp: Sun 2013-04-28 09:42:24 +0800
message:
  Bug #16666456 	A REGRESSION IN 5.6 CRASH RECOVERY ATOMICITY
  
  Merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.235.9
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-5.6
    timestamp: Sun 2013-04-28 09:21:43 +0800
    message:
      Bug #16666456 	A REGRESSION IN 5.6 CRASH RECOVERY ATOMICITY
      
      A crash commit error causes the last transaction to loss in an InnoDB table after
      RESET MASTER. The root cause is that the prepare phase causes fsync while the
      commit phase does not cause fsync inside InnoDB. That means the last transaction
      is not fsynced inside InnoDB. But RESET MASTER erases binlog events of the last
      transaction. In the following crash commit error, InnoDB has the last prepared
      row on recovery and calls server on how to deal with the prepared row and server
      does not find relevant binlog events from binary log file and rolls it back finally.
      
      To fix the problem, RESET MASTER should cause to flush logs for storage engines, so
      that the last transaction is fsynced inside storage engines. The same solution to
      internal EXPIRE_LOGS_DAYS. There is not the problem with PURGE BINARY LOGS TO, as
      the binlog events of last transaction in current binlog file is not purged.
------------------------------------------------------------
revno: 5630 [merge]
committer: Ramil Kalimullin <ramil.kalimullin@oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-04-27 18:04:12 +0400
message:
  Manual merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.235.8
    committer: Ramil Kalimullin <ramil.kalimullin@oracle.com>
    branch nick: b12772601-5.6
    timestamp: Sat 2013-04-27 17:23:03 +0400
    message:
      Bug#12772601 CENTROID FUNCTION ASSERTS: ASSERTION FAILED: N_LINEAR_RINGS > 0
      Bug#16510712 SERVER CRASHES IN GET_POINT ON A GEOMETRY QUERY
      
      Problem: most of the Geometry methods that work with WKB
      did not properly validate input data, so they could
      access memory beyond the range of provided data, which
      led to crashes and/or valgrind errors.
      
      Fix: introducing new class wkb_parser with methods
      that strictly validate the provided WKB data;
      convenience changes and clean-ups in the related code.
------------------------------------------------------------
revno: 5629 [merge]
committer: Bill Qu <bill.qu@Oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-04-27 18:37:47 +0800
message:
  Bug#16579028 	"SEMI-SYNC MASTER WAIT FOR REPLY FAIL TO GET WAIT TIME" HAPPENS OCCASIONALLY
  
  Merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.235.7
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-5.6
    timestamp: Sat 2013-04-27 18:25:29 +0800
    message:
      Bug#16579028 	"SEMI-SYNC MASTER WAIT FOR REPLY FAIL TO GET WAIT TIME" HAPPENS OCCASIONALLY
        
      The error of 'Semi-sync master wait for reply fail to get wait time'
      happens if the time taken by dump thread on waiting for binlog reply
      from slave is less than zero.
        
      The precision of OS timer apparently causes this problem. But this
      problem will not affect any function of the server, so it's not
      good to print an error into the log file as the error will confuse
      the user. It's more appropriate to print a note into the log file.
------------------------------------------------------------
revno: 5628 [merge]
committer: Bill Qu <bill.qu@Oracle.com>
branch nick: mysql-trunk
timestamp: Sat 2013-04-27 16:42:27 +0800
message:
  Bug #13004581 	BLACKHOLE BINARY LOG WITH ROW IGNORES UPDATE AND DELETE STATEMENTS
  
  Merge from mysql-5.6.
    ------------------------------------------------------------
    revno: 3902.235.6 [merge]
    committer: Bill Qu <bill.qu@Oracle.com>
    branch nick: mysql-5.6
    timestamp: Sat 2013-04-27 16:27:39 +0800
    message:
      Bug #13004581 	BLACKHOLE BINARY LOG WITH ROW IGNORES UPDATE AND DELETE STATEMENTS
      
      Merge from 5.5.
        ------------------------------------------------------------
        revno: 2875.524.6
        committer: Bill Qu <bill.qu@Oracle.com>
        branch nick: mysql-5.5
        timestamp: Sat 2013-04-27 16:04:54 +0800
        message:
          Bug #13004581 	BLACKHOLE BINARY LOG WITH ROW IGNORES UPDATE AND DELETE STATEMENTS
            
          When logging to the binary log in row, updates and deletes to a BLACKHOLE
          engine table are skipped.
            
          It is impossible to log binary log in row format for updates and deletes to
          a BLACKHOLE engine table, as no row events can be generated in these cases.
          After fix, generate a warning for UPDATE/DELETE statements that modify a
          BLACKHOLE table, as row events are not logged in row format.
------------------------------------------------------------
revno: 5627
committer: Jon Olav Hauglid <jon.hauglid@oracle.com>
branch nick: mysql-trunk-test
timestamp: Fri 2013-04-26 15:05:25 +0200
message:
  Bug#16729109: FIX COMPILATION WARNINGS WITH GCC 4.8
  
  Fix GCC 4.8 compilation warnings from new checks:
  -Werror=unused-local-typedefs
  -Werror=sizeof-pointer-memaccess
------------------------------------------------------------
revno: 5626 [merge]
committer: Marko M?kel? <marko.makela@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-04-26 12:36:33 +0300
message:
  Merge mysql-5.6 to mysql-trunk.
    ------------------------------------------------------------
    revno: 3902.235.5
    committer: Marko M?kel? <marko.makela@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-04-26 12:16:52 +0300
    message:
      Bug#16593427 ROLLBACK OF RECOVERED TRANSACTION CORRUPTS NON-ONLINE ADD INDEX
      
      Resurrect table IX locks for recovered transactions. This fixes a race
      condition between the rollback of a recovered transaction and creating
      a secondary index in a locked operation. This race condition could
      corrupt the secondary index that is being created.
      
      lock_table_ix_resurrect(), trx_resurrect_table_locks(): New functions.
      
      trx_undo_get_prev_rec_from_prev_page(), trx_undo_get_prev_rec(): Add a
      flag for specifying if the page should be X-latched or S-latched.
      
      lock_remove_recovered_trx_record_locks(): Remove also the table lock
      of a recovered transaction.
      
      mtr_memo_release(): Return a Boolean, indicating if the object was removed.
      
      dict_table_open_on_id(): Replace the Boolean parameter try_drop with a
      new enum dict_table_op_t, with a third value
      DICT_TABLE_OP_LOAD_TABLESPACE to silently load a tablespace when it is
      missing. This is needed to suppress a warning in
      trx_resurrect_table_locks() during the innodb.innodb_bug59641 test.
      
      dict_err_ignore_t: Add the flag DICT_ERR_IGNORE_LOAD, to silently load
      the tablespace when it has not been loaded yet, and to skip loading
      the definitions of incomplete secondary indexes.
      
      dict_check_tablespaces_and_store_max_id(): Replace the Boolean
      parameter in_crash_recovery with a new enum dict_check_t, with a third
      value DICT_CHECK_SOME_LOADED to silently skip tablespaces that were
      already loaded by trx_resurrect_table_locks() during crash recovery.
      This is needed to suppress a warning in trx_resurrect_table_locks()
      during the innodb.innodb_bug59641 test.
      
      rb#2283 approved by Jimmy Yang
------------------------------------------------------------
revno: 5625 [merge]
committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
branch nick: mysql-trunk
timestamp: Fri 2013-04-26 13:48:23 +0530
message:
  Null merge from mysql-5.6 to trunk
    ------------------------------------------------------------
    revno: 3902.235.4
    committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
    branch nick: mysql-5.6
    timestamp: Fri 2013-04-26 13:38:27 +0530
    message:
      Adjusting result file for processlist_priv_ps test.
------------------------------------------------------------
revno: 5624
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-04-25 13:05:13 -0600
message:
  Bug#16403420-ROW FORMAT CHANGING ALTER TABLE FAILS IN
               COMMIT_CACHE_REBUILD, RENAMING
  
  This bug was opened when to a temporary tablespace pre-existed with
  the same name during an ALTER TABLE. This patch does not attempt to
  discover or fix the reason that an orphan temporary tablespace existed.
  Instead it tries to eliminate the chance of that occurring again by
  making the temporary table/tablespace name effectively unique for any
  MySQL database instance.
  
  It does this by adding the current LSN at the end of the previous
  table/file name.  For example; tablename "test/#sql-ib21" becomes
  something like "test/#sql-ib21-1701208" where 1701208 is the
  current_lsn.  Both the lsn and the table ID are needed to assure that
  the name is unique because it is theoretically possible for multiple
  threads to get the same LSN, but they will be working on differrent
  tables.  Also, it is still possible to be able to relate the temporary
  name to the table by the table ID.
  
  Unfortunately, there are some recent testcases that failed because
  they assume to know what the name of a temporary tablename/tablespace
  name will be. One of them ia removed here and the other two are
  salvaged by reading the actual assigned name from
  information_schema.innodb_sys_tables.
  
  Approved by Marko in http://rb.no.oracle.com/rb/r/2306/
------------------------------------------------------------
revno: 5623 [merge]
committer: kevin.lewis@oracle.com
branch nick: mysql-trunk
timestamp: Thu 2013-04-25 12:19:17 -0600
message:
  Merge Bug#16338667 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.235.3
    committer: kevin.lewis@oracle.com
    branch nick: mysql-5.6
    timestamp: Thu 2013-04-25 12:16:51 -0600
    message:
      Bug#16338667 - DROP DATABASE FAILS ON EXTERNAL DATA DIRECTORY
      
      MySQL cleans up the database directory if there are only files that
      it recognizes.  If there are unknown file types, the DROP DATABASE
      will fail.  We forgot to tell the server in ha_innobase::bas_ext()
      that one if the possible extentions of InnoDB files is ".isl".
      
      Approved by Marco in http://rb.no.oracle.com/rb/r/2337/
------------------------------------------------------------
revno: 5622 [merge]
committer: Inaam Rana <inaam.rana@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-04-25 13:28:51 -0400
message:
  merge from 5.6
    ------------------------------------------------------------
    revno: 3902.235.2
    committer: Inaam Rana <inaam.rana@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-04-25 13:26:54 -0400
    message:
      Bug#16723686 MISSING COMMA IN INNODB STATUS BREAKS MEM PARSING
------------------------------------------------------------
revno: 5621 [merge]
committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-04-25 14:12:16 +0530
message:
  BUG#16698172-CANNOT DO POINT-IN-TIME RECOVERY FOR
  SINGLE DATABASE; MYSQLBINLOG
  Merge from mysql-5.5 +
    ------------------------------------------------------------
    revno: 3902.235.1 [merge]
    committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-04-25 12:06:22 +0530
    message:
      BUG#16698172-CANNOT DO POINT-IN-TIME RECOVERY FOR
      SINGLE DATABASE; MYSQLBINLOG
      Merge from mysql-5.5 + set the unflushed_events
      flag to false which is required only for mysql-5.6
        ------------------------------------------------------------
        revno: 2875.524.5
        committer: Venkatesh Duggirala<venkatesh.duggirala@oracle.com>
        branch nick: mysql-5.5
        timestamp: Thu 2013-04-25 11:56:26 +0530
        message:
          BUG#16698172-CANNOT DO POINT-IN-TIME RECOVERY FOR
          SINGLE DATABASE; MYSQLBINLOG
                
          Problem: If last subevent inside a RBR event
          is skipped while replaying a binary log
          using mysqlbinlog with --database=... option,
          generated output is missing end marker('/*!*/;)
          for that RBR event. Thence causing syntax error
          while replaying the generated output.
                
          Fix: Append end marker ('/*!*/;) if the last 
          subevent is getting skipped.
          Append end marker if the last 
          subevent is getting skipped.
------------------------------------------------------------
revno: 5620
committer: Vinay Fisrekar <vinay.fisrekar@oracle.com>
branch nick: mysql-trunk
timestamp: Thu 2013-04-25 10:58:10 +0530
message:
  Adding innodb.innodb_bug14676111 test to experimental as it fails sporadically.
------------------------------------------------------------
revno: 5619 [merge]
committer: Jimmy Yang <jimmy.yang@oracle.com>
branch nick: trunk5
timestamp: Thu 2013-04-25 12:27:23 +0800
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.234.7
    committer: Jimmy Yang <jimmy.yang@oracle.com>
    branch nick: mysql-5.6
    timestamp: Thu 2013-04-25 12:24:47 +0800
    message:
      Backport Bug #16429688 - FTS: SYNTAX ERROR, UNEXPECTED '*', EXPECTING $END
------------------------------------------------------------
revno: 5618 [merge]
committer: Georgi Kodinov <georgi.kodinov@oracle.com>
branch nick: B16680313-trunk
timestamp: Wed 2013-04-24 17:25:29 +0300
message:
  merge 5.6->trunk
    ------------------------------------------------------------
    revno: 3902.234.6 [merge]
    committer: Georgi Kodinov <georgi.kodinov@oracle.com>
    branch nick: B16680313-5.6
    timestamp: Wed 2013-04-24 17:24:06 +0300
    message:
      merge 5.5->5.6
        ------------------------------------------------------------
        revno: 2875.524.4
        committer: Georgi Kodinov <georgi.kodinov@oracle.com>
        branch nick: B16680313-5.5
        timestamp: Wed 2013-04-24 17:21:42 +0300
        message:
          Bug #16680313: CLIENT DOESN'T READ PLUGIN-DIR FROM MY.CNF SET BY
                MYSQL_READ_DEFAULT_FILE
          Parsing of the plugin-dir config file option was not working due to a typo.
          Fixed the typo. No test case can be added due to lack of support for 
          defaults-exitra-file testing in mysql-test-run.pl.
          Thanks to Sinisa for contributing the fix.
------------------------------------------------------------
revno: 5617
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-merge
timestamp: Wed 2013-04-24 14:28:40 +0200
message:
  wl#6960: Refactoring auth code: milestone 1
  
  post push fix: fix broken build of unit tests
------------------------------------------------------------
revno: 5616
committer: Harin Vadodaria <harin.vadodaria@oracle.com>
branch nick: trunk_push
timestamp: Wed 2013-04-24 17:13:58 +0530
message:
  wl#6960: Refactoring auth code: milestone 1,
           new physical file structure
  
  Description: Divided code of sql_acl.* to
               sql/auth dir. Also moved other
               authorization code segments from
               sql_parse.cc to auth dir.
------------------------------------------------------------
revno: 5615
committer: Tor Didriksen <tor.didriksen@oracle.com>
branch nick: trunk-test
timestamp: Wed 2013-04-24 12:55:10 +0200
message:
  Bug#16598851 USE A VECTOR RATHER THAN ITEM** FOR ITEMS_TO_COPY AND COPY_FUNC
  
  Use a vector (Mem_root_array), with push_back() rather than
  Item ***copy_func and assignment to *((*copy_func)++)
------------------------------------------------------------
revno: 5614
committer: Harin Vadodaria <harin.vadodaria@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-04-24 13:50:56 +0530
message:
  Bug#16517756: SET PASSWORD SUCCESS FOR EXTERNAL AUTH USER
                FROM MYSQLDADMIN&MYSQL COMMAND LINE
  
  Description: Fix for test failure on Windows.
------------------------------------------------------------
revno: 5613 [merge]
committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
branch nick: Bug14324766_mysql-trunk
timestamp: Wed 2013-04-24 13:41:37 +0530
message:
  Merge from mysql-5.6 to mysql-trunk
    ------------------------------------------------------------
    revno: 3902.234.5 [merge]
    committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
    branch nick: Bug14324766_mysql-5.6
    timestamp: Wed 2013-04-24 13:38:21 +0530
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.524.3 [merge]
        committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
        branch nick: Bug14324766_mysql-5.5
        timestamp: Wed 2013-04-24 13:34:11 +0530
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.2
            committer: Sujatha Sivakumar <sujatha.sivakumar@oracle.com>
            branch nick: Bug14324766_mysql-5.1
            timestamp: Wed 2013-04-24 13:31:10 +0530
            message:
              Bug#14324766:PARTIALLY WRITTEN INSERT STATEMENT IN BINLOG
              NO ERRORS REPORTED
                    
              Fixing a post push test script failure.
------------------------------------------------------------
revno: 5612 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-04-24 08:51:41 +0200
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.234.4 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-04-24 08:49:27 +0200
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.524.2 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-04-24 08:48:34 +0200
        message:
          Null merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.880.1
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-04-24 08:47:30 +0200
            message:
              Bug #15973904 INNODB PARTITION CODE HOLDS LOCK_OPEN AND SLEEPS WHILE 
              OPENING MISSING PARTITION
              
              In the ha_innobase::open() call, for normal tables, there is no retry logic.
              But for partitioned tables, there is a retry logic introduced as fix for:
              
              http://bugs.mysql.com/bug.php?id=33349  
              https://support.mysql.com/view.php?id=21080
              
              The Bug#33349, does not provide sufficient information to analyze the original
              problem.  The original problem reported by bug#33349 is also minor (just an
              annoyance and no loss of functionality).  Most importantly, the retry logic
              has been introduced without any associated test case.
              
              So we are removing the retry logic for partitioned tables.  When the original
              problem occurs, a different solution will be explored.
------------------------------------------------------------
revno: 5611 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-04-24 08:45:14 +0200
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.234.3 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-04-24 08:43:52 +0200
    message:
      Null merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.524.1
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-04-24 08:42:59 +0200
        message:
          Merge from mysql-5.1 to mysql-5.5
------------------------------------------------------------
revno: 5610 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-04-24 08:35:35 +0200
message:
  Null merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.234.2
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-04-24 08:34:18 +0200
    message:
      Merge from mysql-5.5 to mysql-5.6
------------------------------------------------------------
revno: 5609 [merge]
committer: Shivji Kumar Jha <shivji.jha@oracle.com>
branch nick: mysql-trunk_b16316123
timestamp: Wed 2013-04-24 11:36:54 +0530
message:
  BUG#16316123- MYSQLBINLOG DOES NOT RESET THE "AT" BYTE POSITION COUNTER FOR NEW BINLOG FILE
        
  bzr merge 5.6->trunk
    ------------------------------------------------------------
    revno: 3902.234.1
    committer: Shivji Kumar Jha <shivji.jha@oracle.com>
    branch nick: mysql-5.6_b16316123
    timestamp: Wed 2013-04-24 11:33:56 +0530
    message:
      BUG#16316123- MYSQLBINLOG DOES NOT RESET THE "AT" BYTE POSITION COUNTER FOR NEW BINLOG FILE
      
      Problem:
      mysqlbinlog exits when the given log file has been
      processed by it. The "stop-never" option keeps
      mysqlbinlog connected to the server instead. The
      "stop-never" option also sets the "to-last-log" option
      which instructs mysqlbinlog to not stop at the end
      of the requested binlog from a MySQL server, but
      rather continue printing until the end of the last
      binlog.
      
      The issue was that mysqlbinlog did not reset the
      "# at pos" field before printing the events from
      the next binlog file.
      
      Fix:
      Reset the at position before events from next binlog file
      are picked by mysqlbinlog --stop-never. In particular,
      reset the position before printing the fake rotate event.
------------------------------------------------------------
revno: 5608 [merge]
committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
branch nick: mysql-trunk
timestamp: Wed 2013-04-24 07:20:27 +0200
message:
  Merge from mysql-5.6 to mysql-5.7
    ------------------------------------------------------------
    revno: 3902.231.25 [merge]
    committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
    branch nick: mysql-5.6
    timestamp: Wed 2013-04-24 06:58:29 +0200
    message:
      Merge from mysql-5.5 to mysql-5.6
        ------------------------------------------------------------
        revno: 2875.519.63 [merge]
        committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
        branch nick: mysql-5.5
        timestamp: Wed 2013-04-24 06:46:44 +0200
        message:
          Merge from mysql-5.1 to mysql-5.5
            ------------------------------------------------------------
            revno: 2661.878.23
            committer: Annamalai Gurusami <annamalai.gurusami@oracle.com>
            branch nick: mysql-5.1
            timestamp: Wed 2013-04-24 06:09:39 +0200
            message:
              Bug #15973904 INNODB PARTITION CODE HOLDS LOCK_OPEN AND SLEEPS WHILE 
              OPENING MISSING PARTITION
              
              In the ha_innobase::open() call, for normal tables, there is no retry logic.
              But for partitioned tables, there is a retry logic introduced as fix for:
              
              http://bugs.mysql.com/bug.php?id=33349  
              https://support.mysql.com/view.php?id=21080
              
              The Bug#33349, does not provide sufficient information to analyze the original
              problem.  The original problem reported by bug#33349 is also minor (just an
              annoyance and no loss of functionality).  Most importantly, the retry logic
              has been introduced without any associated test case.
              
              So we are removing the retry logic for partitioned tables.  When the original
              problem occurs, a different solution will be explored.
------------------------------------------------------------
revno: 5607
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Tue 2013-04-23 21:38:10 +0200
message:
  Fix bothched undo of undo of merge from 5.7.1-release
------------------------------------------------------------
revno: 5606
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Tue 2013-04-23 18:24:02 +0200
message:
  Undo temp changes in 5.7.1-release
------------------------------------------------------------
revno: 5605 [merge]
committer: Bjorn Munch <bjorn.munch@oracle.com>
branch nick: main-tr
timestamp: Tue 2013-04-23 18:19:11 +0200
message:
  Merge from 5.7.1-release
    ------------------------------------------------------------
    revno: 5205.1.11
    tags: mysql-5.7.1
    committer: Bjorn Munch <bjorn.munch@oracle.com>
    branch nick: rel-571
    timestamp: Wed 2013-04-03 10:55:04 +0200
    message:
      Merge 16522662 trunk -> 5.7.1
